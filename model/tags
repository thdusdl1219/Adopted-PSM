!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AARFCD_WIFI_MANAGER_H	aarfcd-wifi-manager.h	22;"	d
AARF_WIFI_MANAGER_H	aarf-wifi-manager.h	22;"	d
ACK_FAST	mac-low.h	/^    ACK_FAST,$/;"	e	enum:ns3::MacLowTransmissionParameters::__anon2
ACK_NONE	mac-low.h	/^    ACK_NONE,$/;"	e	enum:ns3::MacLowTransmissionParameters::__anon2
ACK_NORMAL	mac-low.h	/^    ACK_NORMAL,$/;"	e	enum:ns3::MacLowTransmissionParameters::__anon2
ACK_SUPER_FAST	mac-low.h	/^    ACK_SUPER_FAST,$/;"	e	enum:ns3::MacLowTransmissionParameters::__anon2
AC_BE	qos-utils.h	/^  AC_BE = 0,$/;"	e	enum:ns3::AcIndex
AC_BE_NQOS	qos-utils.h	/^  AC_BE_NQOS = 4,$/;"	e	enum:ns3::AcIndex
AC_BK	qos-utils.h	/^  AC_BK = 1,$/;"	e	enum:ns3::AcIndex
AC_UNDEF	qos-utils.h	/^  AC_UNDEF$/;"	e	enum:ns3::AcIndex
AC_VI	qos-utils.h	/^  AC_VI = 2,$/;"	e	enum:ns3::AcIndex
AC_VO	qos-utils.h	/^  AC_VO = 3,$/;"	e	enum:ns3::AcIndex
ADDR1	wifi-mac-header.h	/^    ADDR1,$/;"	e	enum:ns3::WifiMacHeader::AddressType
ADDR2	wifi-mac-header.h	/^    ADDR2,$/;"	e	enum:ns3::WifiMacHeader::AddressType
ADDR3	wifi-mac-header.h	/^    ADDR3,$/;"	e	enum:ns3::WifiMacHeader::AddressType
ADDR4	wifi-mac-header.h	/^    ADDR4$/;"	e	enum:ns3::WifiMacHeader::AddressType
ADHOC_STA	edca-txop-n.h	/^  ADHOC_STA,$/;"	e	enum:ns3::TypeOfStation
ADHOC_WIFI_MAC_H	adhoc-wifi-mac.h	23;"	d
AMPDU_SUBFRAME_HEADER_H	ampdu-subframe-header.h	22;"	d
AMPDU_TAG_H	ampdu-tag.h	22;"	d
AMRR_WIFI_MANAGER_H	amrr-wifi-manager.h	22;"	d
AMSDU_SUBFRAME_HEADER_H	amsdu-subframe-header.h	22;"	d
AP	edca-txop-n.h	/^  AP,$/;"	e	enum:ns3::TypeOfStation
APARF_WIFI_MANAGER_H	aparf-wifi-manager.h	22;"	d
AP_WIFI_MAC_H	ap-wifi-mac.h	24;"	d
ARF_WIFI_MANAGER_H	arf-wifi-manager.h	22;"	d
ARts	rraa-wifi-manager.cc	/^RraaWifiManager::ARts (RraaWifiRemoteStation *station)$/;"	f	class:ns3::RraaWifiManager
ASSOCIATED	sta-wifi-mac.h	/^    ASSOCIATED,$/;"	e	enum:ns3::StaWifiMac::MacState
AarfWifiManager	aarf-wifi-manager.cc	/^AarfWifiManager::AarfWifiManager ()$/;"	f	class:ns3::AarfWifiManager
AarfWifiManager	aarf-wifi-manager.h	/^class AarfWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
AarfWifiRemoteStation	aarf-wifi-manager.cc	/^struct AarfWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
AarfcdWifiManager	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::AarfcdWifiManager ()$/;"	f	class:ns3::AarfcdWifiManager
AarfcdWifiManager	aarfcd-wifi-manager.h	/^class AarfcdWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
AarfcdWifiRemoteStation	aarfcd-wifi-manager.cc	/^struct AarfcdWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
AcIndex	qos-utils.h	/^enum AcIndex$/;"	g	namespace:ns3
AccessTimeout	dcf-manager.cc	/^DcfManager::AccessTimeout (void)$/;"	f	class:ns3::DcfManager
AccumulateFirstFragment	mac-rx-middle.cc	/^  void AccumulateFirstFragment (Ptr<const Packet> packet)$/;"	f	class:ns3::OriginatorRxStatus
AccumulateFragment	mac-rx-middle.cc	/^  void AccumulateFragment (Ptr<const Packet> packet)$/;"	f	class:ns3::OriginatorRxStatus
AccumulateLastFragment	mac-rx-middle.cc	/^  Ptr<Packet> AccumulateLastFragment (Ptr<const Packet> packet)$/;"	f	class:ns3::OriginatorRxStatus
AckTimeoutReset	dcf-manager.cc	/^  virtual void AckTimeoutReset ()$/;"	f	class:ns3::LowDcfListener
AckTimeoutStart	dcf-manager.cc	/^  virtual void AckTimeoutStart (Time duration)$/;"	f	class:ns3::LowDcfListener
ActionValue	mgt-headers.h	/^  } ActionValue;$/;"	t	class:ns3::WifiActionHeader	typeref:union:ns3::WifiActionHeader::__anon4
Add	dcf-manager.cc	/^DcfManager::Add (DcfState *dcf)$/;"	f	class:ns3::DcfManager
Add	interference-helper.cc	/^InterferenceHelper::Add (uint32_t size, WifiTxVector txVector,$/;"	f	class:ns3::InterferenceHelper
Add	yans-wifi-channel.cc	/^YansWifiChannel::Add (Ptr<YansWifiPhy> phy)$/;"	f	class:ns3::YansWifiChannel
AddAllSupportedMcs	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::AddAllSupportedMcs (Mac48Address address)$/;"	f	class:ns3::WifiRemoteStationManager
AddAllSupportedModes	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::AddAllSupportedModes (Mac48Address address)$/;"	f	class:ns3::WifiRemoteStationManager
AddBasicMcs	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::AddBasicMcs (WifiMode mcs)$/;"	f	class:ns3::WifiRemoteStationManager
AddBasicMode	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::AddBasicMode (WifiMode mode)$/;"	f	class:ns3::WifiRemoteStationManager
AddCalcTxTime	minstrel-wifi-manager.cc	/^MinstrelWifiManager::AddCalcTxTime (WifiMode mode, Time t)$/;"	f	class:ns3::MinstrelWifiManager
AddFirstMpduTxTime	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::AddFirstMpduTxTime (uint32_t groupId, WifiMode mode, Time t)$/;"	f	class:ns3::MinstrelHtWifiManager
AddHeaderAndPad	mpdu-standard-aggregator.cc	/^MpduStandardAggregator::AddHeaderAndPad (Ptr<Packet> packet, bool last, bool vhtSingleMpdu)$/;"	f	class:ns3::MpduStandardAggregator
AddInformationElement	wifi-information-element-vector.cc	/^WifiInformationElementVector::AddInformationElement (Ptr<WifiInformationElement> element)$/;"	f	class:ns3::WifiInformationElementVector
AddLinkChangeCallback	wifi-net-device.cc	/^WifiNetDevice::AddLinkChangeCallback (Callback<void> callback)$/;"	f	class:ns3::WifiNetDevice
AddMpduTxTime	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::AddMpduTxTime (uint32_t groupId, WifiMode mode, Time t)$/;"	f	class:ns3::MinstrelHtWifiManager
AddNext	random-stream.cc	/^TestRandomStream::AddNext (uint32_t v)$/;"	f	class:ns3::TestRandomStream
AddNiChangeEvent	interference-helper.cc	/^InterferenceHelper::AddNiChangeEvent (NiChange change)$/;"	f	class:ns3::InterferenceHelper
AddSnrThreshold	ideal-wifi-manager.cc	/^IdealWifiManager::AddSnrThreshold (WifiTxVector txVector, double snr)$/;"	f	class:ns3::IdealWifiManager
AddStationHtCapabilities	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::AddStationHtCapabilities (Mac48Address from, HtCapabilities htCapabilities)$/;"	f	class:ns3::WifiRemoteStationManager
AddStationVhtCapabilities	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::AddStationVhtCapabilities (Mac48Address from, VhtCapabilities vhtCapabilities)$/;"	f	class:ns3::WifiRemoteStationManager
AddSupportedChannelWidth	yans-wifi-phy.cc	/^YansWifiPhy::AddSupportedChannelWidth (uint32_t width)$/;"	f	class:ns3::YansWifiPhy
AddSupportedErpSlotTime	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::AddSupportedErpSlotTime (Mac48Address address, bool isShortSlotTimeSupported)$/;"	f	class:ns3::WifiRemoteStationManager
AddSupportedMcs	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::AddSupportedMcs (Mac48Address address, WifiMode mcs)$/;"	f	class:ns3::WifiRemoteStationManager
AddSupportedMode	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::AddSupportedMode (Mac48Address address, WifiMode mode)$/;"	f	class:ns3::WifiRemoteStationManager
AddSupportedPlcpPreamble	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::AddSupportedPlcpPreamble (Mac48Address address, bool isShortPreambleSupported)$/;"	f	class:ns3::WifiRemoteStationManager
AddSupportedRate	supported-rates.cc	/^SupportedRates::AddSupportedRate (uint32_t bs)$/;"	f	class:ns3::SupportedRates
AddressType	wifi-mac-header.h	/^  enum AddressType$/;"	g	class:ns3::WifiMacHeader
AdhocWifiMac	adhoc-wifi-mac.cc	/^AdhocWifiMac::AdhocWifiMac ()$/;"	f	class:ns3::AdhocWifiMac
AdhocWifiMac	adhoc-wifi-mac.h	/^class AdhocWifiMac : public RegularWifiMac$/;"	c	namespace:ns3
Aggregate	mpdu-standard-aggregator.cc	/^MpduStandardAggregator::Aggregate (Ptr<const Packet> packet, Ptr<Packet> aggregatedPacket)$/;"	f	class:ns3::MpduStandardAggregator
Aggregate	msdu-standard-aggregator.cc	/^MsduStandardAggregator::Aggregate (Ptr<const Packet> packet, Ptr<Packet> aggregatedPacket,$/;"	f	class:ns3::MsduStandardAggregator
AggregateToAmpdu	mac-low.cc	/^MacLow::AggregateToAmpdu (Ptr<const Packet> packet, const WifiMacHeader hdr)$/;"	f	class:ns3::MacLow
AggregateVhtSingleMpdu	mpdu-standard-aggregator.cc	/^MpduStandardAggregator::AggregateVhtSingleMpdu (Ptr<const Packet> packet, Ptr<Packet> aggregatedPacket)$/;"	f	class:ns3::MpduStandardAggregator
AggregationCapableTransmissionListener	edca-txop-n.cc	/^  AggregationCapableTransmissionListener (EdcaTxopN * txop)$/;"	f	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener
AggregationCapableTransmissionListener	edca-txop-n.cc	/^class EdcaTxopN::AggregationCapableTransmissionListener : public MacLowAggregationCapableTransmissionListener$/;"	c	class:ns3::EdcaTxopN	file:
AgreementKey	mac-low.h	/^  typedef std::pair<Mac48Address, uint8_t> AgreementKey;$/;"	t	class:ns3::MacLow
AgreementValue	mac-low.h	/^  typedef std::pair<BlockAckAgreement, std::list<BufferedPacket> > AgreementValue;$/;"	t	class:ns3::MacLow
Agreements	block-ack-manager.h	/^                   std::pair<OriginatorBlockAckAgreement, PacketQueue> > Agreements;$/;"	t	class:ns3::BlockAckManager
Agreements	mac-low.h	/^  typedef std::map<AgreementKey, AgreementValue> Agreements;$/;"	t	class:ns3::MacLow
AgreementsCI	block-ack-manager.h	/^                   std::pair<OriginatorBlockAckAgreement, PacketQueue> >::const_iterator AgreementsCI;$/;"	t	class:ns3::BlockAckManager
AgreementsI	block-ack-manager.h	/^                   std::pair<OriginatorBlockAckAgreement, PacketQueue> >::iterator AgreementsI;$/;"	t	class:ns3::BlockAckManager
AgreementsI	mac-low.h	/^  typedef std::map<AgreementKey, AgreementValue>::iterator AgreementsI;$/;"	t	class:ns3::MacLow
AllocateUid	wifi-mode.cc	/^WifiModeFactory::AllocateUid (std::string uniqueUid)$/;"	f	class:ns3::WifiModeFactory
AlreadyExists	block-ack-manager.cc	/^BlockAckManager::AlreadyExists (uint16_t currentSeq, Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::BlockAckManager
AmpduSubframeHeader	ampdu-subframe-header.cc	/^AmpduSubframeHeader::AmpduSubframeHeader ()$/;"	f	class:ns3::AmpduSubframeHeader
AmpduSubframeHeader	ampdu-subframe-header.h	/^class AmpduSubframeHeader : public Header$/;"	c	namespace:ns3
AmpduTag	ampdu-tag.cc	/^AmpduTag::AmpduTag ()$/;"	f	class:ns3::AmpduTag
AmpduTag	ampdu-tag.h	/^class AmpduTag : public Tag$/;"	c	namespace:ns3
AmrrWifiManager	amrr-wifi-manager.cc	/^AmrrWifiManager::AmrrWifiManager ()$/;"	f	class:ns3::AmrrWifiManager
AmrrWifiManager	amrr-wifi-manager.h	/^class AmrrWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
AmrrWifiRemoteStation	amrr-wifi-manager.cc	/^struct AmrrWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
AmsduSubframeHeader	amsdu-subframe-header.cc	/^AmsduSubframeHeader::AmsduSubframeHeader ()$/;"	f	class:ns3::AmsduSubframeHeader
AmsduSubframeHeader	amsdu-subframe-header.h	/^class AmsduSubframeHeader : public Header$/;"	c	namespace:ns3
ApWifiMac	ap-wifi-mac.cc	/^ApWifiMac::ApWifiMac ()$/;"	f	class:ns3::ApWifiMac
ApWifiMac	ap-wifi-mac.h	/^class ApWifiMac : public RegularWifiMac$/;"	c	namespace:ns3
AparfWifiManager	aparf-wifi-manager.cc	/^AparfWifiManager::AparfWifiManager ()$/;"	f	class:ns3::AparfWifiManager
AparfWifiManager	aparf-wifi-manager.h	/^class AparfWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
AparfWifiRemoteStation	aparf-wifi-manager.cc	/^AparfWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
AppendEvent	interference-helper.cc	/^InterferenceHelper::AppendEvent (Ptr<InterferenceHelper::Event> event)$/;"	f	class:ns3::InterferenceHelper
ArfWifiManager	arf-wifi-manager.cc	/^ArfWifiManager::ArfWifiManager ()$/;"	f	class:ns3::ArfWifiManager
ArfWifiManager	arf-wifi-manager.h	/^class ArfWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
ArfWifiRemoteStation	arf-wifi-manager.cc	/^struct ArfWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
AssignStreams	ap-wifi-mac.cc	/^ApWifiMac::AssignStreams (int64_t stream)$/;"	f	class:ns3::ApWifiMac
AssignStreams	dca-txop.cc	/^DcaTxop::AssignStreams (int64_t stream)$/;"	f	class:ns3::DcaTxop
AssignStreams	edca-txop-n.cc	/^EdcaTxopN::AssignStreams (int64_t stream)$/;"	f	class:ns3::EdcaTxopN
AssignStreams	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::AssignStreams (int64_t stream)$/;"	f	class:ns3::MinstrelHtWifiManager
AssignStreams	minstrel-wifi-manager.cc	/^MinstrelWifiManager::AssignStreams (int64_t stream)$/;"	f	class:ns3::MinstrelWifiManager
AssignStreams	random-stream.cc	/^RealRandomStream::AssignStreams (int64_t stream)$/;"	f	class:ns3::RealRandomStream
AssignStreams	random-stream.cc	/^TestRandomStream::AssignStreams (int64_t stream)$/;"	f	class:ns3::TestRandomStream
AssignStreams	yans-wifi-channel.cc	/^YansWifiChannel::AssignStreams (int64_t stream)$/;"	f	class:ns3::YansWifiChannel
AssignStreams	yans-wifi-phy.cc	/^YansWifiPhy::AssignStreams (int64_t stream)$/;"	f	class:ns3::YansWifiPhy
AssocRequestTimeout	sta-wifi-mac.cc	/^StaWifiMac::AssocRequestTimeout (void)$/;"	f	class:ns3::StaWifiMac
BASIC_BLOCK_ACK	ctrl-headers.h	/^  BASIC_BLOCK_ACK,$/;"	e	enum:ns3::BlockAckType
BEACON_MISSED	sta-wifi-mac.h	/^    BEACON_MISSED,$/;"	e	enum:ns3::StaWifiMac::MacState
BLOCK_ACK	mgt-headers.h	/^    BLOCK_ACK = 3,$/;"	e	enum:ns3::WifiActionHeader::CategoryValue
BLOCK_ACK	wifi-mac-header.h	/^    BLOCK_ACK = 3,$/;"	e	enum:ns3::WifiMacHeader::QosAckPolicy
BLOCK_ACK_ADDBA_REQUEST	mgt-headers.h	/^    BLOCK_ACK_ADDBA_REQUEST = 0,$/;"	e	enum:ns3::WifiActionHeader::BlockAckActionValue
BLOCK_ACK_ADDBA_RESPONSE	mgt-headers.h	/^    BLOCK_ACK_ADDBA_RESPONSE = 1,$/;"	e	enum:ns3::WifiActionHeader::BlockAckActionValue
BLOCK_ACK_AGREEMENT_H	block-ack-agreement.h	22;"	d
BLOCK_ACK_BASIC	mac-low.h	/^    BLOCK_ACK_BASIC,$/;"	e	enum:ns3::MacLowTransmissionParameters::__anon2
BLOCK_ACK_CACHE_H	block-ack-cache.h	22;"	d
BLOCK_ACK_COMPRESSED	mac-low.h	/^    BLOCK_ACK_COMPRESSED,$/;"	e	enum:ns3::MacLowTransmissionParameters::__anon2
BLOCK_ACK_DELBA	mgt-headers.h	/^    BLOCK_ACK_DELBA = 2$/;"	e	enum:ns3::WifiActionHeader::BlockAckActionValue
BLOCK_ACK_MANAGER_H	block-ack-manager.h	22;"	d
BLOCK_ACK_MULTI_TID	mac-low.h	/^    BLOCK_ACK_MULTI_TID$/;"	e	enum:ns3::MacLowTransmissionParameters::__anon2
BRAND_NEW	wifi-remote-station-manager.h	/^    BRAND_NEW,$/;"	e	enum:ns3::WifiRemoteStationState::__anon9
BaTxFailed	edca-txop-n.cc	/^EdcaTxopN::BaTxFailed (const WifiMacHeader &hdr)$/;"	f	class:ns3::EdcaTxopN
BaTxOk	edca-txop-n.cc	/^EdcaTxopN::BaTxOk (const WifiMacHeader &hdr)$/;"	f	class:ns3::EdcaTxopN
Bar	block-ack-manager.cc	/^Bar::Bar ()$/;"	f	class:ns3::Bar
Bar	block-ack-manager.cc	/^Bar::Bar (Ptr<const Packet> bar, Mac48Address recipient, uint8_t tid, bool immediate)$/;"	f	class:ns3::Bar
Bar	block-ack-manager.h	/^struct Bar$/;"	s	namespace:ns3
Begin	wifi-information-element-vector.cc	/^WifiInformationElementVector::Begin ()$/;"	f	class:ns3::WifiInformationElementVector
Binomial	yans-error-rate-model.cc	/^YansErrorRateModel::Binomial (uint32_t k, double p, uint32_t n) const$/;"	f	class:ns3::YansErrorRateModel
Block	qos-blocked-destinations.cc	/^QosBlockedDestinations::Block (Mac48Address dest, uint8_t tid)$/;"	f	class:ns3::QosBlockedDestinations
BlockAckActionValue	mgt-headers.h	/^  enum BlockAckActionValue$/;"	g	class:ns3::WifiActionHeader
BlockAckAgreement	block-ack-agreement.cc	/^BlockAckAgreement::BlockAckAgreement ()$/;"	f	class:ns3::BlockAckAgreement
BlockAckAgreement	block-ack-agreement.cc	/^BlockAckAgreement::BlockAckAgreement (Mac48Address peer, uint8_t tid)$/;"	f	class:ns3::BlockAckAgreement
BlockAckAgreement	block-ack-agreement.h	/^class BlockAckAgreement$/;"	c	namespace:ns3
BlockAckCache	block-ack-cache.h	/^class BlockAckCache$/;"	c	namespace:ns3
BlockAckCaches	mac-low.h	/^  typedef std::map<AgreementKey, BlockAckCache> BlockAckCaches;$/;"	t	class:ns3::MacLow
BlockAckCachesI	mac-low.h	/^  typedef std::map<AgreementKey, BlockAckCache>::iterator BlockAckCachesI;$/;"	t	class:ns3::MacLow
BlockAckInactivityTimeout	edca-txop-n.cc	/^  virtual void BlockAckInactivityTimeout (Mac48Address address, uint8_t tid)$/;"	f	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener
BlockAckManager	block-ack-manager.cc	/^BlockAckManager::BlockAckManager ()$/;"	f	class:ns3::BlockAckManager
BlockAckManager	block-ack-manager.h	/^class BlockAckManager$/;"	c	namespace:ns3
BlockAckTimeout	mac-low.cc	/^MacLow::BlockAckTimeout (void)$/;"	f	class:ns3::MacLow
BlockAckType	ctrl-headers.h	/^enum BlockAckType$/;"	g	namespace:ns3
BlockedPackets	qos-blocked-destinations.h	/^  typedef std::list<std::pair<Mac48Address, uint8_t> > BlockedPackets;$/;"	t	class:ns3::QosBlockedDestinations
BlockedPacketsCI	qos-blocked-destinations.h	/^  typedef std::list<std::pair<Mac48Address, uint8_t> >::const_iterator BlockedPacketsCI;$/;"	t	class:ns3::QosBlockedDestinations
BlockedPacketsI	qos-blocked-destinations.h	/^  typedef std::list<std::pair<Mac48Address, uint8_t> >::iterator BlockedPacketsI;$/;"	t	class:ns3::QosBlockedDestinations
BufferedPacket	mac-low.h	/^  typedef std::pair<Ptr<Packet>, WifiMacHeader> BufferedPacket;$/;"	t	class:ns3::MacLow
BufferedPacketI	mac-low.h	/^  typedef std::list<BufferedPacket>::iterator BufferedPacketI;$/;"	t	class:ns3::MacLow
CAPABILITY_INFORMATION_H	capability-information.h	22;"	d
CARA_WIFI_MANAGER_H	cara-wifi-manager.h	22;"	d
CCA_BUSY	wifi-phy.h	/^    CCA_BUSY,$/;"	e	enum:ns3::WifiPhy::State
COMPRESSED_BLOCK_ACK	ctrl-headers.h	/^  COMPRESSED_BLOCK_ACK,$/;"	e	enum:ns3::BlockAckType
CONGESTION_CONTROL_NOTIFICATION	mgt-headers.h	/^    CONGESTION_CONTROL_NOTIFICATION = 3,  \/\/Action Value:3 in Category 13: Mesh$/;"	e	enum:ns3::WifiActionHeader::MeshActionValue
CONSTANT_RATE_WIFI_MANAGER_H	constant-rate-wifi-manager.h	22;"	d
CTRL_HEADERS_H	ctrl-headers.h	22;"	d
CTS_TO_SELF	wifi-remote-station-manager.h	/^    CTS_TO_SELF$/;"	e	enum:ns3::WifiRemoteStationManager::ProtectionMode
CalcTxCurrent	wifi-tx-current-model.cc	/^LinearWifiTxCurrentModel::CalcTxCurrent (double txPowerDbm) const$/;"	f	class:ns3::LinearWifiTxCurrentModel
CalculateAveragingCoefficient	wifi-remote-station-manager.cc	/^WifiRemoteStationInfo::CalculateAveragingCoefficient ()$/;"	f	class:ns3::WifiRemoteStationInfo
CalculateChunkSuccessRate	interference-helper.cc	/^InterferenceHelper::CalculateChunkSuccessRate (double snir, Time duration, WifiMode mode, WifiTxVector txVector) const$/;"	f	class:ns3::InterferenceHelper
CalculateEwmsd	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::CalculateEwmsd (double oldEwmsd, double currentProb, double ewmaProb, uint32_t weight)$/;"	f	class:ns3::MinstrelHtWifiManager
CalculateFirstMpduTxDuration	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::CalculateFirstMpduTxDuration (Ptr<WifiPhy> phy, uint8_t streams, uint8_t sgi, uint32_t chWidth, WifiMode mode)$/;"	f	class:ns3::MinstrelHtWifiManager
CalculateMpduTxDuration	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::CalculateMpduTxDuration (Ptr<WifiPhy> phy, uint8_t streams, uint8_t sgi, uint32_t chWidth, WifiMode mode)$/;"	f	class:ns3::MinstrelHtWifiManager
CalculateNoiseInterferenceW	interference-helper.cc	/^InterferenceHelper::CalculateNoiseInterferenceW (Ptr<InterferenceHelper::Event> event, NiChanges *ni) const$/;"	f	class:ns3::InterferenceHelper
CalculateOverallTxTime	mac-low.cc	/^MacLow::CalculateOverallTxTime (Ptr<const Packet> packet,$/;"	f	class:ns3::MacLow
CalculatePadding	mpdu-standard-aggregator.cc	/^MpduStandardAggregator::CalculatePadding (Ptr<const Packet> packet)$/;"	f	class:ns3::MpduStandardAggregator
CalculatePadding	msdu-standard-aggregator.cc	/^MsduStandardAggregator::CalculatePadding (Ptr<const Packet> packet)$/;"	f	class:ns3::MsduStandardAggregator
CalculatePd	yans-error-rate-model.cc	/^YansErrorRateModel::CalculatePd (double ber, unsigned int d) const$/;"	f	class:ns3::YansErrorRateModel
CalculatePdEven	yans-error-rate-model.cc	/^YansErrorRateModel::CalculatePdEven (double ber, unsigned int d) const$/;"	f	class:ns3::YansErrorRateModel
CalculatePdOdd	yans-error-rate-model.cc	/^YansErrorRateModel::CalculatePdOdd (double ber, unsigned int d) const$/;"	f	class:ns3::YansErrorRateModel
CalculatePe	nist-error-rate-model.cc	/^NistErrorRateModel::CalculatePe (double p, uint32_t bValue) const$/;"	f	class:ns3::NistErrorRateModel
CalculatePlcpHeaderPer	interference-helper.cc	/^InterferenceHelper::CalculatePlcpHeaderPer (Ptr<const InterferenceHelper::Event> event, NiChanges *ni) const$/;"	f	class:ns3::InterferenceHelper
CalculatePlcpHeaderSnrPer	interference-helper.cc	/^InterferenceHelper::CalculatePlcpHeaderSnrPer (Ptr<InterferenceHelper::Event> event)$/;"	f	class:ns3::InterferenceHelper
CalculatePlcpPayloadPer	interference-helper.cc	/^InterferenceHelper::CalculatePlcpPayloadPer (Ptr<const InterferenceHelper::Event> event, NiChanges *ni) const$/;"	f	class:ns3::InterferenceHelper
CalculatePlcpPayloadSnrPer	interference-helper.cc	/^InterferenceHelper::CalculatePlcpPayloadSnrPer (Ptr<InterferenceHelper::Event> event)$/;"	f	class:ns3::InterferenceHelper
CalculatePlcpPreambleAndHeaderDuration	wifi-phy.cc	/^WifiPhy::CalculatePlcpPreambleAndHeaderDuration (WifiTxVector txVector, WifiPreamble preamble)$/;"	f	class:ns3::WifiPhy
CalculateRetransmits	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::CalculateRetransmits (MinstrelHtWifiRemoteStation *station, uint32_t groupId, uint32_t rateId)$/;"	f	class:ns3::MinstrelHtWifiManager
CalculateRetransmits	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::CalculateRetransmits (MinstrelHtWifiRemoteStation *station, uint32_t index)$/;"	f	class:ns3::MinstrelHtWifiManager
CalculateSnr	error-rate-model.cc	/^ErrorRateModel::CalculateSnr (WifiTxVector txVector, double ber) const$/;"	f	class:ns3::ErrorRateModel
CalculateSnr	interference-helper.cc	/^InterferenceHelper::CalculateSnr (double signal, double noiseInterference, uint32_t channelWidth) const$/;"	f	class:ns3::InterferenceHelper
CalculateSnr	yans-wifi-phy.cc	/^YansWifiPhy::CalculateSnr (WifiTxVector txVector, double ber) const$/;"	f	class:ns3::YansWifiPhy
CalculateThroughput	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::CalculateThroughput (MinstrelHtWifiRemoteStation *station, uint32_t groupId, uint32_t rateId, double ewmaProb)$/;"	f	class:ns3::MinstrelHtWifiManager
CalculateTimeUnicastPacket	minstrel-wifi-manager.cc	/^MinstrelWifiManager::CalculateTimeUnicastPacket (Time dataTransmissionTime, uint32_t shortRetries, uint32_t longRetries)$/;"	f	class:ns3::MinstrelWifiManager
CalculateTransmissionTime	mac-low.cc	/^MacLow::CalculateTransmissionTime (Ptr<const Packet> packet,$/;"	f	class:ns3::MacLow
CalculateTxDuration	wifi-phy.cc	/^WifiPhy::CalculateTxDuration (uint32_t size, WifiTxVector txVector, WifiPreamble preamble, double frequency)$/;"	f	class:ns3::WifiPhy
CalculateTxDuration	wifi-phy.cc	/^WifiPhy::CalculateTxDuration (uint32_t size, WifiTxVector txVector, WifiPreamble preamble, double frequency, enum mpduType mpdutype, uint8_t incFlag)$/;"	f	class:ns3::WifiPhy
CanBeAggregated	mpdu-standard-aggregator.cc	/^MpduStandardAggregator::CanBeAggregated (uint32_t packetSize, Ptr<Packet> aggregatedPacket, uint8_t blockAckSize)$/;"	f	class:ns3::MpduStandardAggregator
Cancel	dca-txop.cc	/^  virtual void Cancel (void)$/;"	f	class:ns3::DcaTxop::TransmissionListener
Cancel	dca-txop.cc	/^DcaTxop::Cancel (void)$/;"	f	class:ns3::DcaTxop
Cancel	edca-txop-n.cc	/^  virtual void Cancel (void)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
Cancel	edca-txop-n.cc	/^EdcaTxopN::Cancel (void)$/;"	f	class:ns3::EdcaTxopN
CancelAllEvents	mac-low.cc	/^MacLow::CancelAllEvents (void)$/;"	f	class:ns3::MacLow
CapabilityInformation	capability-information.cc	/^CapabilityInformation::CapabilityInformation ()$/;"	f	class:ns3::CapabilityInformation
CapabilityInformation	capability-information.h	/^class CapabilityInformation$/;"	c	namespace:ns3
CaraWifiManager	cara-wifi-manager.cc	/^CaraWifiManager::CaraWifiManager ()$/;"	f	class:ns3::CaraWifiManager
CaraWifiManager	cara-wifi-manager.h	/^class CaraWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
CaraWifiRemoteStation	cara-wifi-manager.cc	/^struct CaraWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
CategoryValue	mgt-headers.h	/^  enum CategoryValue \/\/table 8-38 staring from IEEE 802.11, Part11, (Year 2012)$/;"	g	class:ns3::WifiActionHeader
CategoryValueToString	mgt-headers.cc	/^WifiActionHeader::CategoryValueToString (CategoryValue value) const$/;"	f	class:ns3::WifiActionHeader
ChangeState	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::ChangeState (int newState)$/;"	f	class:ns3::WifiRadioEnergyModel
CheckInit	aparf-wifi-manager.cc	/^AparfWifiManager::CheckInit (AparfWifiRemoteStation *station)$/;"	f	class:ns3::AparfWifiManager
CheckInit	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::CheckInit (MinstrelHtWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelHtWifiManager
CheckInit	minstrel-wifi-manager.cc	/^MinstrelWifiManager::CheckInit (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
CheckInit	parf-wifi-manager.cc	/^ParfWifiManager::CheckInit (ParfWifiRemoteStation *station)$/;"	f	class:ns3::ParfWifiManager
CheckRts	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::CheckRts (AarfcdWifiRemoteStation *station)$/;"	f	class:ns3::AarfcdWifiManager
CheckTimeout	rraa-wifi-manager.cc	/^RraaWifiManager::CheckTimeout (RraaWifiRemoteStation *station)$/;"	f	class:ns3::RraaWifiManager
Cleanup	wifi-mac-queue.cc	/^WifiMacQueue::Cleanup (void)$/;"	f	class:ns3::WifiMacQueue
CleanupBuffers	block-ack-manager.cc	/^BlockAckManager::CleanupBuffers (void)$/;"	f	class:ns3::BlockAckManager
Clear	capability-information.cc	/^CapabilityInformation::Clear (uint8_t n)$/;"	f	class:ns3::CapabilityInformation
CompleteAmpduExchange	block-ack-manager.cc	/^BlockAckManager::CompleteAmpduExchange (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::BlockAckManager
CompleteAmpduTransfer	edca-txop-n.cc	/^EdcaTxopN::CompleteAmpduTransfer (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::EdcaTxopN
CompleteConfig	edca-txop-n.cc	/^EdcaTxopN::CompleteConfig (void)$/;"	f	class:ns3::EdcaTxopN
CompleteConfig	wifi-net-device.cc	/^WifiNetDevice::CompleteConfig (void)$/;"	f	class:ns3::WifiNetDevice
CompleteExchange	originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::CompleteExchange (void)$/;"	f	class:ns3::OriginatorBlockAckAgreement
CompleteMpduTx	edca-txop-n.cc	/^  virtual void CompleteMpduTx (Ptr<const Packet> packet, WifiMacHeader hdr, Time tstamp)$/;"	f	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener
CompleteMpduTx	edca-txop-n.cc	/^EdcaTxopN::CompleteMpduTx (Ptr<const Packet> packet, WifiMacHeader hdr, Time tstamp)$/;"	f	class:ns3::EdcaTxopN
CompleteMpduTx	mac-low.cc	/^MacLowAggregationCapableTransmissionListener::CompleteMpduTx (Ptr<const Packet> packet, WifiMacHeader hdr, Time tstamp)$/;"	f	class:ns3::MacLowAggregationCapableTransmissionListener
CompleteTransfer	edca-txop-n.cc	/^  virtual  void CompleteTransfer (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener
CompleteTransfer	mac-low.cc	/^void MacLowAggregationCapableTransmissionListener::CompleteTransfer (Mac48Address address, uint8_t tid)$/;"	f	class:ns3::MacLowAggregationCapableTransmissionListener
CompleteTx	edca-txop-n.cc	/^EdcaTxopN::CompleteTx (void)$/;"	f	class:ns3::EdcaTxopN
Configure80211_10Mhz	wifi-mac.cc	/^WifiMac::Configure80211_10Mhz (void)$/;"	f	class:ns3::WifiMac
Configure80211_10Mhz	yans-wifi-phy.cc	/^YansWifiPhy::Configure80211_10Mhz (void)$/;"	f	class:ns3::YansWifiPhy
Configure80211_5Mhz	wifi-mac.cc	/^WifiMac::Configure80211_5Mhz (void)$/;"	f	class:ns3::WifiMac
Configure80211_5Mhz	yans-wifi-phy.cc	/^YansWifiPhy::Configure80211_5Mhz (void)$/;"	f	class:ns3::YansWifiPhy
Configure80211a	wifi-mac.cc	/^WifiMac::Configure80211a (void)$/;"	f	class:ns3::WifiMac
Configure80211a	yans-wifi-phy.cc	/^YansWifiPhy::Configure80211a (void)$/;"	f	class:ns3::YansWifiPhy
Configure80211ac	wifi-mac.cc	/^WifiMac::Configure80211ac (void)$/;"	f	class:ns3::WifiMac
Configure80211ac	yans-wifi-phy.cc	/^YansWifiPhy::Configure80211ac (void)$/;"	f	class:ns3::YansWifiPhy
Configure80211b	wifi-mac.cc	/^WifiMac::Configure80211b (void)$/;"	f	class:ns3::WifiMac
Configure80211b	yans-wifi-phy.cc	/^YansWifiPhy::Configure80211b (void)$/;"	f	class:ns3::YansWifiPhy
Configure80211g	wifi-mac.cc	/^WifiMac::Configure80211g (void)$/;"	f	class:ns3::WifiMac
Configure80211g	yans-wifi-phy.cc	/^YansWifiPhy::Configure80211g (void)$/;"	f	class:ns3::YansWifiPhy
Configure80211n	yans-wifi-phy.cc	/^YansWifiPhy::Configure80211n (void)$/;"	f	class:ns3::YansWifiPhy
Configure80211n_2_4Ghz	wifi-mac.cc	/^WifiMac::Configure80211n_2_4Ghz (void)$/;"	f	class:ns3::WifiMac
Configure80211n_5Ghz	wifi-mac.cc	/^WifiMac::Configure80211n_5Ghz (void)$/;"	f	class:ns3::WifiMac
ConfigureAggregation	regular-wifi-mac.cc	/^RegularWifiMac::ConfigureAggregation (void)$/;"	f	class:ns3::RegularWifiMac
ConfigureContentionWindow	regular-wifi-mac.cc	/^RegularWifiMac::ConfigureContentionWindow (uint32_t cwMin, uint32_t cwMax)$/;"	f	class:ns3::RegularWifiMac
ConfigureDcf	wifi-mac.cc	/^WifiMac::ConfigureDcf (Ptr<Dcf> dcf, uint32_t cwmin, uint32_t cwmax, enum AcIndex ac)$/;"	f	class:ns3::WifiMac
ConfigureHolland	yans-wifi-phy.cc	/^YansWifiPhy::ConfigureHolland (void)$/;"	f	class:ns3::YansWifiPhy
ConfigureHtDeviceMcsSet	yans-wifi-phy.cc	/^YansWifiPhy::ConfigureHtDeviceMcsSet (void)$/;"	f	class:ns3::YansWifiPhy
ConfigureStandard	wifi-mac.cc	/^WifiMac::ConfigureStandard (enum WifiPhyStandard standard)$/;"	f	class:ns3::WifiMac
ConfigureStandard	yans-wifi-phy.cc	/^YansWifiPhy::ConfigureStandard (enum WifiPhyStandard standard)$/;"	f	class:ns3::YansWifiPhy
ConstantRateWifiManager	constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::ConstantRateWifiManager ()$/;"	f	class:ns3::ConstantRateWifiManager
ConstantRateWifiManager	constant-rate-wifi-manager.h	/^class ConstantRateWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
Constructor	wifi-phy.cc	/^  Constructor ()$/;"	f	class:__anon8::Constructor
Constructor	wifi-phy.cc	/^static class Constructor$/;"	c	namespace:__anon8	file:
CountRetries	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::CountRetries (MinstrelHtWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelHtWifiManager
CountRetries	minstrel-wifi-manager.cc	/^MinstrelWifiManager::CountRetries (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
CreateAgreement	block-ack-manager.cc	/^BlockAckManager::CreateAgreement (const MgtAddBaRequestHeader *reqHdr, Mac48Address recipient)$/;"	f	class:ns3::BlockAckManager
CreateBlockAckAgreement	mac-low.cc	/^MacLow::CreateBlockAckAgreement (const MgtAddBaResponseHeader *respHdr, Mac48Address originator,$/;"	f	class:ns3::MacLow
CreateWifiMcs	wifi-mode.cc	/^WifiModeFactory::CreateWifiMcs (std::string uniqueName,$/;"	f	class:ns3::WifiModeFactory
CreateWifiMode	wifi-mode.cc	/^WifiModeFactory::CreateWifiMode (std::string uniqueName,$/;"	f	class:ns3::WifiModeFactory
CtrlBAckRequestHeader	ctrl-headers.cc	/^CtrlBAckRequestHeader::CtrlBAckRequestHeader ()$/;"	f	class:ns3::CtrlBAckRequestHeader
CtrlBAckRequestHeader	ctrl-headers.h	/^class CtrlBAckRequestHeader : public Header$/;"	c	namespace:ns3
CtrlBAckResponseHeader	ctrl-headers.cc	/^CtrlBAckResponseHeader::CtrlBAckResponseHeader ()$/;"	f	class:ns3::CtrlBAckResponseHeader
CtrlBAckResponseHeader	ctrl-headers.h	/^class CtrlBAckResponseHeader : public Header$/;"	c	namespace:ns3
CtsTimeout	mac-low.cc	/^MacLow::CtsTimeout (void)$/;"	f	class:ns3::MacLow
CtsTimeoutReset	dcf-manager.cc	/^  virtual void CtsTimeoutReset ()$/;"	f	class:ns3::LowDcfListener
CtsTimeoutStart	dcf-manager.cc	/^  virtual void CtsTimeoutStart (Time duration)$/;"	f	class:ns3::LowDcfListener
DCA_TXOP_H	dca-txop.h	22;"	d
DCF_H	dcf.h	22;"	d
DCF_MANAGER_H	dcf-manager.h	22;"	d
DISASSOC	wifi-remote-station-manager.h	/^    DISASSOC,$/;"	e	enum:ns3::WifiRemoteStationState::__anon9
DSS_ERROR_RATE_MODEL_H	dsss-error-rate-model.h	22;"	d
DbToRatio	yans-wifi-phy.cc	/^YansWifiPhy::DbToRatio (double dB) const$/;"	f	class:ns3::YansWifiPhy
DbmToW	wifi-tx-current-model.cc	/^WifiTxCurrentModel::DbmToW (double dbm)$/;"	f	class:ns3::WifiTxCurrentModel
DbmToW	yans-wifi-phy.cc	/^YansWifiPhy::DbmToW (double dBm) const$/;"	f	class:ns3::YansWifiPhy
DcaTxop	dca-txop.cc	/^DcaTxop::DcaTxop ()$/;"	f	class:ns3::DcaTxop
DcaTxop	dca-txop.h	/^class DcaTxop : public Dcf$/;"	c	namespace:ns3
Dcf	dca-txop.cc	/^  Dcf (DcaTxop * txop)$/;"	f	class:ns3::DcaTxop::Dcf
Dcf	dca-txop.cc	/^class DcaTxop::Dcf : public DcfState$/;"	c	class:ns3::DcaTxop	file:
Dcf	dcf.h	/^class Dcf : public Object$/;"	c	namespace:ns3
Dcf	edca-txop-n.cc	/^  Dcf (EdcaTxopN * txop)$/;"	f	class:ns3::EdcaTxopN::Dcf
Dcf	edca-txop-n.cc	/^class EdcaTxopN::Dcf : public DcfState$/;"	c	class:ns3::EdcaTxopN	file:
DcfListeners	mac-low.h	/^  typedef std::vector<MacLowDcfListener *> DcfListeners;$/;"	t	class:ns3::MacLow
DcfListenersCI	mac-low.h	/^  typedef std::vector<MacLowDcfListener *>::const_iterator DcfListenersCI;$/;"	t	class:ns3::MacLow
DcfManager	dcf-manager.cc	/^DcfManager::DcfManager ()$/;"	f	class:ns3::DcfManager
DcfManager	dcf-manager.h	/^class DcfManager$/;"	c	namespace:ns3
DcfState	dcf-manager.cc	/^DcfState::DcfState ()$/;"	f	class:ns3::DcfState
DcfState	dcf-manager.h	/^class DcfState$/;"	c	namespace:ns3
Deaggregate	mpdu-aggregator.cc	/^MpduAggregator::Deaggregate (Ptr<Packet> aggregatedPacket)$/;"	f	class:ns3::MpduAggregator
Deaggregate	msdu-aggregator.cc	/^MsduAggregator::Deaggregate (Ptr<Packet> aggregatedPacket)$/;"	f	class:ns3::MsduAggregator
DeaggregateAmpduAndReceive	mac-low.cc	/^MacLow::DeaggregateAmpduAndReceive (Ptr<Packet> aggregatedPacket, double rxSnr, WifiTxVector txVector, WifiPreamble preamble)$/;"	f	class:ns3::MacLow
DeaggregateAmsduAndForward	ap-wifi-mac.cc	/^ApWifiMac::DeaggregateAmsduAndForward (Ptr<Packet> aggregatedPacket,$/;"	f	class:ns3::ApWifiMac
DeaggregateAmsduAndForward	regular-wifi-mac.cc	/^RegularWifiMac::DeaggregateAmsduAndForward (Ptr<Packet> aggregatedPacket,$/;"	f	class:ns3::RegularWifiMac
DeaggregatedMpdus	mpdu-aggregator.h	/^  typedef std::list<std::pair<Ptr<Packet>, AmpduSubframeHeader> > DeaggregatedMpdus;$/;"	t	class:ns3::MpduAggregator
DeaggregatedMpdusCI	mpdu-aggregator.h	/^  typedef std::list<std::pair<Ptr<Packet>, AmpduSubframeHeader> >::const_iterator DeaggregatedMpdusCI;$/;"	t	class:ns3::MpduAggregator
DeaggregatedMsdus	msdu-aggregator.h	/^  typedef std::list<std::pair<Ptr<Packet>, AmsduSubframeHeader> > DeaggregatedMsdus;$/;"	t	class:ns3::MsduAggregator
DeaggregatedMsdusCI	msdu-aggregator.h	/^  typedef std::list<std::pair<Ptr<Packet>, AmsduSubframeHeader> >::const_iterator DeaggregatedMsdusCI;$/;"	t	class:ns3::MsduAggregator
DecreaseRate	amrr-wifi-manager.cc	/^AmrrWifiManager::DecreaseRate (AmrrWifiRemoteStation *station)$/;"	f	class:ns3::AmrrWifiManager
Dequeue	wifi-mac-queue.cc	/^WifiMacQueue::Dequeue (WifiMacHeader *hdr)$/;"	f	class:ns3::WifiMacQueue
DequeueByTidAndAddress	wifi-mac-queue.cc	/^WifiMacQueue::DequeueByTidAndAddress (WifiMacHeader *hdr, uint8_t tid,$/;"	f	class:ns3::WifiMacQueue
DequeueFirstAvailable	wifi-mac-queue.cc	/^WifiMacQueue::DequeueFirstAvailable (WifiMacHeader *hdr, Time &timestamp,$/;"	f	class:ns3::WifiMacQueue
Deserialize	ampdu-subframe-header.cc	/^AmpduSubframeHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::AmpduSubframeHeader
Deserialize	ampdu-tag.cc	/^AmpduTag::Deserialize (TagBuffer i)$/;"	f	class:ns3::AmpduTag
Deserialize	amsdu-subframe-header.cc	/^AmsduSubframeHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::AmsduSubframeHeader
Deserialize	capability-information.cc	/^CapabilityInformation::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::CapabilityInformation
Deserialize	ctrl-headers.cc	/^CtrlBAckRequestHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::CtrlBAckRequestHeader
Deserialize	ctrl-headers.cc	/^CtrlBAckResponseHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::CtrlBAckResponseHeader
Deserialize	mgt-headers.cc	/^MgtAddBaRequestHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::MgtAddBaRequestHeader
Deserialize	mgt-headers.cc	/^MgtAddBaResponseHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::MgtAddBaResponseHeader
Deserialize	mgt-headers.cc	/^MgtAssocRequestHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::MgtAssocRequestHeader
Deserialize	mgt-headers.cc	/^MgtAssocResponseHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::MgtAssocResponseHeader
Deserialize	mgt-headers.cc	/^MgtDelBaHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::MgtDelBaHeader
Deserialize	mgt-headers.cc	/^MgtProbeRequestHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::MgtProbeRequestHeader
Deserialize	mgt-headers.cc	/^MgtProbeResponseHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::MgtProbeResponseHeader
Deserialize	mgt-headers.cc	/^WifiActionHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::WifiActionHeader
Deserialize	qos-tag.cc	/^QosTag::Deserialize (TagBuffer i)$/;"	f	class:ns3::QosTag
Deserialize	snr-tag.cc	/^SnrTag::Deserialize (TagBuffer i)$/;"	f	class:ns3::SnrTag
Deserialize	status-code.cc	/^StatusCode::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::StatusCode
Deserialize	wifi-information-element-vector.cc	/^WifiInformationElementVector::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::WifiInformationElementVector
Deserialize	wifi-information-element.cc	/^WifiInformationElement::Deserialize (Buffer::Iterator i)$/;"	f	class:ns3::WifiInformationElement
Deserialize	wifi-mac-header.cc	/^WifiMacHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::WifiMacHeader
Deserialize	wifi-mac-trailer.cc	/^WifiMacTrailer::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::WifiMacTrailer
Deserialize	wifi-remote-station-manager.cc	/^HighLatencyCtsToSelfTxVectorTag::Deserialize (TagBuffer i)$/;"	f	class:ns3::HighLatencyCtsToSelfTxVectorTag
Deserialize	wifi-remote-station-manager.cc	/^HighLatencyDataTxVectorTag::Deserialize (TagBuffer i)$/;"	f	class:ns3::HighLatencyDataTxVectorTag
Deserialize	wifi-remote-station-manager.cc	/^HighLatencyRtsTxVectorTag::Deserialize (TagBuffer i)$/;"	f	class:ns3::HighLatencyRtsTxVectorTag
DeserializeBitmap	ctrl-headers.cc	/^CtrlBAckResponseHeader::DeserializeBitmap (Buffer::Iterator start)$/;"	f	class:ns3::CtrlBAckResponseHeader
DeserializeIfPresent	wifi-information-element.cc	/^WifiInformationElement::DeserializeIfPresent (Buffer::Iterator i)$/;"	f	class:ns3::WifiInformationElement
DeserializeInformationField	erp-information.cc	/^ErpInformation::DeserializeInformationField (Buffer::Iterator start,$/;"	f	class:ns3::ErpInformation
DeserializeInformationField	ht-capabilities.cc	/^HtCapabilities::DeserializeInformationField (Buffer::Iterator start,$/;"	f	class:ns3::HtCapabilities
DeserializeInformationField	ht-operations.cc	/^HtOperations::DeserializeInformationField (Buffer::Iterator start,$/;"	f	class:ns3::HtOperations
DeserializeInformationField	ssid.cc	/^Ssid::DeserializeInformationField (Buffer::Iterator start,$/;"	f	class:ns3::Ssid
DeserializeInformationField	supported-rates.cc	/^ExtendedSupportedRatesIE::DeserializeInformationField (Buffer::Iterator start,$/;"	f	class:ns3::ExtendedSupportedRatesIE
DeserializeInformationField	supported-rates.cc	/^SupportedRates::DeserializeInformationField (Buffer::Iterator start,$/;"	f	class:ns3::SupportedRates
DeserializeInformationField	vht-capabilities.cc	/^VhtCapabilities::DeserializeInformationField (Buffer::Iterator start,$/;"	f	class:ns3::VhtCapabilities
DeserializeSingleIe	wifi-information-element-vector.cc	/^WifiInformationElementVector::DeserializeSingleIe (Buffer::Iterator start)$/;"	f	class:ns3::WifiInformationElementVector
DestroyAgreement	block-ack-manager.cc	/^BlockAckManager::DestroyAgreement (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::BlockAckManager
DestroyBlockAckAgreement	mac-low.cc	/^MacLow::DestroyBlockAckAgreement (Mac48Address originator, uint8_t tid)$/;"	f	class:ns3::MacLow
DisableAck	mac-low.cc	/^MacLowTransmissionParameters::DisableAck (void)$/;"	f	class:ns3::MacLowTransmissionParameters
DisableAggregation	regular-wifi-mac.cc	/^RegularWifiMac::DisableAggregation (void)$/;"	f	class:ns3::RegularWifiMac
DisableNextData	mac-low.cc	/^MacLowTransmissionParameters::DisableNextData (void)$/;"	f	class:ns3::MacLowTransmissionParameters
DisableOverrideDurationId	mac-low.cc	/^MacLowTransmissionParameters::DisableOverrideDurationId (void)$/;"	f	class:ns3::MacLowTransmissionParameters
DisableRts	mac-low.cc	/^MacLowTransmissionParameters::DisableRts (void)$/;"	f	class:ns3::MacLowTransmissionParameters
DisposeStation	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiRemoteStation::DisposeStation ()$/;"	f	class:ns3::MinstrelHtWifiRemoteStation
DoCreateStation	aarf-wifi-manager.cc	/^AarfWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::AarfWifiManager
DoCreateStation	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::AarfcdWifiManager
DoCreateStation	amrr-wifi-manager.cc	/^AmrrWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::AmrrWifiManager
DoCreateStation	aparf-wifi-manager.cc	/^AparfWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::AparfWifiManager
DoCreateStation	arf-wifi-manager.cc	/^ArfWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::ArfWifiManager
DoCreateStation	cara-wifi-manager.cc	/^CaraWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::CaraWifiManager
DoCreateStation	constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::ConstantRateWifiManager
DoCreateStation	ideal-wifi-manager.cc	/^IdealWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::IdealWifiManager
DoCreateStation	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::MinstrelHtWifiManager
DoCreateStation	minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::MinstrelWifiManager
DoCreateStation	onoe-wifi-manager.cc	/^OnoeWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::OnoeWifiManager
DoCreateStation	parf-wifi-manager.cc	/^ParfWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::ParfWifiManager
DoCreateStation	rraa-wifi-manager.cc	/^RraaWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::RraaWifiManager
DoDispose	ap-wifi-mac.cc	/^ApWifiMac::DoDispose ()$/;"	f	class:ns3::ApWifiMac
DoDispose	dca-txop.cc	/^DcaTxop::DoDispose (void)$/;"	f	class:ns3::DcaTxop
DoDispose	edca-txop-n.cc	/^EdcaTxopN::DoDispose (void)$/;"	f	class:ns3::EdcaTxopN
DoDispose	mac-low.cc	/^MacLow::DoDispose (void)$/;"	f	class:ns3::MacLow
DoDispose	regular-wifi-mac.cc	/^RegularWifiMac::DoDispose ()$/;"	f	class:ns3::RegularWifiMac
DoDispose	wifi-net-device.cc	/^WifiNetDevice::DoDispose (void)$/;"	f	class:ns3::WifiNetDevice
DoDispose	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::DoDispose (void)$/;"	f	class:ns3::WifiRadioEnergyModel
DoDispose	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoDispose (void)$/;"	f	class:ns3::WifiRemoteStationManager
DoDispose	yans-wifi-phy.cc	/^YansWifiPhy::DoDispose (void)$/;"	f	class:ns3::YansWifiPhy
DoDisposeStation	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::DoDisposeStation (WifiRemoteStation *st)$/;"	f	class:ns3::MinstrelHtWifiManager
DoGetAckTxChannelWidth	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetAckTxChannelWidth (Mac48Address address, WifiMode ctsMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetAckTxGuardInterval	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetAckTxGuardInterval (Mac48Address address, WifiMode ackMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetAckTxNess	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetAckTxNess (Mac48Address address, WifiMode ackMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetAckTxNss	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetAckTxNss (Mac48Address address, WifiMode ackMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetAckTxPowerLevel	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetAckTxPowerLevel (Mac48Address address, WifiMode ackMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetAckTxStbc	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetAckTxStbc (Mac48Address address, WifiMode ackMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetBlockAckTxChannelWidth	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetBlockAckTxChannelWidth (Mac48Address address, WifiMode ctsMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetBlockAckTxGuardInterval	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetBlockAckTxGuardInterval (Mac48Address address, WifiMode blockAckMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetBlockAckTxNess	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetBlockAckTxNess (Mac48Address address, WifiMode blockAckMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetBlockAckTxNss	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetBlockAckTxNss (Mac48Address address, WifiMode blockAckMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetBlockAckTxPowerLevel	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetBlockAckTxPowerLevel (Mac48Address address, WifiMode blockAckMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetBlockAckTxStbc	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetBlockAckTxStbc (Mac48Address address, WifiMode blockAckMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetChannel	wifi-net-device.cc	/^WifiNetDevice::DoGetChannel (void) const$/;"	f	class:ns3::WifiNetDevice
DoGetCtsToSelfTxVector	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetCtsToSelfTxVector (void)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetCtsTxChannelWidth	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetCtsTxChannelWidth (Mac48Address address, WifiMode ctsMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetCtsTxGuardInterval	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetCtsTxGuardInterval (Mac48Address address, WifiMode ctsMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetCtsTxNess	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetCtsTxNess (Mac48Address address, WifiMode ctsMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetCtsTxNss	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetCtsTxNss (Mac48Address address, WifiMode ctsMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetCtsTxPowerLevel	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetCtsTxPowerLevel (Mac48Address address, WifiMode ctsMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetCtsTxStbc	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetCtsTxStbc (Mac48Address address, WifiMode ctsMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetCurrentA	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::DoGetCurrentA (void) const$/;"	f	class:ns3::WifiRadioEnergyModel
DoGetDataTxVector	aarf-wifi-manager.cc	/^AarfWifiManager::DoGetDataTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::AarfWifiManager
DoGetDataTxVector	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoGetDataTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::AarfcdWifiManager
DoGetDataTxVector	amrr-wifi-manager.cc	/^AmrrWifiManager::DoGetDataTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::AmrrWifiManager
DoGetDataTxVector	aparf-wifi-manager.cc	/^AparfWifiManager::DoGetDataTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::AparfWifiManager
DoGetDataTxVector	arf-wifi-manager.cc	/^ArfWifiManager::DoGetDataTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::ArfWifiManager
DoGetDataTxVector	cara-wifi-manager.cc	/^CaraWifiManager::DoGetDataTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::CaraWifiManager
DoGetDataTxVector	constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoGetDataTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::ConstantRateWifiManager
DoGetDataTxVector	ideal-wifi-manager.cc	/^IdealWifiManager::DoGetDataTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::IdealWifiManager
DoGetDataTxVector	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::DoGetDataTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::MinstrelHtWifiManager
DoGetDataTxVector	minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoGetDataTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::MinstrelWifiManager
DoGetDataTxVector	onoe-wifi-manager.cc	/^OnoeWifiManager::DoGetDataTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::OnoeWifiManager
DoGetDataTxVector	parf-wifi-manager.cc	/^ParfWifiManager::DoGetDataTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::ParfWifiManager
DoGetDataTxVector	rraa-wifi-manager.cc	/^RraaWifiManager::DoGetDataTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::RraaWifiManager
DoGetFragmentationThreshold	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetFragmentationThreshold (void) const$/;"	f	class:ns3::WifiRemoteStationManager
DoGetRtsTxVector	aarf-wifi-manager.cc	/^AarfWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::AarfWifiManager
DoGetRtsTxVector	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::AarfcdWifiManager
DoGetRtsTxVector	amrr-wifi-manager.cc	/^AmrrWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::AmrrWifiManager
DoGetRtsTxVector	aparf-wifi-manager.cc	/^AparfWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::AparfWifiManager
DoGetRtsTxVector	arf-wifi-manager.cc	/^ArfWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::ArfWifiManager
DoGetRtsTxVector	cara-wifi-manager.cc	/^CaraWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::CaraWifiManager
DoGetRtsTxVector	constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::ConstantRateWifiManager
DoGetRtsTxVector	ideal-wifi-manager.cc	/^IdealWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::IdealWifiManager
DoGetRtsTxVector	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::MinstrelHtWifiManager
DoGetRtsTxVector	minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::MinstrelWifiManager
DoGetRtsTxVector	onoe-wifi-manager.cc	/^OnoeWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::OnoeWifiManager
DoGetRtsTxVector	parf-wifi-manager.cc	/^ParfWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::ParfWifiManager
DoGetRtsTxVector	rraa-wifi-manager.cc	/^RraaWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::RraaWifiManager
DoGrantAccess	dcf-manager.cc	/^DcfManager::DoGrantAccess (void)$/;"	f	class:ns3::DcfManager
DoInitialize	ap-wifi-mac.cc	/^ApWifiMac::DoInitialize (void)$/;"	f	class:ns3::ApWifiMac
DoInitialize	dca-txop.cc	/^DcaTxop::DoInitialize ()$/;"	f	class:ns3::DcaTxop
DoInitialize	edca-txop-n.cc	/^EdcaTxopN::DoInitialize ()$/;"	f	class:ns3::EdcaTxopN
DoInitialize	ideal-wifi-manager.cc	/^IdealWifiManager::DoInitialize ()$/;"	f	class:ns3::IdealWifiManager
DoInitialize	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::DoInitialize ()$/;"	f	class:ns3::MinstrelHtWifiManager
DoInitialize	regular-wifi-mac.cc	/^RegularWifiMac::DoInitialize ()$/;"	f	class:ns3::RegularWifiMac
DoInitialize	wifi-net-device.cc	/^WifiNetDevice::DoInitialize (void)$/;"	f	class:ns3::WifiNetDevice
DoInitialize	yans-wifi-phy.cc	/^YansWifiPhy::DoInitialize ()$/;"	f	class:ns3::YansWifiPhy
DoNavResetNow	mac-low.cc	/^MacLow::DoNavResetNow (Time duration)$/;"	f	class:ns3::MacLow
DoNavStartNow	mac-low.cc	/^MacLow::DoNavStartNow (Time duration)$/;"	f	class:ns3::MacLow
DoNeedDataRetransmission	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::DoNeedDataRetransmission (WifiRemoteStation *st, Ptr<const Packet> packet, bool normally)$/;"	f	class:ns3::MinstrelHtWifiManager
DoNeedDataRetransmission	minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoNeedDataRetransmission (WifiRemoteStation *st, Ptr<const Packet> packet, bool normally)$/;"	f	class:ns3::MinstrelWifiManager
DoNeedDataRetransmission	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoNeedDataRetransmission (WifiRemoteStation *station,$/;"	f	class:ns3::WifiRemoteStationManager
DoNeedFragmentation	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoNeedFragmentation (WifiRemoteStation *station,$/;"	f	class:ns3::WifiRemoteStationManager
DoNeedRts	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoNeedRts (WifiRemoteStation *st,$/;"	f	class:ns3::AarfcdWifiManager
DoNeedRts	cara-wifi-manager.cc	/^CaraWifiManager::DoNeedRts (WifiRemoteStation *st,$/;"	f	class:ns3::CaraWifiManager
DoNeedRts	rraa-wifi-manager.cc	/^RraaWifiManager::DoNeedRts (WifiRemoteStation *st,$/;"	f	class:ns3::RraaWifiManager
DoNeedRts	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoNeedRts (WifiRemoteStation *station,$/;"	f	class:ns3::WifiRemoteStationManager
DoNeedRtsRetransmission	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoNeedRtsRetransmission (WifiRemoteStation *station,$/;"	f	class:ns3::WifiRemoteStationManager
DoNotifyAccessGranted	dca-txop.cc	/^  virtual void DoNotifyAccessGranted (void)$/;"	f	class:ns3::DcaTxop::Dcf	file:
DoNotifyAccessGranted	edca-txop-n.cc	/^  virtual void DoNotifyAccessGranted (void)$/;"	f	class:ns3::EdcaTxopN::Dcf	file:
DoNotifyChannelSwitching	dca-txop.cc	/^  virtual void DoNotifyChannelSwitching (void)$/;"	f	class:ns3::DcaTxop::Dcf	file:
DoNotifyChannelSwitching	edca-txop-n.cc	/^  virtual void DoNotifyChannelSwitching (void)$/;"	f	class:ns3::EdcaTxopN::Dcf	file:
DoNotifyCollision	dca-txop.cc	/^  virtual void DoNotifyCollision (void)$/;"	f	class:ns3::DcaTxop::Dcf	file:
DoNotifyCollision	edca-txop-n.cc	/^  virtual void DoNotifyCollision (void)$/;"	f	class:ns3::EdcaTxopN::Dcf	file:
DoNotifyInternalCollision	dca-txop.cc	/^  virtual void DoNotifyInternalCollision (void)$/;"	f	class:ns3::DcaTxop::Dcf	file:
DoNotifyInternalCollision	edca-txop-n.cc	/^  virtual void DoNotifyInternalCollision (void)$/;"	f	class:ns3::EdcaTxopN::Dcf	file:
DoNotifySleep	dca-txop.cc	/^  virtual void DoNotifySleep (void)$/;"	f	class:ns3::DcaTxop::Dcf	file:
DoNotifySleep	edca-txop-n.cc	/^  virtual void DoNotifySleep (void)$/;"	f	class:ns3::EdcaTxopN::Dcf	file:
DoNotifyWakeUp	dca-txop.cc	/^  virtual void DoNotifyWakeUp (void)$/;"	f	class:ns3::DcaTxop::Dcf	file:
DoNotifyWakeUp	edca-txop-n.cc	/^  virtual void DoNotifyWakeUp (void)$/;"	f	class:ns3::EdcaTxopN::Dcf	file:
DoReportAmpduTxStatus	ideal-wifi-manager.cc	/^IdealWifiManager::DoReportAmpduTxStatus (WifiRemoteStation *st, uint32_t nSuccessfulMpdus, uint32_t nFailedMpdus, double rxSnr, double dataSnr)$/;"	f	class:ns3::IdealWifiManager
DoReportAmpduTxStatus	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::DoReportAmpduTxStatus (WifiRemoteStation *st, uint32_t nSuccessfulMpdus, uint32_t nFailedMpdus, double rxSnr, double dataSnr)$/;"	f	class:ns3::MinstrelHtWifiManager
DoReportAmpduTxStatus	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoReportAmpduTxStatus (WifiRemoteStation *station, uint32_t nSuccessfulMpdus, uint32_t nFailedMpdus, double rxSnr, double dataSnr)$/;"	f	class:ns3::WifiRemoteStationManager
DoReportDataFailed	aarf-wifi-manager.cc	/^AarfWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::AarfWifiManager
DoReportDataFailed	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::AarfcdWifiManager
DoReportDataFailed	amrr-wifi-manager.cc	/^AmrrWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::AmrrWifiManager
DoReportDataFailed	aparf-wifi-manager.cc	/^void AparfWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::AparfWifiManager
DoReportDataFailed	arf-wifi-manager.cc	/^ArfWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::ArfWifiManager
DoReportDataFailed	cara-wifi-manager.cc	/^CaraWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::CaraWifiManager
DoReportDataFailed	constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoReportDataFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ConstantRateWifiManager
DoReportDataFailed	ideal-wifi-manager.cc	/^IdealWifiManager::DoReportDataFailed (WifiRemoteStation *station)$/;"	f	class:ns3::IdealWifiManager
DoReportDataFailed	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::MinstrelHtWifiManager
DoReportDataFailed	minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::MinstrelWifiManager
DoReportDataFailed	onoe-wifi-manager.cc	/^OnoeWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::OnoeWifiManager
DoReportDataFailed	parf-wifi-manager.cc	/^ParfWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::ParfWifiManager
DoReportDataFailed	rraa-wifi-manager.cc	/^RraaWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::RraaWifiManager
DoReportDataOk	aarf-wifi-manager.cc	/^AarfWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::AarfWifiManager
DoReportDataOk	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::AarfcdWifiManager
DoReportDataOk	amrr-wifi-manager.cc	/^AmrrWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::AmrrWifiManager
DoReportDataOk	aparf-wifi-manager.cc	/^AparfWifiManager::DoReportDataOk (WifiRemoteStation *st, double ackSnr,$/;"	f	class:ns3::AparfWifiManager
DoReportDataOk	arf-wifi-manager.cc	/^void ArfWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::ArfWifiManager
DoReportDataOk	cara-wifi-manager.cc	/^CaraWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::CaraWifiManager
DoReportDataOk	constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::ConstantRateWifiManager
DoReportDataOk	ideal-wifi-manager.cc	/^IdealWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::IdealWifiManager
DoReportDataOk	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::MinstrelHtWifiManager
DoReportDataOk	minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::MinstrelWifiManager
DoReportDataOk	onoe-wifi-manager.cc	/^OnoeWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::OnoeWifiManager
DoReportDataOk	parf-wifi-manager.cc	/^void ParfWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::ParfWifiManager
DoReportDataOk	rraa-wifi-manager.cc	/^RraaWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::RraaWifiManager
DoReportFinalDataFailed	aarf-wifi-manager.cc	/^AarfWifiManager::DoReportFinalDataFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AarfWifiManager
DoReportFinalDataFailed	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoReportFinalDataFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AarfcdWifiManager
DoReportFinalDataFailed	amrr-wifi-manager.cc	/^AmrrWifiManager::DoReportFinalDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::AmrrWifiManager
DoReportFinalDataFailed	aparf-wifi-manager.cc	/^AparfWifiManager::DoReportFinalDataFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AparfWifiManager
DoReportFinalDataFailed	arf-wifi-manager.cc	/^ArfWifiManager::DoReportFinalDataFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ArfWifiManager
DoReportFinalDataFailed	cara-wifi-manager.cc	/^CaraWifiManager::DoReportFinalDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::CaraWifiManager
DoReportFinalDataFailed	constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoReportFinalDataFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ConstantRateWifiManager
DoReportFinalDataFailed	ideal-wifi-manager.cc	/^IdealWifiManager::DoReportFinalDataFailed (WifiRemoteStation *station)$/;"	f	class:ns3::IdealWifiManager
DoReportFinalDataFailed	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::DoReportFinalDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::MinstrelHtWifiManager
DoReportFinalDataFailed	minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoReportFinalDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::MinstrelWifiManager
DoReportFinalDataFailed	onoe-wifi-manager.cc	/^OnoeWifiManager::DoReportFinalDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::OnoeWifiManager
DoReportFinalDataFailed	parf-wifi-manager.cc	/^ParfWifiManager::DoReportFinalDataFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ParfWifiManager
DoReportFinalDataFailed	rraa-wifi-manager.cc	/^RraaWifiManager::DoReportFinalDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::RraaWifiManager
DoReportFinalRtsFailed	aarf-wifi-manager.cc	/^AarfWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AarfWifiManager
DoReportFinalRtsFailed	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AarfcdWifiManager
DoReportFinalRtsFailed	amrr-wifi-manager.cc	/^AmrrWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AmrrWifiManager
DoReportFinalRtsFailed	aparf-wifi-manager.cc	/^AparfWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AparfWifiManager
DoReportFinalRtsFailed	arf-wifi-manager.cc	/^ArfWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ArfWifiManager
DoReportFinalRtsFailed	cara-wifi-manager.cc	/^CaraWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *st)$/;"	f	class:ns3::CaraWifiManager
DoReportFinalRtsFailed	constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ConstantRateWifiManager
DoReportFinalRtsFailed	ideal-wifi-manager.cc	/^IdealWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::IdealWifiManager
DoReportFinalRtsFailed	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *st)$/;"	f	class:ns3::MinstrelHtWifiManager
DoReportFinalRtsFailed	minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *st)$/;"	f	class:ns3::MinstrelWifiManager
DoReportFinalRtsFailed	onoe-wifi-manager.cc	/^OnoeWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *st)$/;"	f	class:ns3::OnoeWifiManager
DoReportFinalRtsFailed	parf-wifi-manager.cc	/^ParfWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ParfWifiManager
DoReportFinalRtsFailed	rraa-wifi-manager.cc	/^RraaWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *st)$/;"	f	class:ns3::RraaWifiManager
DoReportRtsFailed	aarf-wifi-manager.cc	/^AarfWifiManager::DoReportRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AarfWifiManager
DoReportRtsFailed	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoReportRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AarfcdWifiManager
DoReportRtsFailed	amrr-wifi-manager.cc	/^AmrrWifiManager::DoReportRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AmrrWifiManager
DoReportRtsFailed	aparf-wifi-manager.cc	/^void AparfWifiManager::DoReportRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AparfWifiManager
DoReportRtsFailed	arf-wifi-manager.cc	/^ArfWifiManager::DoReportRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ArfWifiManager
DoReportRtsFailed	cara-wifi-manager.cc	/^CaraWifiManager::DoReportRtsFailed (WifiRemoteStation *st)$/;"	f	class:ns3::CaraWifiManager
DoReportRtsFailed	constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoReportRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ConstantRateWifiManager
DoReportRtsFailed	ideal-wifi-manager.cc	/^IdealWifiManager::DoReportRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::IdealWifiManager
DoReportRtsFailed	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::DoReportRtsFailed (WifiRemoteStation *st)$/;"	f	class:ns3::MinstrelHtWifiManager
DoReportRtsFailed	minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoReportRtsFailed (WifiRemoteStation *st)$/;"	f	class:ns3::MinstrelWifiManager
DoReportRtsFailed	onoe-wifi-manager.cc	/^OnoeWifiManager::DoReportRtsFailed (WifiRemoteStation *st)$/;"	f	class:ns3::OnoeWifiManager
DoReportRtsFailed	parf-wifi-manager.cc	/^ParfWifiManager::DoReportRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ParfWifiManager
DoReportRtsFailed	rraa-wifi-manager.cc	/^RraaWifiManager::DoReportRtsFailed (WifiRemoteStation *st)$/;"	f	class:ns3::RraaWifiManager
DoReportRtsOk	aarf-wifi-manager.cc	/^AarfWifiManager::DoReportRtsOk (WifiRemoteStation *station,$/;"	f	class:ns3::AarfWifiManager
DoReportRtsOk	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoReportRtsOk (WifiRemoteStation *st,$/;"	f	class:ns3::AarfcdWifiManager
DoReportRtsOk	amrr-wifi-manager.cc	/^AmrrWifiManager::DoReportRtsOk (WifiRemoteStation *st,$/;"	f	class:ns3::AmrrWifiManager
DoReportRtsOk	aparf-wifi-manager.cc	/^AparfWifiManager::DoReportRtsOk (WifiRemoteStation *station, double ctsSnr,$/;"	f	class:ns3::AparfWifiManager
DoReportRtsOk	arf-wifi-manager.cc	/^void ArfWifiManager::DoReportRtsOk (WifiRemoteStation *station,$/;"	f	class:ns3::ArfWifiManager
DoReportRtsOk	cara-wifi-manager.cc	/^CaraWifiManager::DoReportRtsOk (WifiRemoteStation *st,$/;"	f	class:ns3::CaraWifiManager
DoReportRtsOk	constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoReportRtsOk (WifiRemoteStation *st,$/;"	f	class:ns3::ConstantRateWifiManager
DoReportRtsOk	ideal-wifi-manager.cc	/^IdealWifiManager::DoReportRtsOk (WifiRemoteStation *st,$/;"	f	class:ns3::IdealWifiManager
DoReportRtsOk	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::DoReportRtsOk (WifiRemoteStation *st, double ctsSnr, WifiMode ctsMode, double rtsSnr)$/;"	f	class:ns3::MinstrelHtWifiManager
DoReportRtsOk	minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoReportRtsOk (WifiRemoteStation *st, double ctsSnr, WifiMode ctsMode, double rtsSnr)$/;"	f	class:ns3::MinstrelWifiManager
DoReportRtsOk	onoe-wifi-manager.cc	/^OnoeWifiManager::DoReportRtsOk (WifiRemoteStation *station,$/;"	f	class:ns3::OnoeWifiManager
DoReportRtsOk	parf-wifi-manager.cc	/^void ParfWifiManager::DoReportRtsOk (WifiRemoteStation *station,$/;"	f	class:ns3::ParfWifiManager
DoReportRtsOk	rraa-wifi-manager.cc	/^RraaWifiManager::DoReportRtsOk (WifiRemoteStation *st,$/;"	f	class:ns3::RraaWifiManager
DoReportRxOk	aarf-wifi-manager.cc	/^AarfWifiManager::DoReportRxOk (WifiRemoteStation *station,$/;"	f	class:ns3::AarfWifiManager
DoReportRxOk	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoReportRxOk (WifiRemoteStation *station,$/;"	f	class:ns3::AarfcdWifiManager
DoReportRxOk	amrr-wifi-manager.cc	/^AmrrWifiManager::DoReportRxOk (WifiRemoteStation *station,$/;"	f	class:ns3::AmrrWifiManager
DoReportRxOk	aparf-wifi-manager.cc	/^AparfWifiManager::DoReportRxOk (WifiRemoteStation *station, double rxSnr, WifiMode txMode)$/;"	f	class:ns3::AparfWifiManager
DoReportRxOk	arf-wifi-manager.cc	/^ArfWifiManager::DoReportRxOk (WifiRemoteStation *station,$/;"	f	class:ns3::ArfWifiManager
DoReportRxOk	cara-wifi-manager.cc	/^CaraWifiManager::DoReportRxOk (WifiRemoteStation *st,$/;"	f	class:ns3::CaraWifiManager
DoReportRxOk	constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoReportRxOk (WifiRemoteStation *station,$/;"	f	class:ns3::ConstantRateWifiManager
DoReportRxOk	ideal-wifi-manager.cc	/^IdealWifiManager::DoReportRxOk (WifiRemoteStation *station,$/;"	f	class:ns3::IdealWifiManager
DoReportRxOk	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::DoReportRxOk (WifiRemoteStation *st,$/;"	f	class:ns3::MinstrelHtWifiManager
DoReportRxOk	minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoReportRxOk (WifiRemoteStation *st,$/;"	f	class:ns3::MinstrelWifiManager
DoReportRxOk	onoe-wifi-manager.cc	/^OnoeWifiManager::DoReportRxOk (WifiRemoteStation *station,$/;"	f	class:ns3::OnoeWifiManager
DoReportRxOk	parf-wifi-manager.cc	/^ParfWifiManager::DoReportRxOk (WifiRemoteStation *station,$/;"	f	class:ns3::ParfWifiManager
DoReportRxOk	rraa-wifi-manager.cc	/^RraaWifiManager::DoReportRxOk (WifiRemoteStation *st,$/;"	f	class:ns3::RraaWifiManager
DoRestartAccessTimeoutIfNeeded	dcf-manager.cc	/^DcfManager::DoRestartAccessTimeoutIfNeeded (void)$/;"	f	class:ns3::DcfManager
DoSetFragmentationThreshold	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoSetFragmentationThreshold (uint32_t threshold)$/;"	f	class:ns3::WifiRemoteStationManager
DoSwitchFromRx	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::DoSwitchFromRx (void)$/;"	f	class:ns3::WifiPhyStateHelper
DqpskFunction	dsss-error-rate-model.cc	/^DsssErrorRateModel::DqpskFunction (double x)$/;"	f	class:ns3::DsssErrorRateModel
DsssErrorRateModel	dsss-error-rate-model.h	/^class DsssErrorRateModel$/;"	c	namespace:ns3
EDCA_TXOP_N_H	edca-txop-n.h	23;"	d
ERP_INFORMATION_H	erp-information.h	22;"	d
ERROR_RATE_MODEL_H	error-rate-model.h	22;"	d
ESTABLISHED	originator-block-ack-agreement.h	/^    ESTABLISHED,$/;"	e	enum:ns3::OriginatorBlockAckAgreement::State
EdcaQueues	regular-wifi-mac.h	/^  typedef std::map<AcIndex, Ptr<EdcaTxopN> > EdcaQueues;$/;"	t	class:ns3::RegularWifiMac
EdcaTxopN	edca-txop-n.cc	/^EdcaTxopN::EdcaTxopN ()$/;"	f	class:ns3::EdcaTxopN
EdcaTxopN	edca-txop-n.h	/^class EdcaTxopN : public Dcf$/;"	c	namespace:ns3
ElementId	erp-information.cc	/^ErpInformation::ElementId () const$/;"	f	class:ns3::ErpInformation
ElementId	ht-capabilities.cc	/^HtCapabilities::ElementId () const$/;"	f	class:ns3::HtCapabilities
ElementId	ht-operations.cc	/^HtOperations::ElementId () const$/;"	f	class:ns3::HtOperations
ElementId	ssid.cc	/^Ssid::ElementId () const$/;"	f	class:ns3::Ssid
ElementId	supported-rates.cc	/^ExtendedSupportedRatesIE::ElementId () const$/;"	f	class:ns3::ExtendedSupportedRatesIE
ElementId	supported-rates.cc	/^SupportedRates::ElementId () const$/;"	f	class:ns3::SupportedRates
ElementId	vht-capabilities.cc	/^VhtCapabilities::ElementId () const$/;"	f	class:ns3::VhtCapabilities
EnableAck	mac-low.cc	/^MacLowTransmissionParameters::EnableAck (void)$/;"	f	class:ns3::MacLowTransmissionParameters
EnableAggregation	regular-wifi-mac.cc	/^RegularWifiMac::EnableAggregation (void)$/;"	f	class:ns3::RegularWifiMac
EnableBasicBlockAck	mac-low.cc	/^MacLowTransmissionParameters::EnableBasicBlockAck (void)$/;"	f	class:ns3::MacLowTransmissionParameters
EnableCompressedBlockAck	mac-low.cc	/^MacLowTransmissionParameters::EnableCompressedBlockAck (void)$/;"	f	class:ns3::MacLowTransmissionParameters
EnableFastAck	mac-low.cc	/^MacLowTransmissionParameters::EnableFastAck (void)$/;"	f	class:ns3::MacLowTransmissionParameters
EnableMultiTidBlockAck	mac-low.cc	/^MacLowTransmissionParameters::EnableMultiTidBlockAck (void)$/;"	f	class:ns3::MacLowTransmissionParameters
EnableNextData	mac-low.cc	/^MacLowTransmissionParameters::EnableNextData (uint32_t size)$/;"	f	class:ns3::MacLowTransmissionParameters
EnableOverrideDurationId	mac-low.cc	/^MacLowTransmissionParameters::EnableOverrideDurationId (Time durationId)$/;"	f	class:ns3::MacLowTransmissionParameters
EnableRts	mac-low.cc	/^MacLowTransmissionParameters::EnableRts (void)$/;"	f	class:ns3::MacLowTransmissionParameters
EnableSuperFastAck	mac-low.cc	/^MacLowTransmissionParameters::EnableSuperFastAck (void)$/;"	f	class:ns3::MacLowTransmissionParameters
End	wifi-information-element-vector.cc	/^WifiInformationElementVector::End ()$/;"	f	class:ns3::WifiInformationElementVector
EndReceive	yans-wifi-phy.cc	/^YansWifiPhy::EndReceive (Ptr<Packet> packet, enum WifiPreamble preamble, enum mpduType mpdutype, Ptr<InterferenceHelper::Event> event)$/;"	f	class:ns3::YansWifiPhy
EndTxNoAck	dca-txop.cc	/^  virtual void EndTxNoAck (void)$/;"	f	class:ns3::DcaTxop::TransmissionListener
EndTxNoAck	dca-txop.cc	/^DcaTxop::EndTxNoAck (void)$/;"	f	class:ns3::DcaTxop
EndTxNoAck	edca-txop-n.cc	/^  virtual void EndTxNoAck (void)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
EndTxNoAck	edca-txop-n.cc	/^EdcaTxopN::EndTxNoAck (void)$/;"	f	class:ns3::EdcaTxopN
EndTxNoAck	mac-low.cc	/^MacLow::EndTxNoAck (void)$/;"	f	class:ns3::MacLow
Enqueue	adhoc-wifi-mac.cc	/^AdhocWifiMac::Enqueue (Ptr<const Packet> packet, Mac48Address to)$/;"	f	class:ns3::AdhocWifiMac
Enqueue	ap-wifi-mac.cc	/^ApWifiMac::Enqueue (Ptr<const Packet> packet, Mac48Address to)$/;"	f	class:ns3::ApWifiMac
Enqueue	ap-wifi-mac.cc	/^ApWifiMac::Enqueue (Ptr<const Packet> packet, Mac48Address to, Mac48Address from)$/;"	f	class:ns3::ApWifiMac
Enqueue	regular-wifi-mac.cc	/^RegularWifiMac::Enqueue (Ptr<const Packet> packet,$/;"	f	class:ns3::RegularWifiMac
Enqueue	sta-wifi-mac.cc	/^StaWifiMac::Enqueue (Ptr<const Packet> packet, Mac48Address to)$/;"	f	class:ns3::StaWifiMac
Enqueue	wifi-mac-queue.cc	/^WifiMacQueue::Enqueue (Ptr<const Packet> packet, const WifiMacHeader &hdr)$/;"	f	class:ns3::WifiMacQueue
EraseEvents	interference-helper.cc	/^InterferenceHelper::EraseEvents (void)$/;"	f	class:ns3::InterferenceHelper
ErpInformation	erp-information.cc	/^ErpInformation::ErpInformation ()$/;"	f	class:ns3::ErpInformation
ErpInformation	erp-information.h	/^class ErpInformation : public WifiInformationElement$/;"	c	namespace:ns3
ErrorRateModel	error-rate-model.h	/^class ErrorRateModel : public Object$/;"	c	namespace:ns3
Event	interference-helper.cc	/^InterferenceHelper::Event::Event (uint32_t size, WifiTxVector txVector,$/;"	f	class:ns3::InterferenceHelper::Event
Event	interference-helper.h	/^  class Event : public SimpleRefCount<InterferenceHelper::Event>$/;"	c	class:ns3::InterferenceHelper
Events	interference-helper.h	/^  typedef std::list<Ptr<Event> > Events;$/;"	t	class:ns3::InterferenceHelper
ExistsAgreement	block-ack-manager.cc	/^BlockAckManager::ExistsAgreement (Mac48Address recipient, uint8_t tid) const$/;"	f	class:ns3::BlockAckManager
ExistsAgreementInState	block-ack-manager.cc	/^BlockAckManager::ExistsAgreementInState (Mac48Address recipient, uint8_t tid,$/;"	f	class:ns3::BlockAckManager
ExtendedSupportedRatesIE	supported-rates.cc	/^ExtendedSupportedRatesIE::ExtendedSupportedRatesIE ()$/;"	f	class:ns3::ExtendedSupportedRatesIE
ExtendedSupportedRatesIE	supported-rates.cc	/^ExtendedSupportedRatesIE::ExtendedSupportedRatesIE (SupportedRates *sr)$/;"	f	class:ns3::ExtendedSupportedRatesIE
ExtendedSupportedRatesIE	supported-rates.h	/^class ExtendedSupportedRatesIE : public WifiInformationElement$/;"	c	namespace:ns3
FOO	wifi-mac-header.cc	1037;"	d	file:
FOO	wifi-mac-header.cc	992;"	d	file:
Factorial	yans-error-rate-model.cc	/^YansErrorRateModel::Factorial (uint32_t k) const$/;"	f	class:ns3::YansErrorRateModel
FastAckFailedTimeout	mac-low.cc	/^MacLow::FastAckFailedTimeout (void)$/;"	f	class:ns3::MacLow
FastAckTimeout	mac-low.cc	/^MacLow::FastAckTimeout (void)$/;"	f	class:ns3::MacLow
FillBlockAckBitmap	block-ack-cache.cc	/^BlockAckCache::FillBlockAckBitmap (CtrlBAckResponseHeader *blockAckHeader)$/;"	f	class:ns3::BlockAckCache
FindFirst	wifi-information-element-vector.cc	/^WifiInformationElementVector::FindFirst (WifiInformationElementId id) const$/;"	f	class:ns3::WifiInformationElementVector
FindRate	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::FindRate (MinstrelHtWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelHtWifiManager
FindRate	minstrel-wifi-manager.cc	/^MinstrelWifiManager::FindRate (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
FinishConfigureStandard	regular-wifi-mac.cc	/^RegularWifiMac::FinishConfigureStandard (enum WifiPhyStandard standard)$/;"	f	class:ns3::RegularWifiMac
Flush	wifi-mac-queue.cc	/^WifiMacQueue::Flush (void)$/;"	f	class:ns3::WifiMacQueue
FlushAggregateQueue	mac-low.cc	/^MacLow::FlushAggregateQueue (void)$/;"	f	class:ns3::MacLow
ForwardDown	ap-wifi-mac.cc	/^ApWifiMac::ForwardDown (Ptr<const Packet> packet, Mac48Address from,$/;"	f	class:ns3::ApWifiMac
ForwardDown	mac-low.cc	/^MacLow::ForwardDown (Ptr<const Packet> packet, const WifiMacHeader* hdr,$/;"	f	class:ns3::MacLow
ForwardUp	regular-wifi-mac.cc	/^RegularWifiMac::ForwardUp (Ptr<Packet> packet, Mac48Address from, Mac48Address to)$/;"	f	class:ns3::RegularWifiMac
ForwardUp	wifi-net-device.cc	/^WifiNetDevice::ForwardUp (Ptr<Packet> packet, Mac48Address from, Mac48Address to)$/;"	f	class:ns3::WifiNetDevice
ForwardUpCallback	mac-rx-middle.h	/^  typedef Callback<void, Ptr<Packet>, const WifiMacHeader*> ForwardUpCallback;$/;"	t	class:ns3::MacRxMiddle
ForwardUpCallback	regular-wifi-mac.h	/^  typedef Callback<void, Ptr<Packet>, Mac48Address, Mac48Address> ForwardUpCallback;$/;"	t	class:ns3::RegularWifiMac
Fragments	mac-rx-middle.cc	/^  typedef std::list<Ptr<const Packet> > Fragments;$/;"	t	class:ns3::OriginatorRxStatus	file:
FragmentsCI	mac-rx-middle.cc	/^  typedef std::list<Ptr<const Packet> >::const_iterator FragmentsCI;$/;"	t	class:ns3::OriginatorRxStatus	file:
FunctionParameterType	dsss-error-rate-model.h	/^typedef struct FunctionParameterType$/;"	s	namespace:ns3
FunctionParameters	dsss-error-rate-model.h	/^} FunctionParameters;$/;"	t	namespace:ns3	typeref:struct:ns3::FunctionParameterType
GOT_ASSOC_TX_OK	wifi-remote-station-manager.h	/^    GOT_ASSOC_TX_OK$/;"	e	enum:ns3::WifiRemoteStationState::__anon9
GROUP_KEY_ACK	mgt-headers.h	/^    GROUP_KEY_ACK = 5,          \/\/Mesh Group Key Acknowledge$/;"	e	enum:ns3::WifiActionHeader::SelfProtectedActionValue
GROUP_KEY_INFORM	mgt-headers.h	/^    GROUP_KEY_INFORM = 4,       \/\/Mesh Group Key Inform$/;"	e	enum:ns3::WifiActionHeader::SelfProtectedActionValue
Get	snr-tag.cc	/^SnrTag::Get (void) const$/;"	f	class:ns3::SnrTag
Get	wifi-mode.cc	/^WifiModeFactory::Get (uint32_t uid)$/;"	f	class:ns3::WifiModeFactory
Get16QamBer	nist-error-rate-model.cc	/^NistErrorRateModel::Get16QamBer (double snr) const$/;"	f	class:ns3::NistErrorRateModel
Get256QamBer	nist-error-rate-model.cc	/^NistErrorRateModel::Get256QamBer (double snr) const$/;"	f	class:ns3::NistErrorRateModel
Get64QamBer	nist-error-rate-model.cc	/^NistErrorRateModel::Get64QamBer (double snr) const$/;"	f	class:ns3::NistErrorRateModel
GetAccessGrantStart	dcf-manager.cc	/^DcfManager::GetAccessGrantStart (void) const$/;"	f	class:ns3::DcfManager
GetAckDuration	mac-low.cc	/^MacLow::GetAckDuration (Mac48Address to, WifiTxVector dataTxVector) const$/;"	f	class:ns3::MacLow
GetAckDuration	mac-low.cc	/^MacLow::GetAckDuration (WifiTxVector ackTxVector) const$/;"	f	class:ns3::MacLow
GetAckSize	mac-low.cc	/^MacLow::GetAckSize (void) const$/;"	f	class:ns3::MacLow
GetAckTimeout	mac-low.cc	/^MacLow::GetAckTimeout (void) const$/;"	f	class:ns3::MacLow
GetAckTimeout	regular-wifi-mac.cc	/^RegularWifiMac::GetAckTimeout (void) const$/;"	f	class:ns3::RegularWifiMac
GetAckTxVector	mac-low.cc	/^MacLow::GetAckTxVector (Mac48Address to, WifiMode dataTxMode) const$/;"	f	class:ns3::MacLow
GetAckTxVector	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetAckTxVector (Mac48Address address, WifiMode dataMode)$/;"	f	class:ns3::WifiRemoteStationManager
GetAckTxVectorForData	mac-low.cc	/^MacLow::GetAckTxVectorForData (Mac48Address to, WifiMode dataTxMode) const$/;"	f	class:ns3::MacLow
GetAction	mgt-headers.cc	/^WifiActionHeader::GetAction ()$/;"	f	class:ns3::WifiActionHeader
GetActiveProbing	sta-wifi-mac.cc	/^bool StaWifiMac::GetActiveProbing (void) const$/;"	f	class:ns3::StaWifiMac
GetAddr1	wifi-mac-header.cc	/^WifiMacHeader::GetAddr1 (void) const$/;"	f	class:ns3::WifiMacHeader
GetAddr2	wifi-mac-header.cc	/^WifiMacHeader::GetAddr2 (void) const$/;"	f	class:ns3::WifiMacHeader
GetAddr3	wifi-mac-header.cc	/^WifiMacHeader::GetAddr3 (void) const$/;"	f	class:ns3::WifiMacHeader
GetAddr4	wifi-mac-header.cc	/^WifiMacHeader::GetAddr4 (void) const$/;"	f	class:ns3::WifiMacHeader
GetAddress	mac-low.cc	/^MacLow::GetAddress (void) const$/;"	f	class:ns3::MacLow
GetAddress	regular-wifi-mac.cc	/^RegularWifiMac::GetAddress (void) const$/;"	f	class:ns3::RegularWifiMac
GetAddress	wifi-net-device.cc	/^WifiNetDevice::GetAddress (void) const$/;"	f	class:ns3::WifiNetDevice
GetAddressForPacket	wifi-mac-queue.cc	/^WifiMacQueue::GetAddressForPacket (enum WifiMacHeader::AddressType type, PacketQueueI it)$/;"	f	class:ns3::WifiMacQueue
GetAggregation	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetAggregation (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetAifsn	dca-txop.cc	/^DcaTxop::GetAifsn (void) const$/;"	f	class:ns3::DcaTxop
GetAifsn	dcf-manager.cc	/^DcfState::GetAifsn (void) const$/;"	f	class:ns3::DcfState
GetAifsn	edca-txop-n.cc	/^EdcaTxopN::GetAifsn (void) const$/;"	f	class:ns3::EdcaTxopN
GetAmpdu	ampdu-tag.cc	/^AmpduTag::GetAmpdu () const$/;"	f	class:ns3::AmpduTag
GetAmpduExist	edca-txop-n.cc	/^bool EdcaTxopN::GetAmpduExist (Mac48Address dest)$/;"	f	class:ns3::EdcaTxopN
GetAmpduParameters	ht-capabilities.cc	/^HtCapabilities::GetAmpduParameters (void) const$/;"	f	class:ns3::HtCapabilities
GetAntennaSelectionCapabilities	ht-capabilities.cc	/^HtCapabilities::GetAntennaSelectionCapabilities (void) const$/;"	f	class:ns3::HtCapabilities
GetBEQueue	regular-wifi-mac.cc	/^RegularWifiMac::GetBEQueue () const$/;"	f	class:ns3::RegularWifiMac
GetBKQueue	regular-wifi-mac.cc	/^RegularWifiMac::GetBKQueue () const$/;"	f	class:ns3::RegularWifiMac
GetBaAgreementExists	edca-txop-n.cc	/^EdcaTxopN::GetBaAgreementExists (Mac48Address address, uint8_t tid)$/;"	f	class:ns3::EdcaTxopN
GetBaControl	ctrl-headers.cc	/^CtrlBAckResponseHeader::GetBaControl (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
GetBackoffEndFor	dcf-manager.cc	/^DcfManager::GetBackoffEndFor (DcfState *state)$/;"	f	class:ns3::DcfManager
GetBackoffSlots	dcf-manager.cc	/^DcfState::GetBackoffSlots (void) const$/;"	f	class:ns3::DcfState
GetBackoffStart	dcf-manager.cc	/^DcfState::GetBackoffStart (void) const$/;"	f	class:ns3::DcfState
GetBackoffStartFor	dcf-manager.cc	/^DcfManager::GetBackoffStartFor (DcfState *state)$/;"	f	class:ns3::DcfManager
GetBarControl	ctrl-headers.cc	/^CtrlBAckRequestHeader::GetBarControl (void) const$/;"	f	class:ns3::CtrlBAckRequestHeader
GetBarkerPreambleMode	erp-information.cc	/^ErpInformation::GetBarkerPreambleMode (void) const$/;"	f	class:ns3::ErpInformation
GetBasicBlockAckTimeout	mac-low.cc	/^MacLow::GetBasicBlockAckTimeout () const$/;"	f	class:ns3::MacLow
GetBasicBlockAckTimeout	regular-wifi-mac.cc	/^RegularWifiMac::GetBasicBlockAckTimeout (void) const$/;"	f	class:ns3::RegularWifiMac
GetBasicBlockAckTimeout	wifi-mac.cc	/^WifiMac::GetBasicBlockAckTimeout (void) const$/;"	f	class:ns3::WifiMac
GetBasicMcs	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetBasicMcs (uint32_t i) const$/;"	f	class:ns3::WifiRemoteStationManager
GetBasicMcsSet1	ht-operations.cc	/^HtOperations::GetBasicMcsSet1 (void) const$/;"	f	class:ns3::HtOperations
GetBasicMcsSet2	ht-operations.cc	/^HtOperations::GetBasicMcsSet2 (void) const$/;"	f	class:ns3::HtOperations
GetBasicMode	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetBasicMode (uint32_t i) const$/;"	f	class:ns3::WifiRemoteStationManager
GetBeaconGeneration	ap-wifi-mac.cc	/^ApWifiMac::GetBeaconGeneration (void) const$/;"	f	class:ns3::ApWifiMac
GetBeaconInterval	ap-wifi-mac.cc	/^ApWifiMac::GetBeaconInterval (void) const$/;"	f	class:ns3::ApWifiMac
GetBeaconIntervalUs	mgt-headers.cc	/^MgtProbeResponseHeader::GetBeaconIntervalUs (void) const$/;"	f	class:ns3::MgtProbeResponseHeader
GetBitmap	ctrl-headers.cc	/^CtrlBAckResponseHeader::GetBitmap (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
GetBlockAckAgreementExists	edca-txop-n.cc	/^  virtual bool GetBlockAckAgreementExists (Mac48Address address, uint8_t tid)$/;"	f	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener
GetBlockAckDuration	mac-low.cc	/^MacLow::GetBlockAckDuration (Mac48Address to, WifiTxVector blockAckReqTxVector, enum BlockAckType type) const$/;"	f	class:ns3::MacLow
GetBlockAckSize	mac-low.cc	/^MacLow::GetBlockAckSize (enum BlockAckType type) const$/;"	f	class:ns3::MacLow
GetBlockAckThreshold	edca-txop-n.cc	/^EdcaTxopN::GetBlockAckThreshold (void) const$/;"	f	class:ns3::EdcaTxopN
GetBlockAckTxVector	mac-low.cc	/^MacLow::GetBlockAckTxVector (Mac48Address to, WifiMode dataTxMode) const$/;"	f	class:ns3::MacLow
GetBlockAckTxVector	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetBlockAckTxVector (Mac48Address address, WifiMode blockAckReqMode)$/;"	f	class:ns3::WifiRemoteStationManager
GetBpskBer	nist-error-rate-model.cc	/^NistErrorRateModel::GetBpskBer (double snr) const$/;"	f	class:ns3::NistErrorRateModel
GetBpskBer	yans-error-rate-model.cc	/^YansErrorRateModel::GetBpskBer (double snr, uint32_t signalSpread, uint32_t phyRate) const$/;"	f	class:ns3::YansErrorRateModel
GetBroadcast	wifi-net-device.cc	/^WifiNetDevice::GetBroadcast (void) const$/;"	f	class:ns3::WifiNetDevice
GetBssMembershipSelector	yans-wifi-phy.cc	/^YansWifiPhy::GetBssMembershipSelector (uint32_t selector) const$/;"	f	class:ns3::YansWifiPhy
GetBssid	mac-low.cc	/^MacLow::GetBssid (void) const$/;"	f	class:ns3::MacLow
GetBssid	regular-wifi-mac.cc	/^RegularWifiMac::GetBssid (void) const$/;"	f	class:ns3::RegularWifiMac
GetBufferSize	block-ack-agreement.cc	/^BlockAckAgreement::GetBufferSize (void) const$/;"	f	class:ns3::BlockAckAgreement
GetBufferSize	mgt-headers.cc	/^MgtAddBaRequestHeader::GetBufferSize (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
GetBufferSize	mgt-headers.cc	/^MgtAddBaResponseHeader::GetBufferSize (void) const$/;"	f	class:ns3::MgtAddBaResponseHeader
GetCalcTxTime	minstrel-wifi-manager.cc	/^MinstrelWifiManager::GetCalcTxTime (WifiMode mode) const$/;"	f	class:ns3::MinstrelWifiManager
GetCapabilities	ap-wifi-mac.cc	/^ApWifiMac::GetCapabilities (void) const$/;"	f	class:ns3::ApWifiMac
GetCapabilities	mgt-headers.cc	/^MgtAssocRequestHeader::GetCapabilities (void) const$/;"	f	class:ns3::MgtAssocRequestHeader
GetCapabilities	mgt-headers.cc	/^MgtAssocResponseHeader::GetCapabilities (void) const$/;"	f	class:ns3::MgtAssocResponseHeader
GetCapabilities	mgt-headers.cc	/^MgtProbeResponseHeader::GetCapabilities (void) const$/;"	f	class:ns3::MgtProbeResponseHeader
GetCapabilities	sta-wifi-mac.cc	/^StaWifiMac::GetCapabilities (void) const$/;"	f	class:ns3::StaWifiMac
GetCategory	mgt-headers.cc	/^WifiActionHeader::GetCategory ()$/;"	f	class:ns3::WifiActionHeader
GetCcaBusyCurrentA	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::GetCcaBusyCurrentA (void) const$/;"	f	class:ns3::WifiRadioEnergyModel
GetCcaMode1Threshold	yans-wifi-phy.cc	/^YansWifiPhy::GetCcaMode1Threshold (void) const$/;"	f	class:ns3::YansWifiPhy
GetChannel	wifi-net-device.cc	/^WifiNetDevice::GetChannel (void) const$/;"	f	class:ns3::WifiNetDevice
GetChannel	yans-wifi-phy.cc	/^YansWifiPhy::GetChannel (void) const$/;"	f	class:ns3::YansWifiPhy
GetChannelFrequencyMhz	yans-wifi-phy.cc	/^YansWifiPhy::GetChannelFrequencyMhz () const$/;"	f	class:ns3::YansWifiPhy
GetChannelNumber	yans-wifi-phy.cc	/^YansWifiPhy::GetChannelNumber (void) const$/;"	f	class:ns3::YansWifiPhy
GetChannelSwitchDelay	yans-wifi-phy.cc	/^YansWifiPhy::GetChannelSwitchDelay (void) const$/;"	f	class:ns3::YansWifiPhy
GetChannelWidth	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetChannelWidth (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetChannelWidth	wifi-tx-vector.cc	/^WifiTxVector::GetChannelWidth (void) const$/;"	f	class:ns3::WifiTxVector
GetChannelWidth	yans-wifi-phy.cc	/^YansWifiPhy::GetChannelWidth (void) const$/;"	f	class:ns3::YansWifiPhy
GetChannelWidthForMode	ideal-wifi-manager.cc	/^IdealWifiManager::GetChannelWidthForMode (WifiMode mode) const$/;"	f	class:ns3::IdealWifiManager
GetChunkSuccessRate	nist-error-rate-model.cc	/^NistErrorRateModel::GetChunkSuccessRate (WifiMode mode, WifiTxVector txVector, double snr, uint32_t nbits) const$/;"	f	class:ns3::NistErrorRateModel
GetChunkSuccessRate	yans-error-rate-model.cc	/^YansErrorRateModel::GetChunkSuccessRate (WifiMode mode, WifiTxVector txVector, double snr, uint32_t nbits) const$/;"	f	class:ns3::YansErrorRateModel
GetCodeRate	wifi-mode.cc	/^WifiMode::GetCodeRate (void) const$/;"	f	class:ns3::WifiMode
GetCompressedBitmap	ctrl-headers.cc	/^CtrlBAckResponseHeader::GetCompressedBitmap (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
GetCompressedBlockAckTimeout	mac-low.cc	/^MacLow::GetCompressedBlockAckTimeout () const$/;"	f	class:ns3::MacLow
GetCompressedBlockAckTimeout	regular-wifi-mac.cc	/^RegularWifiMac::GetCompressedBlockAckTimeout (void) const$/;"	f	class:ns3::RegularWifiMac
GetCompressedBlockAckTimeout	wifi-mac.cc	/^WifiMac::GetCompressedBlockAckTimeout (void) const$/;"	f	class:ns3::WifiMac
GetConstellationSize	wifi-mode.cc	/^WifiMode::GetConstellationSize (void) const$/;"	f	class:ns3::WifiMode
GetControlAnswerMode	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetControlAnswerMode (Mac48Address address, WifiMode reqMode)$/;"	f	class:ns3::WifiRemoteStationManager
GetCrc	ampdu-subframe-header.cc	/^AmpduSubframeHeader::GetCrc (void) const$/;"	f	class:ns3::AmpduSubframeHeader
GetCtsDuration	mac-low.cc	/^MacLow::GetCtsDuration (Mac48Address to, WifiTxVector rtsTxVector) const$/;"	f	class:ns3::MacLow
GetCtsDuration	mac-low.cc	/^MacLow::GetCtsDuration (WifiTxVector ctsTxVector) const$/;"	f	class:ns3::MacLow
GetCtsSize	mac-low.cc	/^MacLow::GetCtsSize (void) const$/;"	f	class:ns3::MacLow
GetCtsTimeout	mac-low.cc	/^MacLow::GetCtsTimeout (void) const$/;"	f	class:ns3::MacLow
GetCtsTimeout	regular-wifi-mac.cc	/^RegularWifiMac::GetCtsTimeout (void) const$/;"	f	class:ns3::RegularWifiMac
GetCtsToSelfSupported	mac-low.cc	/^MacLow::GetCtsToSelfSupported () const$/;"	f	class:ns3::MacLow
GetCtsToSelfSupported	regular-wifi-mac.cc	/^RegularWifiMac::GetCtsToSelfSupported () const$/;"	f	class:ns3::RegularWifiMac
GetCtsToSelfTxVector	mac-low.cc	/^MacLow::GetCtsToSelfTxVector (Ptr<const Packet> packet, const WifiMacHeader *hdr) const$/;"	f	class:ns3::MacLow
GetCtsToSelfTxVector	wifi-remote-station-manager.cc	/^HighLatencyCtsToSelfTxVectorTag::GetCtsToSelfTxVector (void) const$/;"	f	class:ns3::HighLatencyCtsToSelfTxVectorTag
GetCtsToSelfTxVector	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetCtsToSelfTxVector (const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
GetCtsTxVector	mac-low.cc	/^MacLow::GetCtsTxVector (Mac48Address to, WifiMode rtsTxMode) const$/;"	f	class:ns3::MacLow
GetCtsTxVector	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetCtsTxVector (Mac48Address address, WifiMode rtsMode)$/;"	f	class:ns3::WifiRemoteStationManager
GetCtsTxVectorForRts	mac-low.cc	/^MacLow::GetCtsTxVectorForRts (Mac48Address to, WifiMode rtsTxMode) const$/;"	f	class:ns3::MacLow
GetCurrentState	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::GetCurrentState (void) const$/;"	f	class:ns3::WifiRadioEnergyModel
GetCw	dcf-manager.cc	/^DcfState::GetCw (void) const$/;"	f	class:ns3::DcfState
GetCwMax	dcf-manager.cc	/^DcfState::GetCwMax (void) const$/;"	f	class:ns3::DcfState
GetCwMin	dcf-manager.cc	/^DcfState::GetCwMin (void) const$/;"	f	class:ns3::DcfState
GetDataRate	wifi-mode.cc	/^WifiMode::GetDataRate (WifiTxVector txVector) const$/;"	f	class:ns3::WifiMode
GetDataRate	wifi-mode.cc	/^WifiMode::GetDataRate (uint32_t channelWidth, bool isShortGuardInterval, uint8_t nss) const$/;"	f	class:ns3::WifiMode
GetDataTxVector	mac-low.cc	/^MacLow::GetDataTxVector (Ptr<const Packet> packet, const WifiMacHeader *hdr) const$/;"	f	class:ns3::MacLow
GetDataTxVector	minstrel-wifi-manager.cc	/^MinstrelWifiManager::GetDataTxVector (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
GetDataTxVector	wifi-remote-station-manager.cc	/^HighLatencyDataTxVectorTag::GetDataTxVector (void) const$/;"	f	class:ns3::HighLatencyDataTxVectorTag
GetDataTxVector	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetDataTxVector (Mac48Address address, const WifiMacHeader *header, Ptr<const Packet> packet)$/;"	f	class:ns3::WifiRemoteStationManager
GetDcaTxop	regular-wifi-mac.cc	/^RegularWifiMac::GetDcaTxop () const$/;"	f	class:ns3::RegularWifiMac
GetDefaultBasicBlockAckDelay	wifi-mac.cc	/^WifiMac::GetDefaultBasicBlockAckDelay (void)$/;"	f	class:ns3::WifiMac
GetDefaultBasicBlockAckTimeout	wifi-mac.cc	/^WifiMac::GetDefaultBasicBlockAckTimeout (void)$/;"	f	class:ns3::WifiMac
GetDefaultCompressedBlockAckDelay	wifi-mac.cc	/^WifiMac::GetDefaultCompressedBlockAckDelay (void)$/;"	f	class:ns3::WifiMac
GetDefaultCompressedBlockAckTimeout	wifi-mac.cc	/^WifiMac::GetDefaultCompressedBlockAckTimeout (void)$/;"	f	class:ns3::WifiMac
GetDefaultCtsAckDelay	wifi-mac.cc	/^WifiMac::GetDefaultCtsAckDelay (void)$/;"	f	class:ns3::WifiMac
GetDefaultCtsAckTimeout	wifi-mac.cc	/^WifiMac::GetDefaultCtsAckTimeout (void)$/;"	f	class:ns3::WifiMac
GetDefaultEifsNoDifs	wifi-mac.cc	/^WifiMac::GetDefaultEifsNoDifs (void)$/;"	f	class:ns3::WifiMac
GetDefaultMaxPropagationDelay	wifi-mac.cc	/^WifiMac::GetDefaultMaxPropagationDelay (void)$/;"	f	class:ns3::WifiMac
GetDefaultMcs	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetDefaultMcs (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetDefaultMode	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetDefaultMode (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetDefaultRifs	wifi-mac.cc	/^WifiMac::GetDefaultRifs (void)$/;"	f	class:ns3::WifiMac
GetDefaultSifs	wifi-mac.cc	/^WifiMac::GetDefaultSifs (void)$/;"	f	class:ns3::WifiMac
GetDefaultSlot	wifi-mac.cc	/^WifiMac::GetDefaultSlot (void)$/;"	f	class:ns3::WifiMac
GetDefaultTxPowerLevel	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetDefaultTxPowerLevel (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetDelayUntilIdle	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::GetDelayUntilIdle (void)$/;"	f	class:ns3::WifiPhyStateHelper
GetDelayUntilIdle	yans-wifi-phy.cc	/^YansWifiPhy::GetDelayUntilIdle (void)$/;"	f	class:ns3::YansWifiPhy
GetDelta	interference-helper.cc	/^InterferenceHelper::NiChange::GetDelta (void) const$/;"	f	class:ns3::InterferenceHelper::NiChange
GetDestAddressForAggregation	edca-txop-n.cc	/^  virtual Mac48Address GetDestAddressForAggregation (const WifiMacHeader &hdr)$/;"	f	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener
GetDestAddressForAggregation	mac-low.cc	/^MacLowAggregationCapableTransmissionListener::GetDestAddressForAggregation (const WifiMacHeader &hdr)$/;"	f	class:ns3::MacLowAggregationCapableTransmissionListener
GetDestinationAddr	amsdu-subframe-header.cc	/^AmsduSubframeHeader::GetDestinationAddr (void) const$/;"	f	class:ns3::AmsduSubframeHeader
GetDevice	yans-wifi-channel.cc	/^YansWifiChannel::GetDevice (uint32_t i) const$/;"	f	class:ns3::YansWifiChannel
GetDevice	yans-wifi-phy.cc	/^YansWifiPhy::GetDevice (void) const$/;"	f	class:ns3::YansWifiPhy
GetDsssDbpskSuccessRate	dsss-error-rate-model.cc	/^DsssErrorRateModel::GetDsssDbpskSuccessRate (double sinr, uint32_t nbits)$/;"	f	class:ns3::DsssErrorRateModel
GetDsssDqpskCck11SuccessRate	dsss-error-rate-model.cc	/^DsssErrorRateModel::GetDsssDqpskCck11SuccessRate (double sinr, uint32_t nbits)$/;"	f	class:ns3::DsssErrorRateModel
GetDsssDqpskCck5_5SuccessRate	dsss-error-rate-model.cc	/^DsssErrorRateModel::GetDsssDqpskCck5_5SuccessRate (double sinr, uint32_t nbits)$/;"	f	class:ns3::DsssErrorRateModel
GetDsssDqpskSuccessRate	dsss-error-rate-model.cc	/^DsssErrorRateModel::GetDsssDqpskSuccessRate (double sinr, uint32_t nbits)$/;"	f	class:ns3::DsssErrorRateModel
GetDsssRate11Mbps	wifi-phy.cc	/^WifiPhy::GetDsssRate11Mbps ()$/;"	f	class:ns3::WifiPhy
GetDsssRate1Mbps	wifi-phy.cc	/^WifiPhy::GetDsssRate1Mbps ()$/;"	f	class:ns3::WifiPhy
GetDsssRate2Mbps	wifi-phy.cc	/^WifiPhy::GetDsssRate2Mbps ()$/;"	f	class:ns3::WifiPhy
GetDsssRate5_5Mbps	wifi-phy.cc	/^WifiPhy::GetDsssRate5_5Mbps ()$/;"	f	class:ns3::WifiPhy
GetDualBeacon	ht-operations.cc	/^HtOperations::GetDualBeacon (void) const$/;"	f	class:ns3::HtOperations
GetDualCtsProtection	ht-operations.cc	/^HtOperations::GetDualCtsProtection (void) const$/;"	f	class:ns3::HtOperations
GetDuration	interference-helper.cc	/^InterferenceHelper::Event::GetDuration (void) const$/;"	f	class:ns3::InterferenceHelper::Event
GetDuration	wifi-mac-header.cc	/^WifiMacHeader::GetDuration (void) const$/;"	f	class:ns3::WifiMacHeader
GetDurationId	mac-low.cc	/^MacLowTransmissionParameters::GetDurationId (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
GetEdThreshold	yans-wifi-phy.cc	/^YansWifiPhy::GetEdThreshold (void) const$/;"	f	class:ns3::YansWifiPhy
GetEdThresholdW	yans-wifi-phy.cc	/^YansWifiPhy::GetEdThresholdW (void) const$/;"	f	class:ns3::YansWifiPhy
GetEdcaQueue	edca-txop-n.cc	/^EdcaTxopN::GetEdcaQueue () const$/;"	f	class:ns3::EdcaTxopN
GetEifsNoDifs	dcf-manager.cc	/^DcfManager::GetEifsNoDifs () const$/;"	f	class:ns3::DcfManager
GetEifsNoDifs	regular-wifi-mac.cc	/^RegularWifiMac::GetEifsNoDifs (void) const$/;"	f	class:ns3::RegularWifiMac
GetEndTime	interference-helper.cc	/^InterferenceHelper::Event::GetEndTime (void) const$/;"	f	class:ns3::InterferenceHelper::Event
GetEnergyDuration	interference-helper.cc	/^InterferenceHelper::GetEnergyDuration (double energyW)$/;"	f	class:ns3::InterferenceHelper
GetEof	ampdu-subframe-header.cc	/^AmpduSubframeHeader::GetEof (void) const$/;"	f	class:ns3::AmpduSubframeHeader
GetErpInformation	ap-wifi-mac.cc	/^ApWifiMac::GetErpInformation (void) const$/;"	f	class:ns3::ApWifiMac
GetErpInformation	mgt-headers.cc	/^MgtAssocResponseHeader::GetErpInformation (void) const$/;"	f	class:ns3::MgtAssocResponseHeader
GetErpInformation	mgt-headers.cc	/^MgtProbeResponseHeader::GetErpInformation (void) const$/;"	f	class:ns3::MgtProbeResponseHeader
GetErpOfdmRate12Mbps	wifi-phy.cc	/^WifiPhy::GetErpOfdmRate12Mbps ()$/;"	f	class:ns3::WifiPhy
GetErpOfdmRate18Mbps	wifi-phy.cc	/^WifiPhy::GetErpOfdmRate18Mbps ()$/;"	f	class:ns3::WifiPhy
GetErpOfdmRate24Mbps	wifi-phy.cc	/^WifiPhy::GetErpOfdmRate24Mbps ()$/;"	f	class:ns3::WifiPhy
GetErpOfdmRate36Mbps	wifi-phy.cc	/^WifiPhy::GetErpOfdmRate36Mbps ()$/;"	f	class:ns3::WifiPhy
GetErpOfdmRate48Mbps	wifi-phy.cc	/^WifiPhy::GetErpOfdmRate48Mbps ()$/;"	f	class:ns3::WifiPhy
GetErpOfdmRate54Mbps	wifi-phy.cc	/^WifiPhy::GetErpOfdmRate54Mbps ()$/;"	f	class:ns3::WifiPhy
GetErpOfdmRate6Mbps	wifi-phy.cc	/^WifiPhy::GetErpOfdmRate6Mbps ()$/;"	f	class:ns3::WifiPhy
GetErpOfdmRate9Mbps	wifi-phy.cc	/^WifiPhy::GetErpOfdmRate9Mbps ()$/;"	f	class:ns3::WifiPhy
GetErpSupported	regular-wifi-mac.cc	/^RegularWifiMac::GetErpSupported () const$/;"	f	class:ns3::RegularWifiMac
GetErrorRateModel	interference-helper.cc	/^InterferenceHelper::GetErrorRateModel (void) const$/;"	f	class:ns3::InterferenceHelper
GetErrorRateModel	yans-wifi-phy.cc	/^YansWifiPhy::GetErrorRateModel (void) const$/;"	f	class:ns3::YansWifiPhy
GetEta	wifi-tx-current-model.cc	/^LinearWifiTxCurrentModel::GetEta (void) const$/;"	f	class:ns3::LinearWifiTxCurrentModel
GetExtendedHtCapabilities	ht-capabilities.cc	/^HtCapabilities::GetExtendedHtCapabilities (void) const$/;"	f	class:ns3::HtCapabilities
GetFactory	wifi-mode.cc	/^WifiModeFactory::GetFactory (void)$/;"	f	class:ns3::WifiModeFactory
GetFec16QamBer	nist-error-rate-model.cc	/^NistErrorRateModel::GetFec16QamBer (double snr, uint32_t nbits,$/;"	f	class:ns3::NistErrorRateModel
GetFec256QamBer	nist-error-rate-model.cc	/^NistErrorRateModel::GetFec256QamBer (double snr, uint32_t nbits,$/;"	f	class:ns3::NistErrorRateModel
GetFec64QamBer	nist-error-rate-model.cc	/^NistErrorRateModel::GetFec64QamBer (double snr, uint32_t nbits,$/;"	f	class:ns3::NistErrorRateModel
GetFecBpskBer	nist-error-rate-model.cc	/^NistErrorRateModel::GetFecBpskBer (double snr, uint32_t nbits,$/;"	f	class:ns3::NistErrorRateModel
GetFecBpskBer	yans-error-rate-model.cc	/^YansErrorRateModel::GetFecBpskBer (double snr, double nbits,$/;"	f	class:ns3::YansErrorRateModel
GetFecQamBer	yans-error-rate-model.cc	/^YansErrorRateModel::GetFecQamBer (double snr, uint32_t nbits,$/;"	f	class:ns3::YansErrorRateModel
GetFecQpskBer	nist-error-rate-model.cc	/^NistErrorRateModel::GetFecQpskBer (double snr, uint32_t nbits,$/;"	f	class:ns3::NistErrorRateModel
GetFirstMpduTxTime	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::GetFirstMpduTxTime (uint32_t groupId, WifiMode mode) const$/;"	f	class:ns3::MinstrelHtWifiManager
GetFragmentNumber	wifi-mac-header.cc	/^WifiMacHeader::GetFragmentNumber (void) const$/;"	f	class:ns3::WifiMacHeader
GetFragmentOffset	dca-txop.cc	/^DcaTxop::GetFragmentOffset (void)$/;"	f	class:ns3::DcaTxop
GetFragmentOffset	edca-txop-n.cc	/^EdcaTxopN::GetFragmentOffset (void)$/;"	f	class:ns3::EdcaTxopN
GetFragmentOffset	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetFragmentOffset (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
GetFragmentPacket	dca-txop.cc	/^DcaTxop::GetFragmentPacket (WifiMacHeader *hdr)$/;"	f	class:ns3::DcaTxop
GetFragmentPacket	edca-txop-n.cc	/^EdcaTxopN::GetFragmentPacket (WifiMacHeader *hdr)$/;"	f	class:ns3::EdcaTxopN
GetFragmentSize	dca-txop.cc	/^DcaTxop::GetFragmentSize (void)$/;"	f	class:ns3::DcaTxop
GetFragmentSize	edca-txop-n.cc	/^EdcaTxopN::GetFragmentSize (void)$/;"	f	class:ns3::EdcaTxopN
GetFragmentSize	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetFragmentSize (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
GetFragmentationThreshold	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetFragmentationThreshold (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetFrameControl	wifi-mac-header.cc	/^WifiMacHeader::GetFrameControl (void) const$/;"	f	class:ns3::WifiMacHeader
GetFrameErrorRate	wifi-remote-station-manager.cc	/^WifiRemoteStationInfo::GetFrameErrorRate () const$/;"	f	class:ns3::WifiRemoteStationInfo
GetFrequency	yans-wifi-phy.cc	/^YansWifiPhy::GetFrequency (void) const$/;"	f	class:ns3::YansWifiPhy
GetGreenfield	ht-capabilities.cc	/^HtCapabilities::GetGreenfield (void) const$/;"	f	class:ns3::HtCapabilities
GetGreenfield	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetGreenfield (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetGreenfield	yans-wifi-phy.cc	/^YansWifiPhy::GetGreenfield (void) const$/;"	f	class:ns3::YansWifiPhy
GetGreenfieldSupported	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetGreenfieldSupported (Mac48Address address) const$/;"	f	class:ns3::WifiRemoteStationManager
GetGroupId	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::GetGroupId (uint32_t index)$/;"	f	class:ns3::MinstrelHtWifiManager
GetGuardInterval	yans-wifi-phy.cc	/^YansWifiPhy::GetGuardInterval (void) const$/;"	f	class:ns3::YansWifiPhy
GetHtCapabilities	mgt-headers.cc	/^MgtAssocRequestHeader::GetHtCapabilities (void) const$/;"	f	class:ns3::MgtAssocRequestHeader
GetHtCapabilities	mgt-headers.cc	/^MgtAssocResponseHeader::GetHtCapabilities (void) const$/;"	f	class:ns3::MgtAssocResponseHeader
GetHtCapabilities	mgt-headers.cc	/^MgtProbeRequestHeader::GetHtCapabilities (void) const$/;"	f	class:ns3::MgtProbeRequestHeader
GetHtCapabilities	mgt-headers.cc	/^MgtProbeResponseHeader::GetHtCapabilities (void) const$/;"	f	class:ns3::MgtProbeResponseHeader
GetHtCapabilities	regular-wifi-mac.cc	/^RegularWifiMac::GetHtCapabilities (void) const$/;"	f	class:ns3::RegularWifiMac
GetHtCapabilitiesInfo	ht-capabilities.cc	/^HtCapabilities::GetHtCapabilitiesInfo (void) const$/;"	f	class:ns3::HtCapabilities
GetHtDeviceMcsList	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::GetHtDeviceMcsList (void) const$/;"	f	class:ns3::MinstrelHtWifiManager
GetHtGroupId	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::GetHtGroupId (uint8_t txstreams, uint8_t sgi, uint32_t chWidth)$/;"	f	class:ns3::MinstrelHtWifiManager
GetHtMcs0	wifi-phy.cc	/^WifiPhy::GetHtMcs0 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs1	wifi-phy.cc	/^WifiPhy::GetHtMcs1 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs10	wifi-phy.cc	/^WifiPhy::GetHtMcs10 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs11	wifi-phy.cc	/^WifiPhy::GetHtMcs11 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs12	wifi-phy.cc	/^WifiPhy::GetHtMcs12 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs13	wifi-phy.cc	/^WifiPhy::GetHtMcs13 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs14	wifi-phy.cc	/^WifiPhy::GetHtMcs14 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs15	wifi-phy.cc	/^WifiPhy::GetHtMcs15 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs16	wifi-phy.cc	/^WifiPhy::GetHtMcs16 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs17	wifi-phy.cc	/^WifiPhy::GetHtMcs17 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs18	wifi-phy.cc	/^WifiPhy::GetHtMcs18 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs19	wifi-phy.cc	/^WifiPhy::GetHtMcs19 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs2	wifi-phy.cc	/^WifiPhy::GetHtMcs2 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs20	wifi-phy.cc	/^WifiPhy::GetHtMcs20 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs21	wifi-phy.cc	/^WifiPhy::GetHtMcs21 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs22	wifi-phy.cc	/^WifiPhy::GetHtMcs22 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs23	wifi-phy.cc	/^WifiPhy::GetHtMcs23 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs24	wifi-phy.cc	/^WifiPhy::GetHtMcs24 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs25	wifi-phy.cc	/^WifiPhy::GetHtMcs25 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs26	wifi-phy.cc	/^WifiPhy::GetHtMcs26 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs27	wifi-phy.cc	/^WifiPhy::GetHtMcs27 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs28	wifi-phy.cc	/^WifiPhy::GetHtMcs28 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs29	wifi-phy.cc	/^WifiPhy::GetHtMcs29 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs3	wifi-phy.cc	/^WifiPhy::GetHtMcs3 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs30	wifi-phy.cc	/^WifiPhy::GetHtMcs30 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs31	wifi-phy.cc	/^WifiPhy::GetHtMcs31 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs4	wifi-phy.cc	/^WifiPhy::GetHtMcs4 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs5	wifi-phy.cc	/^WifiPhy::GetHtMcs5 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs6	wifi-phy.cc	/^WifiPhy::GetHtMcs6 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs7	wifi-phy.cc	/^WifiPhy::GetHtMcs7 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs8	wifi-phy.cc	/^WifiPhy::GetHtMcs8 ()$/;"	f	class:ns3::WifiPhy
GetHtMcs9	wifi-phy.cc	/^WifiPhy::GetHtMcs9 ()$/;"	f	class:ns3::WifiPhy
GetHtOperations	ap-wifi-mac.cc	/^ApWifiMac::GetHtOperations (void) const$/;"	f	class:ns3::ApWifiMac
GetHtOperations	mgt-headers.cc	/^MgtAssocResponseHeader::GetHtOperations (void) const$/;"	f	class:ns3::MgtAssocResponseHeader
GetHtOperations	mgt-headers.cc	/^MgtProbeResponseHeader::GetHtOperations (void) const$/;"	f	class:ns3::MgtProbeResponseHeader
GetHtPlcpHeaderMode	wifi-phy.cc	/^WifiPhy::GetHtPlcpHeaderMode (WifiMode payloadMode)$/;"	f	class:ns3::WifiPhy
GetHtProtection	ht-operations.cc	/^HtOperations::GetHtProtection (void) const$/;"	f	class:ns3::HtOperations
GetHtSupported	regular-wifi-mac.cc	/^RegularWifiMac::GetHtSupported () const$/;"	f	class:ns3::RegularWifiMac
GetHtSupported	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetHtSupported (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetIdleCurrent	wifi-tx-current-model.cc	/^LinearWifiTxCurrentModel::GetIdleCurrent (void) const$/;"	f	class:ns3::LinearWifiTxCurrentModel
GetIdleCurrentA	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::GetIdleCurrentA (void) const$/;"	f	class:ns3::WifiRadioEnergyModel
GetIfIndex	wifi-net-device.cc	/^WifiNetDevice::GetIfIndex (void) const$/;"	f	class:ns3::WifiNetDevice
GetIndex	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::GetIndex (uint32_t groupId, uint32_t rateId)$/;"	f	class:ns3::MinstrelHtWifiManager
GetInfo	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetInfo (Mac48Address address)$/;"	f	class:ns3::WifiRemoteStationManager
GetInformationFieldSize	erp-information.cc	/^ErpInformation::GetInformationFieldSize () const$/;"	f	class:ns3::ErpInformation
GetInformationFieldSize	ht-capabilities.cc	/^HtCapabilities::GetInformationFieldSize () const$/;"	f	class:ns3::HtCapabilities
GetInformationFieldSize	ht-operations.cc	/^HtOperations::GetInformationFieldSize () const$/;"	f	class:ns3::HtOperations
GetInformationFieldSize	ssid.cc	/^Ssid::GetInformationFieldSize () const$/;"	f	class:ns3::Ssid
GetInformationFieldSize	supported-rates.cc	/^ExtendedSupportedRatesIE::GetInformationFieldSize () const$/;"	f	class:ns3::ExtendedSupportedRatesIE
GetInformationFieldSize	supported-rates.cc	/^SupportedRates::GetInformationFieldSize () const$/;"	f	class:ns3::SupportedRates
GetInformationFieldSize	vht-capabilities.cc	/^VhtCapabilities::GetInformationFieldSize () const$/;"	f	class:ns3::VhtCapabilities
GetInformationSubset1	ht-operations.cc	/^HtOperations::GetInformationSubset1 (void) const$/;"	f	class:ns3::HtOperations
GetInformationSubset2	ht-operations.cc	/^HtOperations::GetInformationSubset2 (void) const$/;"	f	class:ns3::HtOperations
GetInformationSubset3	ht-operations.cc	/^HtOperations::GetInformationSubset3 (void) const$/;"	f	class:ns3::HtOperations
GetInstanceTypeId	ampdu-subframe-header.cc	/^AmpduSubframeHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::AmpduSubframeHeader
GetInstanceTypeId	ampdu-tag.cc	/^AmpduTag::GetInstanceTypeId (void) const$/;"	f	class:ns3::AmpduTag
GetInstanceTypeId	amsdu-subframe-header.cc	/^AmsduSubframeHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::AmsduSubframeHeader
GetInstanceTypeId	ctrl-headers.cc	/^CtrlBAckRequestHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::CtrlBAckRequestHeader
GetInstanceTypeId	ctrl-headers.cc	/^CtrlBAckResponseHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
GetInstanceTypeId	mgt-headers.cc	/^MgtAddBaRequestHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
GetInstanceTypeId	mgt-headers.cc	/^MgtAddBaResponseHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::MgtAddBaResponseHeader
GetInstanceTypeId	mgt-headers.cc	/^MgtAssocRequestHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::MgtAssocRequestHeader
GetInstanceTypeId	mgt-headers.cc	/^MgtAssocResponseHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::MgtAssocResponseHeader
GetInstanceTypeId	mgt-headers.cc	/^MgtDelBaHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::MgtDelBaHeader
GetInstanceTypeId	mgt-headers.cc	/^MgtProbeRequestHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::MgtProbeRequestHeader
GetInstanceTypeId	mgt-headers.cc	/^MgtProbeResponseHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::MgtProbeResponseHeader
GetInstanceTypeId	mgt-headers.cc	/^WifiActionHeader::GetInstanceTypeId () const$/;"	f	class:ns3::WifiActionHeader
GetInstanceTypeId	qos-tag.cc	/^QosTag::GetInstanceTypeId (void) const$/;"	f	class:ns3::QosTag
GetInstanceTypeId	snr-tag.cc	/^SnrTag::GetInstanceTypeId (void) const$/;"	f	class:ns3::SnrTag
GetInstanceTypeId	wifi-information-element-vector.cc	/^WifiInformationElementVector::GetInstanceTypeId () const$/;"	f	class:ns3::WifiInformationElementVector
GetInstanceTypeId	wifi-mac-header.cc	/^WifiMacHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::WifiMacHeader
GetInstanceTypeId	wifi-mac-trailer.cc	/^WifiMacTrailer::GetInstanceTypeId (void) const$/;"	f	class:ns3::WifiMacTrailer
GetInstanceTypeId	wifi-remote-station-manager.cc	/^HighLatencyCtsToSelfTxVectorTag::GetInstanceTypeId (void) const$/;"	f	class:ns3::HighLatencyCtsToSelfTxVectorTag
GetInstanceTypeId	wifi-remote-station-manager.cc	/^HighLatencyDataTxVectorTag::GetInstanceTypeId (void) const$/;"	f	class:ns3::HighLatencyDataTxVectorTag
GetInstanceTypeId	wifi-remote-station-manager.cc	/^HighLatencyRtsTxVectorTag::GetInstanceTypeId (void) const$/;"	f	class:ns3::HighLatencyRtsTxVectorTag
GetLSigProtectionSupport	ht-capabilities.cc	/^HtCapabilities::GetLSigProtectionSupport (void) const$/;"	f	class:ns3::HtCapabilities
GetLSigTxopProtectionFullSupport	ht-operations.cc	/^HtOperations::GetLSigTxopProtectionFullSupport (void) const$/;"	f	class:ns3::HtOperations
GetLastRxStartTime	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::GetLastRxStartTime (void) const$/;"	f	class:ns3::WifiPhyStateHelper
GetLastRxStartTime	yans-wifi-phy.cc	/^YansWifiPhy::GetLastRxStartTime (void) const$/;"	f	class:ns3::YansWifiPhy
GetLastSequenceControl	mac-rx-middle.cc	/^  uint16_t GetLastSequenceControl (void)$/;"	f	class:ns3::OriginatorRxStatus
GetLdpc	ht-capabilities.cc	/^HtCapabilities::GetLdpc (void) const$/;"	f	class:ns3::HtCapabilities
GetLdpc	yans-wifi-phy.cc	/^YansWifiPhy::GetLdpc (void) const$/;"	f	class:ns3::YansWifiPhy
GetLength	ampdu-subframe-header.cc	/^AmpduSubframeHeader::GetLength (void) const$/;"	f	class:ns3::AmpduSubframeHeader
GetLength	amsdu-subframe-header.cc	/^AmsduSubframeHeader::GetLength (void) const$/;"	f	class:ns3::AmsduSubframeHeader
GetListenInterval	mgt-headers.cc	/^MgtAssocRequestHeader::GetListenInterval (void) const$/;"	f	class:ns3::MgtAssocRequestHeader
GetLongRetryCount	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetLongRetryCount (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetLowestIndex	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::GetLowestIndex (MinstrelHtWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelHtWifiManager
GetLowestIndex	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::GetLowestIndex (MinstrelHtWifiRemoteStation *station, uint32_t groupId)$/;"	f	class:ns3::MinstrelHtWifiManager
GetMac	wifi-net-device.cc	/^WifiNetDevice::GetMac (void) const$/;"	f	class:ns3::WifiNetDevice
GetMac	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetMac (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetMaxAmpduLength	ht-capabilities.cc	/^HtCapabilities::GetMaxAmpduLength (void) const$/;"	f	class:ns3::HtCapabilities
GetMaxAmpduLengthExponent	vht-capabilities.cc	/^VhtCapabilities::GetMaxAmpduLengthExponent () const$/;"	f	class:ns3::VhtCapabilities
GetMaxAmpduSize	mpdu-standard-aggregator.cc	/^MpduStandardAggregator::GetMaxAmpduSize (void) const$/;"	f	class:ns3::MpduStandardAggregator
GetMaxAmsduLength	ht-capabilities.cc	/^HtCapabilities::GetMaxAmsduLength (void) const$/;"	f	class:ns3::HtCapabilities
GetMaxAmsduSize	msdu-standard-aggregator.cc	/^MsduStandardAggregator::GetMaxAmsduSize (void) const$/;"	f	class:ns3::MsduStandardAggregator
GetMaxCw	dca-txop.cc	/^DcaTxop::GetMaxCw (void) const$/;"	f	class:ns3::DcaTxop
GetMaxCw	edca-txop-n.cc	/^EdcaTxopN::GetMaxCw (void) const$/;"	f	class:ns3::EdcaTxopN
GetMaxDelay	wifi-mac-queue.cc	/^WifiMacQueue::GetMaxDelay (void) const$/;"	f	class:ns3::WifiMacQueue
GetMaxMpduLength	vht-capabilities.cc	/^VhtCapabilities::GetMaxMpduLength () const$/;"	f	class:ns3::VhtCapabilities
GetMaxPropagationDelay	wifi-mac.cc	/^WifiMac::GetMaxPropagationDelay (void) const$/;"	f	class:ns3::WifiMac
GetMaxRate	rraa-wifi-manager.cc	/^RraaWifiManager::GetMaxRate (RraaWifiRemoteStation *station)$/;"	f	class:ns3::RraaWifiManager
GetMaxSize	wifi-mac-queue.cc	/^WifiMacQueue::GetMaxSize (void) const$/;"	f	class:ns3::WifiMacQueue
GetMaxSlrc	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetMaxSlrc (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetMaxSsrc	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetMaxSsrc (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetMcs	yans-wifi-phy.cc	/^YansWifiPhy::GetMcs (uint8_t mcs) const$/;"	f	class:ns3::YansWifiPhy
GetMcsSupported	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetMcsSupported (const WifiRemoteStation *station, uint32_t i) const$/;"	f	class:ns3::WifiRemoteStationManager
GetMcsValue	wifi-mode.cc	/^WifiMode::GetMcsValue (void) const$/;"	f	class:ns3::WifiMode
GetMembershipSelectorModes	yans-wifi-phy.cc	/^YansWifiPhy::GetMembershipSelectorModes (uint32_t selector)$/;"	f	class:ns3::YansWifiPhy
GetMinCw	dca-txop.cc	/^DcaTxop::GetMinCw (void) const$/;"	f	class:ns3::DcaTxop
GetMinCw	edca-txop-n.cc	/^EdcaTxopN::GetMinCw (void) const$/;"	f	class:ns3::EdcaTxopN
GetMinRate	rraa-wifi-manager.cc	/^RraaWifiManager::GetMinRate (RraaWifiRemoteStation *station)$/;"	f	class:ns3::RraaWifiManager
GetMobility	yans-wifi-phy.cc	/^YansWifiPhy::GetMobility (void)$/;"	f	class:ns3::YansWifiPhy
GetMode	wifi-tx-vector.cc	/^WifiTxVector::GetMode (void) const$/;"	f	class:ns3::WifiTxVector
GetMode	yans-wifi-phy.cc	/^YansWifiPhy::GetMode (uint32_t mode) const$/;"	f	class:ns3::YansWifiPhy
GetModulationClass	wifi-mode.cc	/^WifiMode::GetModulationClass () const$/;"	f	class:ns3::WifiMode
GetMpduAggregator	edca-txop-n.cc	/^  virtual Ptr<MpduAggregator> GetMpduAggregator (void) const$/;"	f	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener
GetMpduAggregator	edca-txop-n.cc	/^EdcaTxopN::GetMpduAggregator (void) const$/;"	f	class:ns3::EdcaTxopN
GetMpduAggregator	mac-low.cc	/^MacLowAggregationCapableTransmissionListener::GetMpduAggregator (void) const$/;"	f	class:ns3::MacLowAggregationCapableTransmissionListener
GetMpduTxTime	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::GetMpduTxTime (uint32_t groupId, WifiMode mode) const$/;"	f	class:ns3::MinstrelHtWifiManager
GetMsduAggregator	edca-txop-n.cc	/^  virtual Ptr<MsduAggregator> GetMsduAggregator (void) const$/;"	f	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener
GetMsduAggregator	edca-txop-n.cc	/^EdcaTxopN::GetMsduAggregator (void) const$/;"	f	class:ns3::EdcaTxopN
GetMsduAggregator	mac-low.cc	/^MacLowAggregationCapableTransmissionListener::GetMsduAggregator (void) const$/;"	f	class:ns3::MacLowAggregationCapableTransmissionListener
GetMsduLifetime	wifi-mac.cc	/^WifiMac::GetMsduLifetime (void) const$/;"	f	class:ns3::WifiMac
GetMtu	wifi-net-device.cc	/^WifiNetDevice::GetMtu (void) const$/;"	f	class:ns3::WifiNetDevice
GetMulticast	wifi-net-device.cc	/^Address WifiNetDevice::GetMulticast (Ipv6Address addr) const$/;"	f	class:ns3::WifiNetDevice
GetMulticast	wifi-net-device.cc	/^WifiNetDevice::GetMulticast (Ipv4Address multicastGroup) const$/;"	f	class:ns3::WifiNetDevice
GetNBasicMcs	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNBasicMcs (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNBasicModes	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNBasicModes (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNBssMembershipSelectors	yans-wifi-phy.cc	/^YansWifiPhy::GetNBssMembershipSelectors (void) const$/;"	f	class:ns3::YansWifiPhy
GetNBufferedPackets	block-ack-manager.cc	/^BlockAckManager::GetNBufferedPackets (Mac48Address recipient, uint8_t tid) const$/;"	f	class:ns3::BlockAckManager
GetNDevices	yans-wifi-channel.cc	/^YansWifiChannel::GetNDevices (void) const$/;"	f	class:ns3::YansWifiChannel
GetNFragments	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNFragments (const WifiMacHeader *header, Ptr<const Packet> packet)$/;"	f	class:ns3::WifiRemoteStationManager
GetNMcs	yans-wifi-phy.cc	/^YansWifiPhy::GetNMcs (void) const$/;"	f	class:ns3::YansWifiPhy
GetNMcsSupported	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNMcsSupported (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNModes	yans-wifi-phy.cc	/^YansWifiPhy::GetNModes (void) const$/;"	f	class:ns3::YansWifiPhy
GetNNonErpBasicModes	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNNonErpBasicModes (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNNonErpSupported	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNNonErpSupported (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNOutstandingPackets	edca-txop-n.cc	/^  virtual uint32_t GetNOutstandingPackets (Mac48Address address, uint8_t tid)$/;"	f	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener
GetNOutstandingPackets	mac-low.cc	/^MacLowAggregationCapableTransmissionListener::GetNOutstandingPackets (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::MacLowAggregationCapableTransmissionListener
GetNOutstandingPacketsInBa	edca-txop-n.cc	/^EdcaTxopN::GetNOutstandingPacketsInBa (Mac48Address address, uint8_t tid)$/;"	f	class:ns3::EdcaTxopN
GetNPacketsByTidAndAddress	wifi-mac-queue.cc	/^WifiMacQueue::GetNPacketsByTidAndAddress (uint8_t tid, WifiMacHeader::AddressType type,$/;"	f	class:ns3::WifiMacQueue
GetNRates	supported-rates.cc	/^SupportedRates::GetNRates (void) const$/;"	f	class:ns3::SupportedRates
GetNRetryNeededPackets	block-ack-manager.cc	/^BlockAckManager::GetNRetryNeededPackets (Mac48Address recipient, uint8_t tid) const$/;"	f	class:ns3::BlockAckManager
GetNRetryNeededPackets	edca-txop-n.cc	/^  virtual uint32_t GetNRetryNeededPackets (Mac48Address recipient, uint8_t tid) const$/;"	f	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener
GetNRetryNeededPackets	edca-txop-n.cc	/^EdcaTxopN::GetNRetryNeededPackets (Mac48Address recipient, uint8_t tid) const$/;"	f	class:ns3::EdcaTxopN
GetNRetryNeededPackets	mac-low.cc	/^MacLowAggregationCapableTransmissionListener::GetNRetryNeededPackets (Mac48Address recipient, uint8_t tid) const$/;"	f	class:ns3::MacLowAggregationCapableTransmissionListener
GetNSupported	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNSupported (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNTxPower	yans-wifi-phy.cc	/^YansWifiPhy::GetNTxPower (void) const$/;"	f	class:ns3::YansWifiPhy
GetNess	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNess (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNess	wifi-tx-vector.cc	/^WifiTxVector::GetNess (void) const$/;"	f	class:ns3::WifiTxVector
GetNext	random-stream.cc	/^RealRandomStream::GetNext (uint32_t min, uint32_t max)$/;"	f	class:ns3::RealRandomStream
GetNext	random-stream.cc	/^TestRandomStream::GetNext (uint32_t min, uint32_t max)$/;"	f	class:ns3::TestRandomStream
GetNextFragmentSize	dca-txop.cc	/^DcaTxop::GetNextFragmentSize (void)$/;"	f	class:ns3::DcaTxop
GetNextFragmentSize	edca-txop-n.cc	/^EdcaTxopN::GetNextFragmentSize (void)$/;"	f	class:ns3::EdcaTxopN
GetNextPacket	block-ack-manager.cc	/^BlockAckManager::GetNextPacket (WifiMacHeader &hdr)$/;"	f	class:ns3::BlockAckManager
GetNextPacketSize	block-ack-manager.cc	/^BlockAckManager::GetNextPacketSize (void) const$/;"	f	class:ns3::BlockAckManager
GetNextPacketSize	mac-low.cc	/^MacLowTransmissionParameters::GetNextPacketSize (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
GetNextSample	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::GetNextSample (MinstrelHtWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelHtWifiManager
GetNextSample	minstrel-wifi-manager.cc	/^MinstrelWifiManager::GetNextSample (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
GetNextSeqNumberByTidAndAddress	mac-tx-middle.cc	/^MacTxMiddle::GetNextSeqNumberByTidAndAddress (uint8_t tid, Mac48Address addr) const$/;"	f	class:ns3::MacTxMiddle
GetNextSequenceNumberfor	edca-txop-n.cc	/^  virtual uint16_t GetNextSequenceNumberfor (WifiMacHeader *hdr)$/;"	f	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener
GetNextSequenceNumberfor	edca-txop-n.cc	/^uint16_t EdcaTxopN::GetNextSequenceNumberfor (WifiMacHeader *hdr)$/;"	f	class:ns3::EdcaTxopN
GetNextSequenceNumberfor	mac-low.cc	/^MacLowAggregationCapableTransmissionListener::GetNextSequenceNumberfor (WifiMacHeader *hdr)$/;"	f	class:ns3::MacLowAggregationCapableTransmissionListener
GetNextSequenceNumberfor	mac-tx-middle.cc	/^MacTxMiddle::GetNextSequenceNumberfor (const WifiMacHeader *hdr)$/;"	f	class:ns3::MacTxMiddle
GetNoOfMpdus	ampdu-tag.cc	/^AmpduTag::GetNoOfMpdus () const$/;"	f	class:ns3::AmpduTag
GetNode	wifi-net-device.cc	/^WifiNetDevice::GetNode (void) const$/;"	f	class:ns3::WifiNetDevice
GetNoiseFigure	interference-helper.cc	/^InterferenceHelper::GetNoiseFigure (void) const$/;"	f	class:ns3::InterferenceHelper
GetNonErpBasicMode	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNonErpBasicMode (uint32_t i) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNonErpPresent	erp-information.cc	/^ErpInformation::GetNonErpPresent (void) const$/;"	f	class:ns3::ErpInformation
GetNonErpSupported	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNonErpSupported (const WifiRemoteStation *station, uint32_t i) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNonGfHtStasPresent	ht-operations.cc	/^HtOperations::GetNonGfHtStasPresent (void) const$/;"	f	class:ns3::HtOperations
GetNonHtReferenceRate	wifi-mode.cc	/^WifiMode::GetNonHtReferenceRate (void) const$/;"	f	class:ns3::WifiMode
GetNonUnicastMode	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNonUnicastMode (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNss	wifi-tx-vector.cc	/^WifiTxVector::GetNss (void) const$/;"	f	class:ns3::WifiTxVector
GetNumberOfReceiveAntennas	yans-wifi-phy.cc	/^YansWifiPhy::GetNumberOfReceiveAntennas (void) const$/;"	f	class:ns3::YansWifiPhy
GetNumberOfSupportedRxAntennas	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNumberOfSupportedRxAntennas (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNumberOfTransmitAntennas	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNumberOfTransmitAntennas (void)$/;"	f	class:ns3::WifiRemoteStationManager
GetNumberOfTransmitAntennas	yans-wifi-phy.cc	/^YansWifiPhy::GetNumberOfTransmitAntennas (void) const$/;"	f	class:ns3::YansWifiPhy
GetObssNonHtStasPresent	ht-operations.cc	/^HtOperations::GetObssNonHtStasPresent (void) const$/;"	f	class:ns3::HtOperations
GetOfdmRate12Mbps	wifi-phy.cc	/^WifiPhy::GetOfdmRate12Mbps ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate12MbpsBW10MHz	wifi-phy.cc	/^WifiPhy::GetOfdmRate12MbpsBW10MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate12MbpsBW5MHz	wifi-phy.cc	/^WifiPhy::GetOfdmRate12MbpsBW5MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate13_5MbpsBW5MHz	wifi-phy.cc	/^WifiPhy::GetOfdmRate13_5MbpsBW5MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate18Mbps	wifi-phy.cc	/^WifiPhy::GetOfdmRate18Mbps ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate18MbpsBW10MHz	wifi-phy.cc	/^WifiPhy::GetOfdmRate18MbpsBW10MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate1_5MbpsBW5MHz	wifi-phy.cc	/^WifiPhy::GetOfdmRate1_5MbpsBW5MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate24Mbps	wifi-phy.cc	/^WifiPhy::GetOfdmRate24Mbps ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate24MbpsBW10MHz	wifi-phy.cc	/^WifiPhy::GetOfdmRate24MbpsBW10MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate27MbpsBW10MHz	wifi-phy.cc	/^WifiPhy::GetOfdmRate27MbpsBW10MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate2_25MbpsBW5MHz	wifi-phy.cc	/^WifiPhy::GetOfdmRate2_25MbpsBW5MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate36Mbps	wifi-phy.cc	/^WifiPhy::GetOfdmRate36Mbps ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate3MbpsBW10MHz	wifi-phy.cc	/^WifiPhy::GetOfdmRate3MbpsBW10MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate3MbpsBW5MHz	wifi-phy.cc	/^WifiPhy::GetOfdmRate3MbpsBW5MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate48Mbps	wifi-phy.cc	/^WifiPhy::GetOfdmRate48Mbps ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate4_5MbpsBW10MHz	wifi-phy.cc	/^WifiPhy::GetOfdmRate4_5MbpsBW10MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate4_5MbpsBW5MHz	wifi-phy.cc	/^WifiPhy::GetOfdmRate4_5MbpsBW5MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate54Mbps	wifi-phy.cc	/^WifiPhy::GetOfdmRate54Mbps ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate6Mbps	wifi-phy.cc	/^WifiPhy::GetOfdmRate6Mbps ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate6MbpsBW10MHz	wifi-phy.cc	/^WifiPhy::GetOfdmRate6MbpsBW10MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate6MbpsBW5MHz	wifi-phy.cc	/^WifiPhy::GetOfdmRate6MbpsBW5MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate9Mbps	wifi-phy.cc	/^WifiPhy::GetOfdmRate9Mbps ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate9MbpsBW10MHz	wifi-phy.cc	/^WifiPhy::GetOfdmRate9MbpsBW10MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate9MbpsBW5MHz	wifi-phy.cc	/^WifiPhy::GetOfdmRate9MbpsBW5MHz ()$/;"	f	class:ns3::WifiPhy
GetParameterSet	mgt-headers.cc	/^MgtAddBaRequestHeader::GetParameterSet (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
GetParameterSet	mgt-headers.cc	/^MgtAddBaResponseHeader::GetParameterSet (void) const$/;"	f	class:ns3::MgtAddBaResponseHeader
GetParameterSet	mgt-headers.cc	/^MgtDelBaHeader::GetParameterSet (void) const$/;"	f	class:ns3::MgtDelBaHeader
GetPayloadDuration	wifi-phy.cc	/^WifiPhy::GetPayloadDuration (uint32_t size, WifiTxVector txVector, WifiPreamble preamble, double frequency)$/;"	f	class:ns3::WifiPhy
GetPayloadDuration	wifi-phy.cc	/^WifiPhy::GetPayloadDuration (uint32_t size, WifiTxVector txVector, WifiPreamble preamble, double frequency, enum mpduType mpdutype, uint8_t incFlag)$/;"	f	class:ns3::WifiPhy
GetPayloadMode	interference-helper.cc	/^InterferenceHelper::Event::GetPayloadMode (void) const$/;"	f	class:ns3::InterferenceHelper::Event
GetPcoActive	ht-operations.cc	/^HtOperations::GetPcoActive (void) const$/;"	f	class:ns3::HtOperations
GetPeer	block-ack-agreement.cc	/^BlockAckAgreement::GetPeer (void) const$/;"	f	class:ns3::BlockAckAgreement
GetPhase	ht-operations.cc	/^HtOperations::GetPhase (void) const$/;"	f	class:ns3::HtOperations
GetPhy	mac-low.cc	/^MacLow::GetPhy (void) const$/;"	f	class:ns3::MacLow
GetPhy	wifi-net-device.cc	/^WifiNetDevice::GetPhy (void) const$/;"	f	class:ns3::WifiNetDevice
GetPhy	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetPhy (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetPhyListener	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::GetPhyListener (void)$/;"	f	class:ns3::WifiRadioEnergyModel
GetPhyRate	wifi-mode.cc	/^WifiMode::GetPhyRate (WifiTxVector txVector) const$/;"	f	class:ns3::WifiMode
GetPhyRate	wifi-mode.cc	/^WifiMode::GetPhyRate (uint32_t channelWidth, bool isShortGuardInterval, uint8_t nss) const$/;"	f	class:ns3::WifiMode
GetPifs	mac-low.cc	/^MacLow::GetPifs (void) const$/;"	f	class:ns3::MacLow
GetPifs	regular-wifi-mac.cc	/^RegularWifiMac::GetPifs (void) const$/;"	f	class:ns3::RegularWifiMac
GetPlcpHeaderDuration	wifi-phy.cc	/^WifiPhy::GetPlcpHeaderDuration (WifiTxVector txVector, WifiPreamble preamble)$/;"	f	class:ns3::WifiPhy
GetPlcpHeaderMode	wifi-phy.cc	/^WifiPhy::GetPlcpHeaderMode (WifiMode payloadMode, WifiPreamble preamble, WifiTxVector txVector)$/;"	f	class:ns3::WifiPhy
GetPlcpHtSigHeaderDuration	wifi-phy.cc	/^WifiPhy::GetPlcpHtSigHeaderDuration (WifiPreamble preamble)$/;"	f	class:ns3::WifiPhy
GetPlcpHtTrainingSymbolDuration	wifi-phy.cc	/^WifiPhy::GetPlcpHtTrainingSymbolDuration (WifiPreamble preamble, WifiTxVector txVector)$/;"	f	class:ns3::WifiPhy
GetPlcpPreambleDuration	wifi-phy.cc	/^WifiPhy::GetPlcpPreambleDuration (WifiTxVector txVector, WifiPreamble preamble)$/;"	f	class:ns3::WifiPhy
GetPlcpVhtSigA1Duration	wifi-phy.cc	/^WifiPhy::GetPlcpVhtSigA1Duration (WifiPreamble preamble)$/;"	f	class:ns3::WifiPhy
GetPlcpVhtSigA2Duration	wifi-phy.cc	/^WifiPhy::GetPlcpVhtSigA2Duration (WifiPreamble preamble)$/;"	f	class:ns3::WifiPhy
GetPlcpVhtSigBDuration	wifi-phy.cc	/^WifiPhy::GetPlcpVhtSigBDuration (WifiPreamble preamble)$/;"	f	class:ns3::WifiPhy
GetPosition	interference-helper.cc	/^InterferenceHelper::GetPosition (Time moment)$/;"	f	class:ns3::InterferenceHelper
GetPowerDbm	yans-wifi-phy.cc	/^YansWifiPhy::GetPowerDbm (uint8_t power) const$/;"	f	class:ns3::YansWifiPhy
GetPreambleType	interference-helper.cc	/^InterferenceHelper::Event::GetPreambleType (void) const$/;"	f	class:ns3::InterferenceHelper::Event
GetPrimaryChannel	ht-operations.cc	/^HtOperations::GetPrimaryChannel (void) const$/;"	f	class:ns3::HtOperations
GetProtectionMode	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetProtectionMode (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetQamBer	yans-error-rate-model.cc	/^YansErrorRateModel::GetQamBer (double snr, unsigned int m, uint32_t signalSpread, uint32_t phyRate) const$/;"	f	class:ns3::YansErrorRateModel
GetQosAckPolicy	wifi-mac-header.cc	/^WifiMacHeader::GetQosAckPolicy (void) const$/;"	f	class:ns3::WifiMacHeader
GetQosControl	wifi-mac-header.cc	/^WifiMacHeader::GetQosControl (void) const$/;"	f	class:ns3::WifiMacHeader
GetQosSupported	regular-wifi-mac.cc	/^RegularWifiMac::GetQosSupported () const$/;"	f	class:ns3::RegularWifiMac
GetQosTid	wifi-mac-header.cc	/^WifiMacHeader::GetQosTid (void) const$/;"	f	class:ns3::WifiMacHeader
GetQosTxopLimit	wifi-mac-header.cc	/^WifiMacHeader::GetQosTxopLimit (void) const$/;"	f	class:ns3::WifiMacHeader
GetQpskBer	nist-error-rate-model.cc	/^NistErrorRateModel::GetQpskBer (double snr) const$/;"	f	class:ns3::NistErrorRateModel
GetQueue	dca-txop.cc	/^DcaTxop::GetQueue () const$/;"	f	class:ns3::DcaTxop
GetQueue	edca-txop-n.cc	/^  virtual Ptr<WifiMacQueue> GetQueue (void)$/;"	f	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener
GetQueue	edca-txop-n.cc	/^  virtual Ptr<WifiMacQueue> GetQueue (void)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
GetRate	supported-rates.cc	/^SupportedRates::GetRate (uint8_t i) const$/;"	f	class:ns3::SupportedRates
GetRateId	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::GetRateId (uint32_t index)$/;"	f	class:ns3::MinstrelHtWifiManager
GetRawDuration	wifi-mac-header.cc	/^WifiMacHeader::GetRawDuration (void) const$/;"	f	class:ns3::WifiMacHeader
GetRemoteStationManager	wifi-net-device.cc	/^WifiNetDevice::GetRemoteStationManager (void) const$/;"	f	class:ns3::WifiNetDevice
GetRetries	wifi-tx-vector.cc	/^WifiTxVector::GetRetries (void) const$/;"	f	class:ns3::WifiTxVector
GetRifs	mac-low.cc	/^MacLow::GetRifs (void) const$/;"	f	class:ns3::MacLow
GetRifs	regular-wifi-mac.cc	/^RegularWifiMac::GetRifs (void) const$/;"	f	class:ns3::RegularWifiMac
GetRifsMode	ht-operations.cc	/^HtOperations::GetRifsMode (void) const$/;"	f	class:ns3::HtOperations
GetRtsCtsThreshold	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetRtsCtsThreshold (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetRtsSize	mac-low.cc	/^MacLow::GetRtsSize (void) const$/;"	f	class:ns3::MacLow
GetRtsTxVector	mac-low.cc	/^MacLow::GetRtsTxVector (Ptr<const Packet> packet, const WifiMacHeader *hdr) const$/;"	f	class:ns3::MacLow
GetRtsTxVector	minstrel-wifi-manager.cc	/^MinstrelWifiManager::GetRtsTxVector (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
GetRtsTxVector	wifi-remote-station-manager.cc	/^HighLatencyRtsTxVectorTag::GetRtsTxVector (void) const$/;"	f	class:ns3::HighLatencyRtsTxVectorTag
GetRtsTxVector	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetRtsTxVector (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
GetRxCurrentA	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::GetRxCurrentA (void) const$/;"	f	class:ns3::WifiRadioEnergyModel
GetRxGain	yans-wifi-phy.cc	/^YansWifiPhy::GetRxGain (void) const$/;"	f	class:ns3::YansWifiPhy
GetRxHighestSupportedAntennas	ht-capabilities.cc	/^HtCapabilities::GetRxHighestSupportedAntennas (void) const$/;"	f	class:ns3::HtCapabilities
GetRxHighestSupportedDataRate	ht-capabilities.cc	/^HtCapabilities::GetRxHighestSupportedDataRate (void) const$/;"	f	class:ns3::HtCapabilities
GetRxHighestSupportedDataRate	ht-operations.cc	/^HtOperations::GetRxHighestSupportedDataRate (void) const$/;"	f	class:ns3::HtOperations
GetRxHighestSupportedLgiDataRate	vht-capabilities.cc	/^VhtCapabilities::GetRxHighestSupportedLgiDataRate () const$/;"	f	class:ns3::VhtCapabilities
GetRxLdpc	vht-capabilities.cc	/^VhtCapabilities::GetRxLdpc () const$/;"	f	class:ns3::VhtCapabilities
GetRxMcsBitmask	ht-capabilities.cc	/^HtCapabilities::GetRxMcsBitmask ()$/;"	f	class:ns3::HtCapabilities
GetRxMcsMap	vht-capabilities.cc	/^VhtCapabilities::GetRxMcsMap () const$/;"	f	class:ns3::VhtCapabilities
GetRxNoiseFigure	yans-wifi-phy.cc	/^YansWifiPhy::GetRxNoiseFigure (void) const$/;"	f	class:ns3::YansWifiPhy
GetRxPowerW	interference-helper.cc	/^InterferenceHelper::Event::GetRxPowerW (void) const$/;"	f	class:ns3::InterferenceHelper::Event
GetRxStbc	vht-capabilities.cc	/^VhtCapabilities::GetRxStbc () const$/;"	f	class:ns3::VhtCapabilities
GetSecondaryChannelOffset	ht-operations.cc	/^HtOperations::GetSecondaryChannelOffset (void) const$/;"	f	class:ns3::HtOperations
GetSeqNumOfNextRetryPacket	block-ack-manager.cc	/^BlockAckManager::GetSeqNumOfNextRetryPacket (Mac48Address recipient, uint8_t tid) const$/;"	f	class:ns3::BlockAckManager
GetSequenceControl	wifi-mac-header.cc	/^WifiMacHeader::GetSequenceControl (void) const$/;"	f	class:ns3::WifiMacHeader
GetSequenceNumber	wifi-mac-header.cc	/^WifiMacHeader::GetSequenceNumber (void) const$/;"	f	class:ns3::WifiMacHeader
GetSerializedSize	ampdu-subframe-header.cc	/^AmpduSubframeHeader::GetSerializedSize () const$/;"	f	class:ns3::AmpduSubframeHeader
GetSerializedSize	ampdu-tag.cc	/^AmpduTag::GetSerializedSize (void) const$/;"	f	class:ns3::AmpduTag
GetSerializedSize	amsdu-subframe-header.cc	/^AmsduSubframeHeader::GetSerializedSize () const$/;"	f	class:ns3::AmsduSubframeHeader
GetSerializedSize	capability-information.cc	/^CapabilityInformation::GetSerializedSize (void) const$/;"	f	class:ns3::CapabilityInformation
GetSerializedSize	ctrl-headers.cc	/^CtrlBAckRequestHeader::GetSerializedSize () const$/;"	f	class:ns3::CtrlBAckRequestHeader
GetSerializedSize	ctrl-headers.cc	/^CtrlBAckResponseHeader::GetSerializedSize (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
GetSerializedSize	erp-information.cc	/^ErpInformation::GetSerializedSize () const$/;"	f	class:ns3::ErpInformation
GetSerializedSize	ht-capabilities.cc	/^HtCapabilities::GetSerializedSize () const$/;"	f	class:ns3::HtCapabilities
GetSerializedSize	ht-operations.cc	/^HtOperations::GetSerializedSize () const$/;"	f	class:ns3::HtOperations
GetSerializedSize	mgt-headers.cc	/^MgtAddBaRequestHeader::GetSerializedSize (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
GetSerializedSize	mgt-headers.cc	/^MgtAddBaResponseHeader::GetSerializedSize (void) const$/;"	f	class:ns3::MgtAddBaResponseHeader
GetSerializedSize	mgt-headers.cc	/^MgtAssocRequestHeader::GetSerializedSize (void) const$/;"	f	class:ns3::MgtAssocRequestHeader
GetSerializedSize	mgt-headers.cc	/^MgtAssocResponseHeader::GetSerializedSize (void) const$/;"	f	class:ns3::MgtAssocResponseHeader
GetSerializedSize	mgt-headers.cc	/^MgtDelBaHeader::GetSerializedSize (void) const$/;"	f	class:ns3::MgtDelBaHeader
GetSerializedSize	mgt-headers.cc	/^MgtProbeRequestHeader::GetSerializedSize (void) const$/;"	f	class:ns3::MgtProbeRequestHeader
GetSerializedSize	mgt-headers.cc	/^MgtProbeResponseHeader::GetSerializedSize (void) const$/;"	f	class:ns3::MgtProbeResponseHeader
GetSerializedSize	mgt-headers.cc	/^WifiActionHeader::GetSerializedSize () const$/;"	f	class:ns3::WifiActionHeader
GetSerializedSize	qos-tag.cc	/^QosTag::GetSerializedSize (void) const$/;"	f	class:ns3::QosTag
GetSerializedSize	snr-tag.cc	/^SnrTag::GetSerializedSize (void) const$/;"	f	class:ns3::SnrTag
GetSerializedSize	status-code.cc	/^StatusCode::GetSerializedSize (void) const$/;"	f	class:ns3::StatusCode
GetSerializedSize	supported-rates.cc	/^ExtendedSupportedRatesIE::GetSerializedSize () const$/;"	f	class:ns3::ExtendedSupportedRatesIE
GetSerializedSize	vht-capabilities.cc	/^VhtCapabilities::GetSerializedSize () const$/;"	f	class:ns3::VhtCapabilities
GetSerializedSize	wifi-information-element-vector.cc	/^WifiInformationElementVector::GetSerializedSize () const$/;"	f	class:ns3::WifiInformationElementVector
GetSerializedSize	wifi-information-element.cc	/^WifiInformationElement::GetSerializedSize () const$/;"	f	class:ns3::WifiInformationElement
GetSerializedSize	wifi-mac-header.cc	/^WifiMacHeader::GetSerializedSize (void) const$/;"	f	class:ns3::WifiMacHeader
GetSerializedSize	wifi-mac-trailer.cc	/^WifiMacTrailer::GetSerializedSize (void) const$/;"	f	class:ns3::WifiMacTrailer
GetSerializedSize	wifi-remote-station-manager.cc	/^HighLatencyCtsToSelfTxVectorTag::GetSerializedSize (void) const$/;"	f	class:ns3::HighLatencyCtsToSelfTxVectorTag
GetSerializedSize	wifi-remote-station-manager.cc	/^HighLatencyDataTxVectorTag::GetSerializedSize (void) const$/;"	f	class:ns3::HighLatencyDataTxVectorTag
GetSerializedSize	wifi-remote-station-manager.cc	/^HighLatencyRtsTxVectorTag::GetSerializedSize (void) const$/;"	f	class:ns3::HighLatencyRtsTxVectorTag
GetShortGuardInterval	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetShortGuardInterval (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetShortGuardInterval20	ht-capabilities.cc	/^HtCapabilities::GetShortGuardInterval20 (void) const$/;"	f	class:ns3::HtCapabilities
GetShortGuardInterval40	ht-capabilities.cc	/^HtCapabilities::GetShortGuardInterval40 (void) const$/;"	f	class:ns3::HtCapabilities
GetShortGuardIntervalFor160Mhz	vht-capabilities.cc	/^VhtCapabilities::GetShortGuardIntervalFor160Mhz () const$/;"	f	class:ns3::VhtCapabilities
GetShortGuardIntervalFor80Mhz	vht-capabilities.cc	/^VhtCapabilities::GetShortGuardIntervalFor80Mhz () const$/;"	f	class:ns3::VhtCapabilities
GetShortPlcpPreambleSupported	yans-wifi-phy.cc	/^YansWifiPhy::GetShortPlcpPreambleSupported (void) const$/;"	f	class:ns3::YansWifiPhy
GetShortPreambleEnabled	ap-wifi-mac.cc	/^ApWifiMac::GetShortPreambleEnabled (void) const$/;"	f	class:ns3::ApWifiMac
GetShortPreambleEnabled	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetShortPreambleEnabled (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetShortPreambleSupported	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetShortPreambleSupported (Mac48Address address) const$/;"	f	class:ns3::WifiRemoteStationManager
GetShortRetryCount	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetShortRetryCount (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetShortSlotTimeEnabled	ap-wifi-mac.cc	/^ApWifiMac::GetShortSlotTimeEnabled (void) const$/;"	f	class:ns3::ApWifiMac
GetShortSlotTimeEnabled	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetShortSlotTimeEnabled (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetShortSlotTimeSupported	regular-wifi-mac.cc	/^RegularWifiMac::GetShortSlotTimeSupported (void) const$/;"	f	class:ns3::RegularWifiMac
GetShortSlotTimeSupported	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetShortSlotTimeSupported (Mac48Address address) const$/;"	f	class:ns3::WifiRemoteStationManager
GetSifs	mac-low.cc	/^MacLow::GetSifs (void) const$/;"	f	class:ns3::MacLow
GetSifs	regular-wifi-mac.cc	/^RegularWifiMac::GetSifs (void) const$/;"	f	class:ns3::RegularWifiMac
GetSig	ampdu-subframe-header.cc	/^AmpduSubframeHeader::GetSig (void) const$/;"	f	class:ns3::AmpduSubframeHeader
GetSize	interference-helper.cc	/^InterferenceHelper::Event::GetSize (void) const$/;"	f	class:ns3::InterferenceHelper::Event
GetSize	mac-low.cc	/^MacLow::GetSize (Ptr<const Packet> packet, const WifiMacHeader *hdr) const$/;"	f	class:ns3::MacLow
GetSize	wifi-information-element-vector.cc	/^WifiInformationElementVector::GetSize () const$/;"	f	class:ns3::WifiInformationElementVector
GetSize	wifi-mac-header.cc	/^WifiMacHeader::GetSize (void) const$/;"	f	class:ns3::WifiMacHeader
GetSize	wifi-mac-queue.cc	/^WifiMacQueue::GetSize (void)$/;"	f	class:ns3::WifiMacQueue
GetSleepCurrentA	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::GetSleepCurrentA (void) const$/;"	f	class:ns3::WifiRadioEnergyModel
GetSlot	regular-wifi-mac.cc	/^RegularWifiMac::GetSlot (void) const$/;"	f	class:ns3::RegularWifiMac
GetSlotTime	mac-low.cc	/^MacLow::GetSlotTime (void) const$/;"	f	class:ns3::MacLow
GetSnrThreshold	ideal-wifi-manager.cc	/^IdealWifiManager::GetSnrThreshold (WifiTxVector txVector) const$/;"	f	class:ns3::IdealWifiManager
GetSourceAddr	amsdu-subframe-header.cc	/^AmsduSubframeHeader::GetSourceAddr (void) const$/;"	f	class:ns3::AmsduSubframeHeader
GetSrcAddressForAggregation	edca-txop-n.cc	/^  virtual Mac48Address GetSrcAddressForAggregation (const WifiMacHeader &hdr)$/;"	f	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener
GetSrcAddressForAggregation	mac-low.cc	/^MacLowAggregationCapableTransmissionListener::GetSrcAddressForAggregation (const WifiMacHeader &hdr)$/;"	f	class:ns3::MacLowAggregationCapableTransmissionListener
GetSsid	mgt-headers.cc	/^MgtAssocRequestHeader::GetSsid (void) const$/;"	f	class:ns3::MgtAssocRequestHeader
GetSsid	mgt-headers.cc	/^MgtProbeRequestHeader::GetSsid (void) const$/;"	f	class:ns3::MgtProbeRequestHeader
GetSsid	mgt-headers.cc	/^MgtProbeResponseHeader::GetSsid (void) const$/;"	f	class:ns3::MgtProbeResponseHeader
GetSsid	regular-wifi-mac.cc	/^RegularWifiMac::GetSsid (void) const$/;"	f	class:ns3::RegularWifiMac
GetStaChannelWidth	ht-operations.cc	/^HtOperations::GetStaChannelWidth (void) const$/;"	f	class:ns3::HtOperations
GetStartTime	interference-helper.cc	/^InterferenceHelper::Event::GetStartTime (void) const$/;"	f	class:ns3::InterferenceHelper::Event
GetStartingSequence	block-ack-agreement.cc	/^BlockAckAgreement::GetStartingSequence (void) const$/;"	f	class:ns3::BlockAckAgreement
GetStartingSequence	ctrl-headers.cc	/^CtrlBAckRequestHeader::GetStartingSequence (void) const$/;"	f	class:ns3::CtrlBAckRequestHeader
GetStartingSequence	ctrl-headers.cc	/^CtrlBAckResponseHeader::GetStartingSequence (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
GetStartingSequence	mgt-headers.cc	/^MgtAddBaRequestHeader::GetStartingSequence (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
GetStartingSequenceControl	block-ack-agreement.cc	/^BlockAckAgreement::GetStartingSequenceControl (void) const$/;"	f	class:ns3::BlockAckAgreement
GetStartingSequenceControl	ctrl-headers.cc	/^CtrlBAckRequestHeader::GetStartingSequenceControl (void) const$/;"	f	class:ns3::CtrlBAckRequestHeader
GetStartingSequenceControl	ctrl-headers.cc	/^CtrlBAckResponseHeader::GetStartingSequenceControl (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
GetStartingSequenceControl	mgt-headers.cc	/^MgtAddBaRequestHeader::GetStartingSequenceControl (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
GetState	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::GetState (void)$/;"	f	class:ns3::WifiPhyStateHelper
GetStateDuration	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::GetStateDuration (void)$/;"	f	class:ns3::WifiPhyStateHelper
GetStateDuration	yans-wifi-phy.cc	/^YansWifiPhy::GetStateDuration (void)$/;"	f	class:ns3::YansWifiPhy
GetStatusCode	mgt-headers.cc	/^MgtAddBaResponseHeader::GetStatusCode (void) const$/;"	f	class:ns3::MgtAddBaResponseHeader
GetStatusCode	mgt-headers.cc	/^MgtAssocResponseHeader::GetStatusCode (void)$/;"	f	class:ns3::MgtAssocResponseHeader
GetStbc	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetStbc (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetStbc	yans-wifi-phy.cc	/^YansWifiPhy::GetStbc (void) const$/;"	f	class:ns3::YansWifiPhy
GetStbcBeacon	ht-operations.cc	/^HtOperations::GetStbcBeacon (void) const$/;"	f	class:ns3::HtOperations
GetSupported	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetSupported (const WifiRemoteStation *station, uint32_t i) const$/;"	f	class:ns3::WifiRemoteStationManager
GetSupportedChannelWidth	ht-capabilities.cc	/^HtCapabilities::GetSupportedChannelWidth (void) const$/;"	f	class:ns3::HtCapabilities
GetSupportedChannelWidthSet	vht-capabilities.cc	/^VhtCapabilities::GetSupportedChannelWidthSet () const$/;"	f	class:ns3::VhtCapabilities
GetSupportedChannelWidthSet	yans-wifi-phy.cc	/^YansWifiPhy::GetSupportedChannelWidthSet (void) const$/;"	f	class:ns3::YansWifiPhy
GetSupportedMcsAndNssSet	vht-capabilities.cc	/^VhtCapabilities::GetSupportedMcsAndNssSet () const$/;"	f	class:ns3::VhtCapabilities
GetSupportedMcsSet1	ht-capabilities.cc	/^HtCapabilities::GetSupportedMcsSet1 (void) const$/;"	f	class:ns3::HtCapabilities
GetSupportedMcsSet2	ht-capabilities.cc	/^HtCapabilities::GetSupportedMcsSet2 (void) const$/;"	f	class:ns3::HtCapabilities
GetSupportedRates	ap-wifi-mac.cc	/^ApWifiMac::GetSupportedRates (void) const$/;"	f	class:ns3::ApWifiMac
GetSupportedRates	mgt-headers.cc	/^MgtAssocRequestHeader::GetSupportedRates (void) const$/;"	f	class:ns3::MgtAssocRequestHeader
GetSupportedRates	mgt-headers.cc	/^MgtAssocResponseHeader::GetSupportedRates (void)$/;"	f	class:ns3::MgtAssocResponseHeader
GetSupportedRates	mgt-headers.cc	/^MgtProbeRequestHeader::GetSupportedRates (void) const$/;"	f	class:ns3::MgtProbeRequestHeader
GetSupportedRates	mgt-headers.cc	/^MgtProbeResponseHeader::GetSupportedRates (void) const$/;"	f	class:ns3::MgtProbeResponseHeader
GetSupportedRates	sta-wifi-mac.cc	/^StaWifiMac::GetSupportedRates (void) const$/;"	f	class:ns3::StaWifiMac
GetSupportedRxSpatialStreams	yans-wifi-phy.cc	/^YansWifiPhy::GetSupportedRxSpatialStreams (void) const$/;"	f	class:ns3::YansWifiPhy
GetSupportedTxSpatialStreams	yans-wifi-phy.cc	/^YansWifiPhy::GetSupportedTxSpatialStreams (void) const$/;"	f	class:ns3::YansWifiPhy
GetSwitchingCurrentA	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::GetSwitchingCurrentA (void) const$/;"	f	class:ns3::WifiRadioEnergyModel
GetThresholds	rraa-wifi-manager.cc	/^RraaWifiManager::GetThresholds (RraaWifiRemoteStation *station,$/;"	f	class:ns3::RraaWifiManager
GetThresholds	rraa-wifi-manager.cc	/^RraaWifiManager::GetThresholds (WifiMode mode, RraaWifiRemoteStation *station) const$/;"	f	class:ns3::RraaWifiManager
GetTid	block-ack-agreement.cc	/^BlockAckAgreement::GetTid (void) const$/;"	f	class:ns3::BlockAckAgreement
GetTid	mac-low.cc	/^MacLow::GetTid (Ptr<const Packet> packet, const WifiMacHeader hdr) const$/;"	f	class:ns3::MacLow
GetTid	mgt-headers.cc	/^MgtAddBaRequestHeader::GetTid (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
GetTid	mgt-headers.cc	/^MgtAddBaResponseHeader::GetTid (void) const$/;"	f	class:ns3::MgtAddBaResponseHeader
GetTid	mgt-headers.cc	/^MgtDelBaHeader::GetTid (void) const$/;"	f	class:ns3::MgtDelBaHeader
GetTid	qos-tag.cc	/^QosTag::GetTid () const$/;"	f	class:ns3::QosTag
GetTidInfo	ctrl-headers.cc	/^CtrlBAckRequestHeader::GetTidInfo (void) const$/;"	f	class:ns3::CtrlBAckRequestHeader
GetTidInfo	ctrl-headers.cc	/^CtrlBAckResponseHeader::GetTidInfo (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
GetTime	interference-helper.cc	/^InterferenceHelper::NiChange::GetTime (void) const$/;"	f	class:ns3::InterferenceHelper::NiChange
GetTimeout	block-ack-agreement.cc	/^BlockAckAgreement::GetTimeout (void) const$/;"	f	class:ns3::BlockAckAgreement
GetTimeout	mgt-headers.cc	/^MgtAddBaRequestHeader::GetTimeout (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
GetTimeout	mgt-headers.cc	/^MgtAddBaResponseHeader::GetTimeout (void) const$/;"	f	class:ns3::MgtAddBaResponseHeader
GetTimestamp	mgt-headers.cc	/^MgtProbeResponseHeader::GetTimestamp ()$/;"	f	class:ns3::MgtProbeResponseHeader
GetTotalEnergyConsumption	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::GetTotalEnergyConsumption (void) const$/;"	f	class:ns3::WifiRadioEnergyModel
GetTxBfCapabilities	ht-capabilities.cc	/^HtCapabilities::GetTxBfCapabilities (void) const$/;"	f	class:ns3::HtCapabilities
GetTxCurrentA	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::GetTxCurrentA (void) const$/;"	f	class:ns3::WifiRadioEnergyModel
GetTxGain	yans-wifi-phy.cc	/^YansWifiPhy::GetTxGain (void) const$/;"	f	class:ns3::YansWifiPhy
GetTxHighestSupportedLgiDataRate	vht-capabilities.cc	/^VhtCapabilities::GetTxHighestSupportedLgiDataRate () const$/;"	f	class:ns3::VhtCapabilities
GetTxMaxNSpatialStreams	ht-capabilities.cc	/^HtCapabilities::GetTxMaxNSpatialStreams (void) const$/;"	f	class:ns3::HtCapabilities
GetTxMaxNSpatialStreams	ht-operations.cc	/^HtOperations::GetTxMaxNSpatialStreams (void) const$/;"	f	class:ns3::HtOperations
GetTxMcsMap	vht-capabilities.cc	/^VhtCapabilities::GetTxMcsMap () const$/;"	f	class:ns3::VhtCapabilities
GetTxMcsSetDefined	ht-capabilities.cc	/^HtCapabilities::GetTxMcsSetDefined (void) const$/;"	f	class:ns3::HtCapabilities
GetTxMcsSetDefined	ht-operations.cc	/^HtOperations::GetTxMcsSetDefined (void) const$/;"	f	class:ns3::HtOperations
GetTxPowerEnd	yans-wifi-phy.cc	/^YansWifiPhy::GetTxPowerEnd (void) const$/;"	f	class:ns3::YansWifiPhy
GetTxPowerLevel	wifi-tx-vector.cc	/^WifiTxVector::GetTxPowerLevel (void) const$/;"	f	class:ns3::WifiTxVector
GetTxPowerStart	yans-wifi-phy.cc	/^YansWifiPhy::GetTxPowerStart (void) const$/;"	f	class:ns3::YansWifiPhy
GetTxRxMcsSetUnequal	ht-capabilities.cc	/^HtCapabilities::GetTxRxMcsSetUnequal (void) const$/;"	f	class:ns3::HtCapabilities
GetTxRxMcsSetUnequal	ht-operations.cc	/^HtOperations::GetTxRxMcsSetUnequal (void) const$/;"	f	class:ns3::HtOperations
GetTxStbc	vht-capabilities.cc	/^VhtCapabilities::GetTxStbc () const$/;"	f	class:ns3::VhtCapabilities
GetTxUnequalModulation	ht-capabilities.cc	/^HtCapabilities::GetTxUnequalModulation (void) const$/;"	f	class:ns3::HtCapabilities
GetTxUnequalModulation	ht-operations.cc	/^HtOperations::GetTxUnequalModulation (void) const$/;"	f	class:ns3::HtOperations
GetTxVector	interference-helper.cc	/^InterferenceHelper::Event::GetTxVector (void) const$/;"	f	class:ns3::InterferenceHelper::Event
GetType	wifi-mac-header.cc	/^WifiMacHeader::GetType (void) const$/;"	f	class:ns3::WifiMacHeader
GetTypeId	aarf-wifi-manager.cc	/^AarfWifiManager::GetTypeId (void)$/;"	f	class:ns3::AarfWifiManager
GetTypeId	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::GetTypeId (void)$/;"	f	class:ns3::AarfcdWifiManager
GetTypeId	adhoc-wifi-mac.cc	/^AdhocWifiMac::GetTypeId (void)$/;"	f	class:ns3::AdhocWifiMac
GetTypeId	ampdu-subframe-header.cc	/^AmpduSubframeHeader::GetTypeId ()$/;"	f	class:ns3::AmpduSubframeHeader
GetTypeId	ampdu-tag.cc	/^AmpduTag::GetTypeId (void)$/;"	f	class:ns3::AmpduTag
GetTypeId	amrr-wifi-manager.cc	/^AmrrWifiManager::GetTypeId (void)$/;"	f	class:ns3::AmrrWifiManager
GetTypeId	amsdu-subframe-header.cc	/^AmsduSubframeHeader::GetTypeId ()$/;"	f	class:ns3::AmsduSubframeHeader
GetTypeId	ap-wifi-mac.cc	/^ApWifiMac::GetTypeId (void)$/;"	f	class:ns3::ApWifiMac
GetTypeId	aparf-wifi-manager.cc	/^AparfWifiManager::GetTypeId (void)$/;"	f	class:ns3::AparfWifiManager
GetTypeId	arf-wifi-manager.cc	/^ArfWifiManager::GetTypeId (void)$/;"	f	class:ns3::ArfWifiManager
GetTypeId	cara-wifi-manager.cc	/^CaraWifiManager::GetTypeId (void)$/;"	f	class:ns3::CaraWifiManager
GetTypeId	constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::GetTypeId (void)$/;"	f	class:ns3::ConstantRateWifiManager
GetTypeId	ctrl-headers.cc	/^CtrlBAckRequestHeader::GetTypeId (void)$/;"	f	class:ns3::CtrlBAckRequestHeader
GetTypeId	ctrl-headers.cc	/^CtrlBAckResponseHeader::GetTypeId (void)$/;"	f	class:ns3::CtrlBAckResponseHeader
GetTypeId	dca-txop.cc	/^DcaTxop::GetTypeId (void)$/;"	f	class:ns3::DcaTxop
GetTypeId	dcf.cc	/^Dcf::GetTypeId (void)$/;"	f	class:ns3::Dcf
GetTypeId	edca-txop-n.cc	/^EdcaTxopN::GetTypeId (void)$/;"	f	class:ns3::EdcaTxopN
GetTypeId	error-rate-model.cc	/^TypeId ErrorRateModel::GetTypeId (void)$/;"	f	class:ns3::ErrorRateModel
GetTypeId	ideal-wifi-manager.cc	/^IdealWifiManager::GetTypeId (void)$/;"	f	class:ns3::IdealWifiManager
GetTypeId	mac-low.cc	/^MacLow::GetTypeId (void)$/;"	f	class:ns3::MacLow
GetTypeId	mgt-headers.cc	/^MgtAddBaRequestHeader::GetTypeId (void)$/;"	f	class:ns3::MgtAddBaRequestHeader
GetTypeId	mgt-headers.cc	/^MgtAddBaResponseHeader::GetTypeId ()$/;"	f	class:ns3::MgtAddBaResponseHeader
GetTypeId	mgt-headers.cc	/^MgtAssocRequestHeader::GetTypeId (void)$/;"	f	class:ns3::MgtAssocRequestHeader
GetTypeId	mgt-headers.cc	/^MgtAssocResponseHeader::GetTypeId (void)$/;"	f	class:ns3::MgtAssocResponseHeader
GetTypeId	mgt-headers.cc	/^MgtBeaconHeader::GetTypeId (void)$/;"	f	class:ns3::MgtBeaconHeader
GetTypeId	mgt-headers.cc	/^MgtDelBaHeader::GetTypeId (void)$/;"	f	class:ns3::MgtDelBaHeader
GetTypeId	mgt-headers.cc	/^MgtProbeRequestHeader::GetTypeId (void)$/;"	f	class:ns3::MgtProbeRequestHeader
GetTypeId	mgt-headers.cc	/^MgtProbeResponseHeader::GetTypeId (void)$/;"	f	class:ns3::MgtProbeResponseHeader
GetTypeId	mgt-headers.cc	/^WifiActionHeader::GetTypeId ()$/;"	f	class:ns3::WifiActionHeader
GetTypeId	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::GetTypeId (void)$/;"	f	class:ns3::MinstrelHtWifiManager
GetTypeId	minstrel-wifi-manager.cc	/^MinstrelWifiManager::GetTypeId (void)$/;"	f	class:ns3::MinstrelWifiManager
GetTypeId	mpdu-aggregator.cc	/^MpduAggregator::GetTypeId (void)$/;"	f	class:ns3::MpduAggregator
GetTypeId	mpdu-standard-aggregator.cc	/^MpduStandardAggregator::GetTypeId (void)$/;"	f	class:ns3::MpduStandardAggregator
GetTypeId	msdu-aggregator.cc	/^MsduAggregator::GetTypeId (void)$/;"	f	class:ns3::MsduAggregator
GetTypeId	msdu-standard-aggregator.cc	/^MsduStandardAggregator::GetTypeId (void)$/;"	f	class:ns3::MsduStandardAggregator
GetTypeId	nist-error-rate-model.cc	/^NistErrorRateModel::GetTypeId (void)$/;"	f	class:ns3::NistErrorRateModel
GetTypeId	onoe-wifi-manager.cc	/^OnoeWifiManager::GetTypeId (void)$/;"	f	class:ns3::OnoeWifiManager
GetTypeId	parf-wifi-manager.cc	/^ParfWifiManager::GetTypeId (void)$/;"	f	class:ns3::ParfWifiManager
GetTypeId	qos-tag.cc	/^QosTag::GetTypeId (void)$/;"	f	class:ns3::QosTag
GetTypeId	regular-wifi-mac.cc	/^RegularWifiMac::GetTypeId (void)$/;"	f	class:ns3::RegularWifiMac
GetTypeId	rraa-wifi-manager.cc	/^RraaWifiManager::GetTypeId (void)$/;"	f	class:ns3::RraaWifiManager
GetTypeId	snr-tag.cc	/^SnrTag::GetTypeId (void)$/;"	f	class:ns3::SnrTag
GetTypeId	sta-wifi-mac.cc	/^StaWifiMac::GetTypeId (void)$/;"	f	class:ns3::StaWifiMac
GetTypeId	wifi-channel.cc	/^WifiChannel::GetTypeId (void)$/;"	f	class:ns3::WifiChannel
GetTypeId	wifi-information-element-vector.cc	/^WifiInformationElementVector::GetTypeId ()$/;"	f	class:ns3::WifiInformationElementVector
GetTypeId	wifi-mac-header.cc	/^WifiMacHeader::GetTypeId (void)$/;"	f	class:ns3::WifiMacHeader
GetTypeId	wifi-mac-queue.cc	/^WifiMacQueue::GetTypeId (void)$/;"	f	class:ns3::WifiMacQueue
GetTypeId	wifi-mac-trailer.cc	/^WifiMacTrailer::GetTypeId (void)$/;"	f	class:ns3::WifiMacTrailer
GetTypeId	wifi-mac.cc	/^WifiMac::GetTypeId (void)$/;"	f	class:ns3::WifiMac
GetTypeId	wifi-net-device.cc	/^WifiNetDevice::GetTypeId (void)$/;"	f	class:ns3::WifiNetDevice
GetTypeId	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::GetTypeId (void)$/;"	f	class:ns3::WifiPhyStateHelper
GetTypeId	wifi-phy.cc	/^WifiPhy::GetTypeId (void)$/;"	f	class:ns3::WifiPhy
GetTypeId	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::GetTypeId (void)$/;"	f	class:ns3::WifiRadioEnergyModel
GetTypeId	wifi-remote-station-manager.cc	/^HighLatencyCtsToSelfTxVectorTag::GetTypeId (void)$/;"	f	class:ns3::HighLatencyCtsToSelfTxVectorTag
GetTypeId	wifi-remote-station-manager.cc	/^HighLatencyDataTxVectorTag::GetTypeId (void)$/;"	f	class:ns3::HighLatencyDataTxVectorTag
GetTypeId	wifi-remote-station-manager.cc	/^HighLatencyRtsTxVectorTag::GetTypeId (void)$/;"	f	class:ns3::HighLatencyRtsTxVectorTag
GetTypeId	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetTypeId (void)$/;"	f	class:ns3::WifiRemoteStationManager
GetTypeId	wifi-tx-current-model.cc	/^LinearWifiTxCurrentModel::GetTypeId (void)$/;"	f	class:ns3::LinearWifiTxCurrentModel
GetTypeId	wifi-tx-current-model.cc	/^WifiTxCurrentModel::GetTypeId (void)$/;"	f	class:ns3::WifiTxCurrentModel
GetTypeId	yans-error-rate-model.cc	/^YansErrorRateModel::GetTypeId (void)$/;"	f	class:ns3::YansErrorRateModel
GetTypeId	yans-wifi-channel.cc	/^YansWifiChannel::GetTypeId (void)$/;"	f	class:ns3::YansWifiChannel
GetTypeId	yans-wifi-phy.cc	/^YansWifiPhy::GetTypeId (void)$/;"	f	class:ns3::YansWifiPhy
GetTypeOfStation	edca-txop-n.cc	/^EdcaTxopN::GetTypeOfStation (void) const$/;"	f	class:ns3::EdcaTxopN
GetTypeString	wifi-mac-header.cc	/^WifiMacHeader::GetTypeString (void) const$/;"	f	class:ns3::WifiMacHeader
GetUid	wifi-mode.cc	/^WifiMode::GetUid (void) const$/;"	f	class:ns3::WifiMode
GetUniqueName	wifi-mode.cc	/^WifiMode::GetUniqueName (void) const$/;"	f	class:ns3::WifiMode
GetUseNonErpProtection	ap-wifi-mac.cc	/^ApWifiMac::GetUseNonErpProtection (void) const$/;"	f	class:ns3::ApWifiMac
GetUseNonErpProtection	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetUseNonErpProtection (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetUseProtection	erp-information.cc	/^ErpInformation::GetUseProtection (void) const$/;"	f	class:ns3::ErpInformation
GetVIQueue	regular-wifi-mac.cc	/^RegularWifiMac::GetVIQueue () const$/;"	f	class:ns3::RegularWifiMac
GetVOQueue	regular-wifi-mac.cc	/^RegularWifiMac::GetVOQueue () const$/;"	f	class:ns3::RegularWifiMac
GetVhtCapabilities	mgt-headers.cc	/^MgtAssocRequestHeader::GetVhtCapabilities (void) const$/;"	f	class:ns3::MgtAssocRequestHeader
GetVhtCapabilities	mgt-headers.cc	/^MgtAssocResponseHeader::GetVhtCapabilities (void) const$/;"	f	class:ns3::MgtAssocResponseHeader
GetVhtCapabilities	mgt-headers.cc	/^MgtProbeRequestHeader::GetVhtCapabilities (void) const$/;"	f	class:ns3::MgtProbeRequestHeader
GetVhtCapabilities	mgt-headers.cc	/^MgtProbeResponseHeader::GetVhtCapabilities (void) const$/;"	f	class:ns3::MgtProbeResponseHeader
GetVhtCapabilities	regular-wifi-mac.cc	/^RegularWifiMac::GetVhtCapabilities (void) const$/;"	f	class:ns3::RegularWifiMac
GetVhtCapabilitiesInfo	vht-capabilities.cc	/^VhtCapabilities::GetVhtCapabilitiesInfo () const$/;"	f	class:ns3::VhtCapabilities
GetVhtDeviceMcsList	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::GetVhtDeviceMcsList (void) const$/;"	f	class:ns3::MinstrelHtWifiManager
GetVhtGroupId	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::GetVhtGroupId (uint8_t txstreams, uint8_t sgi, uint32_t chWidth)$/;"	f	class:ns3::MinstrelHtWifiManager
GetVhtMcs0	wifi-phy.cc	/^WifiPhy::GetVhtMcs0 ()$/;"	f	class:ns3::WifiPhy
GetVhtMcs1	wifi-phy.cc	/^WifiPhy::GetVhtMcs1 ()$/;"	f	class:ns3::WifiPhy
GetVhtMcs2	wifi-phy.cc	/^WifiPhy::GetVhtMcs2 ()$/;"	f	class:ns3::WifiPhy
GetVhtMcs3	wifi-phy.cc	/^WifiPhy::GetVhtMcs3 ()$/;"	f	class:ns3::WifiPhy
GetVhtMcs4	wifi-phy.cc	/^WifiPhy::GetVhtMcs4 ()$/;"	f	class:ns3::WifiPhy
GetVhtMcs5	wifi-phy.cc	/^WifiPhy::GetVhtMcs5 ()$/;"	f	class:ns3::WifiPhy
GetVhtMcs6	wifi-phy.cc	/^WifiPhy::GetVhtMcs6 ()$/;"	f	class:ns3::WifiPhy
GetVhtMcs7	wifi-phy.cc	/^WifiPhy::GetVhtMcs7 ()$/;"	f	class:ns3::WifiPhy
GetVhtMcs8	wifi-phy.cc	/^WifiPhy::GetVhtMcs8 ()$/;"	f	class:ns3::WifiPhy
GetVhtMcs9	wifi-phy.cc	/^WifiPhy::GetVhtMcs9 ()$/;"	f	class:ns3::WifiPhy
GetVhtPlcpHeaderMode	wifi-phy.cc	/^WifiPhy::GetVhtPlcpHeaderMode (WifiMode payloadMode)$/;"	f	class:ns3::WifiPhy
GetVhtSupported	regular-wifi-mac.cc	/^RegularWifiMac::GetVhtSupported () const$/;"	f	class:ns3::RegularWifiMac
GetVhtSupported	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetVhtSupported (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetVoltage	wifi-tx-current-model.cc	/^LinearWifiTxCurrentModel::GetVoltage (void) const$/;"	f	class:ns3::LinearWifiTxCurrentModel
GetWifiPhy	regular-wifi-mac.cc	/^RegularWifiMac::GetWifiPhy (void) const$/;"	f	class:ns3::RegularWifiMac
GetWifiRemoteStationManager	regular-wifi-mac.cc	/^RegularWifiMac::GetWifiRemoteStationManager () const$/;"	f	class:ns3::RegularWifiMac
GetWinEnd	block-ack-agreement.cc	/^BlockAckAgreement::GetWinEnd (void) const$/;"	f	class:ns3::BlockAckAgreement
GetWinStart	block-ack-cache.cc	/^BlockAckCache::GetWinStart ()$/;"	f	class:ns3::BlockAckCache
GotAck	dca-txop.cc	/^  virtual void GotAck (double snr, WifiMode txMode)$/;"	f	class:ns3::DcaTxop::TransmissionListener
GotAck	dca-txop.cc	/^DcaTxop::GotAck (double snr, WifiMode txMode)$/;"	f	class:ns3::DcaTxop
GotAck	edca-txop-n.cc	/^  virtual void GotAck (double snr, WifiMode txMode)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
GotAck	edca-txop-n.cc	/^EdcaTxopN::GotAck (double snr, WifiMode txMode)$/;"	f	class:ns3::EdcaTxopN
GotAddBaResponse	edca-txop-n.cc	/^EdcaTxopN::GotAddBaResponse (const MgtAddBaResponseHeader *respHdr, Mac48Address recipient)$/;"	f	class:ns3::EdcaTxopN
GotBlockAck	edca-txop-n.cc	/^  virtual void GotBlockAck (const CtrlBAckResponseHeader *blockAck, Mac48Address source, double rxSnr, WifiMode txMode, double dataSnr)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
GotBlockAck	edca-txop-n.cc	/^EdcaTxopN::GotBlockAck (const CtrlBAckResponseHeader *blockAck, Mac48Address recipient, double rxSnr, WifiMode txMode, double dataSnr)$/;"	f	class:ns3::EdcaTxopN
GotBlockAck	mac-low.cc	/^MacLowTransmissionListener::GotBlockAck (const CtrlBAckResponseHeader *blockAck, Mac48Address source, double rxSnr, WifiMode mode, double dataSnr)$/;"	f	class:ns3::MacLowTransmissionListener
GotCts	dca-txop.cc	/^  virtual void GotCts (double snr, WifiMode txMode)$/;"	f	class:ns3::DcaTxop::TransmissionListener
GotCts	dca-txop.cc	/^DcaTxop::GotCts (double snr, WifiMode txMode)$/;"	f	class:ns3::DcaTxop
GotCts	edca-txop-n.cc	/^  virtual void GotCts (double snr, WifiMode txMode)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
GotCts	edca-txop-n.cc	/^EdcaTxopN::GotCts (double snr, WifiMode txMode)$/;"	f	class:ns3::EdcaTxopN
GotDelBaFrame	edca-txop-n.cc	/^EdcaTxopN::GotDelBaFrame (const MgtDelBaHeader *delBaHdr, Mac48Address recipient)$/;"	f	class:ns3::EdcaTxopN
GroupInfo	minstrel-ht-wifi-manager.h	/^struct GroupInfo$/;"	s	namespace:ns3
HT_ADHOC_STA	edca-txop-n.h	/^  HT_ADHOC_STA,$/;"	e	enum:ns3::TypeOfStation
HT_AP	edca-txop-n.h	/^  HT_AP,$/;"	e	enum:ns3::TypeOfStation
HT_CAPABILITIES_H	ht-capabilities.h	23;"	d
HT_OPERATIONS_H	ht-operations.h	22;"	d
HT_PHY	yans-wifi-phy.h	45;"	d
HT_STA	edca-txop-n.h	/^  HT_STA,$/;"	e	enum:ns3::TypeOfStation
HandleEnergyDepletion	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::HandleEnergyDepletion (void)$/;"	f	class:ns3::WifiRadioEnergyModel
HandleEnergyRecharged	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::HandleEnergyRecharged (void)$/;"	f	class:ns3::WifiRadioEnergyModel
HandleFragments	mac-rx-middle.cc	/^MacRxMiddle::HandleFragments (Ptr<Packet> packet, const WifiMacHeader *hdr,$/;"	f	class:ns3::MacRxMiddle
HasBar	block-ack-manager.cc	/^BlockAckManager::HasBar (struct Bar &bar)$/;"	f	class:ns3::BlockAckManager
HasDurationId	mac-low.cc	/^MacLowTransmissionParameters::HasDurationId (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
HasHtSupported	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::HasHtSupported (void) const$/;"	f	class:ns3::WifiRemoteStationManager
HasNextPacket	mac-low.cc	/^MacLowTransmissionParameters::HasNextPacket (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
HasOtherFragments	block-ack-manager.cc	/^BlockAckManager::HasOtherFragments (uint16_t sequenceNumber) const$/;"	f	class:ns3::BlockAckManager
HasPackets	block-ack-manager.cc	/^BlockAckManager::HasPackets (void) const$/;"	f	class:ns3::BlockAckManager
HasVhtSupported	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::HasVhtSupported (void) const$/;"	f	class:ns3::WifiRemoteStationManager
High	aparf-wifi-manager.h	/^    High,$/;"	e	enum:ns3::AparfWifiManager::State
HighLatencyCtsToSelfTxVectorTag	wifi-remote-station-manager.cc	/^HighLatencyCtsToSelfTxVectorTag::HighLatencyCtsToSelfTxVectorTag ()$/;"	f	class:ns3::HighLatencyCtsToSelfTxVectorTag
HighLatencyCtsToSelfTxVectorTag	wifi-remote-station-manager.cc	/^HighLatencyCtsToSelfTxVectorTag::HighLatencyCtsToSelfTxVectorTag (WifiTxVector ctsToSelfTxVector)$/;"	f	class:ns3::HighLatencyCtsToSelfTxVectorTag
HighLatencyCtsToSelfTxVectorTag	wifi-remote-station-manager.cc	/^class HighLatencyCtsToSelfTxVectorTag : public Tag$/;"	c	namespace:ns3	file:
HighLatencyDataTxVectorTag	wifi-remote-station-manager.cc	/^HighLatencyDataTxVectorTag::HighLatencyDataTxVectorTag ()$/;"	f	class:ns3::HighLatencyDataTxVectorTag
HighLatencyDataTxVectorTag	wifi-remote-station-manager.cc	/^HighLatencyDataTxVectorTag::HighLatencyDataTxVectorTag (WifiTxVector dataTxVector)$/;"	f	class:ns3::HighLatencyDataTxVectorTag
HighLatencyDataTxVectorTag	wifi-remote-station-manager.cc	/^class HighLatencyDataTxVectorTag : public Tag$/;"	c	namespace:ns3	file:
HighLatencyRtsTxVectorTag	wifi-remote-station-manager.cc	/^HighLatencyRtsTxVectorTag::HighLatencyRtsTxVectorTag ()$/;"	f	class:ns3::HighLatencyRtsTxVectorTag
HighLatencyRtsTxVectorTag	wifi-remote-station-manager.cc	/^HighLatencyRtsTxVectorTag::HighLatencyRtsTxVectorTag (WifiTxVector rtsTxVector)$/;"	f	class:ns3::HighLatencyRtsTxVectorTag
HighLatencyRtsTxVectorTag	wifi-remote-station-manager.cc	/^class HighLatencyRtsTxVectorTag : public Tag$/;"	c	namespace:ns3	file:
HtCapabilities	ht-capabilities.cc	/^HtCapabilities::HtCapabilities ()$/;"	f	class:ns3::HtCapabilities
HtCapabilities	ht-capabilities.h	/^class HtCapabilities : public WifiInformationElement$/;"	c	namespace:ns3
HtMinstrelRate	minstrel-ht-wifi-manager.h	/^typedef std::vector<struct HtRateInfo> HtMinstrelRate;$/;"	t	namespace:ns3
HtOperations	ht-operations.cc	/^HtOperations::HtOperations ()$/;"	f	class:ns3::HtOperations
HtOperations	ht-operations.h	/^class HtOperations: public WifiInformationElement$/;"	c	namespace:ns3
HtProtectionType	ht-operations.h	/^enum HtProtectionType$/;"	g	namespace:ns3
HtRateInfo	minstrel-ht-wifi-manager.h	/^struct HtRateInfo$/;"	s	namespace:ns3
HtSampleRate	minstrel-ht-wifi-manager.h	/^typedef std::vector<std::vector<uint32_t> > HtSampleRate;$/;"	t	namespace:ns3
IDEAL_WIFI_MANAGER_H	ideal-wifi-manager.h	22;"	d
IDLE	wifi-phy.h	/^    IDLE,$/;"	e	enum:ns3::WifiPhy::State
IE11S_ABBREVIATED_HANDSHAKE	wifi-information-element.h	108;"	d
IE11S_AWAKE_WINDOW	wifi-information-element.h	99;"	d
IE11S_BEACON_TIMING	wifi-information-element.h	100;"	d
IE11S_CONGESTION_NOTIFICATION	wifi-information-element.h	95;"	d
IE11S_LINK_METRIC_REPORT	wifi-information-element.h	94;"	d
IE11S_MCCAOP_ADVERTISEMENT	wifi-information-element.h	103;"	d
IE11S_MCCAOP_RESERVATION_TEARDOWN	wifi-information-element.h	104;"	d
IE11S_MCCAOP_SETUP_REPLY	wifi-information-element.h	102;"	d
IE11S_MCCAOP_SETUP_REQUEST	wifi-information-element.h	101;"	d
IE11S_MESH_CHANNEL_SWITCH_ANNOUNCEMENT	wifi-information-element.h	97;"	d
IE11S_MESH_CONFIGURATION	wifi-information-element.h	110;"	d
IE11S_MESH_ID	wifi-information-element.h	111;"	d
IE11S_MESH_PEERING_PROTOCOL_VERSION	wifi-information-element.h	120;"	d
IE11S_MESH_TIM	wifi-information-element.h	98;"	d
IE11S_PEERING_MANAGEMENT	wifi-information-element.h	112;"	d
IE11S_PERR	wifi-information-element.h	118;"	d
IE11S_PORTAL_ANNOUNCEMENT	wifi-information-element.h	105;"	d
IE11S_PREP	wifi-information-element.h	117;"	d
IE11S_PREQ	wifi-information-element.h	116;"	d
IE11S_PROXY_UPDATE	wifi-information-element.h	106;"	d
IE11S_PROXY_UPDATE_CONFIRMATION	wifi-information-element.h	107;"	d
IE11S_RANN	wifi-information-element.h	114;"	d
IE11S_SUPP_MBSS_REG_CLASSES_CHANNELS	wifi-information-element.h	96;"	d
IE_BSS_LOAD	wifi-information-element.h	60;"	d
IE_CF_PARAMETER_SET	wifi-information-element.h	53;"	d
IE_CHALLENGE_TEXT	wifi-information-element.h	65;"	d
IE_CHANNEL_SWITCH_ANNOUNCEMENT	wifi-information-element.h	72;"	d
IE_COUNTRY	wifi-information-element.h	56;"	d
IE_DS_PARAMETER_SET	wifi-information-element.h	52;"	d
IE_EDCA_PARAMETER_SET	wifi-information-element.h	61;"	d
IE_ERP_INFORMATION	wifi-information-element.h	77;"	d
IE_EXTENDED_CAPABILITIES	wifi-information-element.h	89;"	d
IE_EXTENDED_SUPPORTED_RATES	wifi-information-element.h	85;"	d
IE_FH_PARAMETER_SET	wifi-information-element.h	51;"	d
IE_HOPPING_PATTERN_PARAMETERS	wifi-information-element.h	57;"	d
IE_HOPPING_PATTERN_TABLE	wifi-information-element.h	58;"	d
IE_HT_CAPABILITIES	wifi-information-element.h	80;"	d
IE_HT_OPERATIONS	wifi-information-element.h	87;"	d
IE_IBSS_DFS	wifi-information-element.h	76;"	d
IE_IBSS_PARAMETER_SET	wifi-information-element.h	55;"	d
IE_MEASUREMENT_REPORT	wifi-information-element.h	74;"	d
IE_MEASUREMENT_REQUEST	wifi-information-element.h	73;"	d
IE_POWER_CAPABILITY	wifi-information-element.h	68;"	d
IE_POWER_CONSTRAINT	wifi-information-element.h	67;"	d
IE_QOS_CAPABILITY	wifi-information-element.h	81;"	d
IE_QUIET	wifi-information-element.h	75;"	d
IE_REQUEST	wifi-information-element.h	59;"	d
IE_RSN	wifi-information-element.h	83;"	d
IE_SCHEDULE	wifi-information-element.h	64;"	d
IE_SSID	wifi-information-element.h	49;"	d
IE_SUPPORTED_CHANNELS	wifi-information-element.h	71;"	d
IE_SUPPORTED_RATES	wifi-information-element.h	50;"	d
IE_TCLAS	wifi-information-element.h	63;"	d
IE_TCLAS_PROCESSING	wifi-information-element.h	79;"	d
IE_TIM	wifi-information-element.h	54;"	d
IE_TPC_REPORT	wifi-information-element.h	70;"	d
IE_TPC_REQUEST	wifi-information-element.h	69;"	d
IE_TSPEC	wifi-information-element.h	62;"	d
IE_TS_DELAY	wifi-information-element.h	78;"	d
IE_VECTOR	wifi-information-element-vector.h	/^  typedef std::vector<Ptr<WifiInformationElement> > IE_VECTOR;$/;"	t	class:ns3::WifiInformationElementVector
IE_VENDOR_SPECIFIC	wifi-information-element.h	92;"	d
IE_VHT_CAPABILITIES	wifi-information-element.h	91;"	d
INACTIVE	originator-block-ack-agreement.h	/^    INACTIVE,$/;"	e	enum:ns3::OriginatorBlockAckAgreement::State
INTERFERENCE_HELPER_H	interference-helper.h	22;"	d
IdealWifiManager	ideal-wifi-manager.cc	/^IdealWifiManager::IdealWifiManager ()$/;"	f	class:ns3::IdealWifiManager
IdealWifiManager	ideal-wifi-manager.h	/^class IdealWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
IdealWifiRemoteStation	ideal-wifi-manager.cc	/^struct IdealWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
InactivityTimeout	block-ack-manager.cc	/^BlockAckManager::InactivityTimeout (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::BlockAckManager
IncreaseRate	amrr-wifi-manager.cc	/^AmrrWifiManager::IncreaseRate (AmrrWifiRemoteStation *station)$/;"	f	class:ns3::AmrrWifiManager
IncreaseRtsWnd	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::IncreaseRtsWnd (AarfcdWifiRemoteStation *station)$/;"	f	class:ns3::AarfcdWifiManager
IndexInBitmap	ctrl-headers.cc	/^CtrlBAckResponseHeader::IndexInBitmap (uint16_t seq) const$/;"	f	class:ns3::CtrlBAckResponseHeader
Init	block-ack-cache.cc	/^BlockAckCache::Init (uint16_t winStart, uint16_t winSize)$/;"	f	class:ns3::BlockAckCache
InitSampleTable	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::InitSampleTable (MinstrelHtWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelHtWifiManager
InitSampleTable	minstrel-wifi-manager.cc	/^MinstrelWifiManager::InitSampleTable (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
InsertInRetryQueue	block-ack-manager.cc	/^BlockAckManager::InsertInRetryQueue (PacketQueueI item)$/;"	f	class:ns3::BlockAckManager
InsertInTxQueue	mac-low.cc	/^MacLow::InsertInTxQueue (Ptr<const Packet> packet, const WifiMacHeader &hdr, Time tStamp)$/;"	f	class:ns3::MacLow
IntegralFunction	dsss-error-rate-model.cc	/^IntegralFunction (double x, void *params)$/;"	f	namespace:ns3
InterferenceHelper	interference-helper.cc	/^InterferenceHelper::InterferenceHelper ()$/;"	f	class:ns3::InterferenceHelper
InterferenceHelper	interference-helper.h	/^class InterferenceHelper$/;"	c	namespace:ns3
Is	capability-information.cc	/^CapabilityInformation::Is (uint8_t n) const$/;"	f	class:ns3::CapabilityInformation
IsAccessRequested	dcf-manager.cc	/^DcfState::IsAccessRequested (void) const$/;"	f	class:ns3::DcfState
IsAck	wifi-mac-header.cc	/^WifiMacHeader::IsAck (void) const$/;"	f	class:ns3::WifiMacHeader
IsAction	wifi-mac-header.cc	/^WifiMacHeader::IsAction (void) const$/;"	f	class:ns3::WifiMacHeader
IsAggregation	wifi-tx-vector.cc	/^WifiTxVector::IsAggregation (void) const$/;"	f	class:ns3::WifiTxVector
IsAllowedControlAnswerModulationClass	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::IsAllowedControlAnswerModulationClass (enum WifiModulationClass modClassReq, enum WifiModulationClass modClassAnswer) const$/;"	f	class:ns3::WifiRemoteStationManager
IsAmpdu	mac-low.cc	/^MacLow::IsAmpdu (Ptr<const Packet> packet, const WifiMacHeader hdr)$/;"	f	class:ns3::MacLow
IsAmsduSupported	block-ack-agreement.cc	/^BlockAckAgreement::IsAmsduSupported (void) const$/;"	f	class:ns3::BlockAckAgreement
IsAmsduSupported	mgt-headers.cc	/^MgtAddBaRequestHeader::IsAmsduSupported (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
IsAmsduSupported	mgt-headers.cc	/^MgtAddBaResponseHeader::IsAmsduSupported (void) const$/;"	f	class:ns3::MgtAddBaResponseHeader
IsAssocReq	wifi-mac-header.cc	/^WifiMacHeader::IsAssocReq (void) const$/;"	f	class:ns3::WifiMacHeader
IsAssocResp	wifi-mac-header.cc	/^WifiMacHeader::IsAssocResp (void) const$/;"	f	class:ns3::WifiMacHeader
IsAssociated	sta-wifi-mac.cc	/^StaWifiMac::IsAssociated (void) const$/;"	f	class:ns3::StaWifiMac
IsAssociated	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::IsAssociated (Mac48Address address) const$/;"	f	class:ns3::WifiRemoteStationManager
IsAuthentication	wifi-mac-header.cc	/^WifiMacHeader::IsAuthentication (void) const$/;"	f	class:ns3::WifiMacHeader
IsBasic	ctrl-headers.cc	/^CtrlBAckRequestHeader::IsBasic (void) const$/;"	f	class:ns3::CtrlBAckRequestHeader
IsBasic	ctrl-headers.cc	/^CtrlBAckResponseHeader::IsBasic (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
IsBasicRate	supported-rates.cc	/^SupportedRates::IsBasicRate (uint32_t bs) const$/;"	f	class:ns3::SupportedRates
IsBeacon	wifi-mac-header.cc	/^WifiMacHeader::IsBeacon (void) const$/;"	f	class:ns3::WifiMacHeader
IsBlockAck	wifi-mac-header.cc	/^WifiMacHeader::IsBlockAck (void) const$/;"	f	class:ns3::WifiMacHeader
IsBlockAckReq	wifi-mac-header.cc	/^WifiMacHeader::IsBlockAckReq (void) const$/;"	f	class:ns3::WifiMacHeader
IsBlockAckRequestNeeded	originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::IsBlockAckRequestNeeded (void) const$/;"	f	class:ns3::OriginatorBlockAckAgreement
IsBlocked	qos-blocked-destinations.cc	/^QosBlockedDestinations::IsBlocked (Mac48Address dest, uint8_t tid) const$/;"	f	class:ns3::QosBlockedDestinations
IsBrandNew	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::IsBrandNew (Mac48Address address) const$/;"	f	class:ns3::WifiRemoteStationManager
IsBridge	wifi-net-device.cc	/^WifiNetDevice::IsBridge (void) const$/;"	f	class:ns3::WifiNetDevice
IsBroadcast	ssid.cc	/^Ssid::IsBroadcast (void) const$/;"	f	class:ns3::Ssid
IsBroadcast	wifi-net-device.cc	/^WifiNetDevice::IsBroadcast (void) const$/;"	f	class:ns3::WifiNetDevice
IsBusy	dcf-manager.cc	/^DcfManager::IsBusy (void) const$/;"	f	class:ns3::DcfManager
IsByOriginator	mgt-headers.cc	/^MgtDelBaHeader::IsByOriginator (void) const$/;"	f	class:ns3::MgtDelBaHeader
IsCfpoll	wifi-mac-header.cc	/^WifiMacHeader::IsCfpoll (void) const$/;"	f	class:ns3::WifiMacHeader
IsCompressed	ctrl-headers.cc	/^CtrlBAckRequestHeader::IsCompressed (void) const$/;"	f	class:ns3::CtrlBAckRequestHeader
IsCompressed	ctrl-headers.cc	/^CtrlBAckResponseHeader::IsCompressed (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
IsCtl	wifi-mac-header.cc	/^WifiMacHeader::IsCtl (void) const$/;"	f	class:ns3::WifiMacHeader
IsCts	wifi-mac-header.cc	/^WifiMacHeader::IsCts (void) const$/;"	f	class:ns3::WifiMacHeader
IsData	wifi-mac-header.cc	/^WifiMacHeader::IsData (void) const$/;"	f	class:ns3::WifiMacHeader
IsDeFragmenting	mac-rx-middle.cc	/^  bool IsDeFragmenting (void)$/;"	f	class:ns3::OriginatorRxStatus
IsDeauthentication	wifi-mac-header.cc	/^WifiMacHeader::IsDeauthentication (void) const$/;"	f	class:ns3::WifiMacHeader
IsDisassociation	wifi-mac-header.cc	/^WifiMacHeader::IsDisassociation (void) const$/;"	f	class:ns3::WifiMacHeader
IsDuplicate	mac-rx-middle.cc	/^MacRxMiddle::IsDuplicate (const WifiMacHeader* hdr,$/;"	f	class:ns3::MacRxMiddle
IsEdca	dca-txop.cc	/^  virtual bool IsEdca (void) const$/;"	f	class:ns3::DcaTxop::Dcf
IsEdca	edca-txop-n.cc	/^  virtual bool IsEdca (void) const$/;"	f	class:ns3::EdcaTxopN::Dcf
IsEmpty	wifi-mac-queue.cc	/^WifiMacQueue::IsEmpty (void)$/;"	f	class:ns3::WifiMacQueue
IsEnough	amrr-wifi-manager.cc	/^AmrrWifiManager::IsEnough (AmrrWifiRemoteStation *station) const$/;"	f	class:ns3::AmrrWifiManager
IsEqual	ssid.cc	/^Ssid::IsEqual (const Ssid& o) const$/;"	f	class:ns3::Ssid
IsEss	capability-information.cc	/^CapabilityInformation::IsEss (void) const$/;"	f	class:ns3::CapabilityInformation
IsEstablished	originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::IsEstablished (void) const$/;"	f	class:ns3::OriginatorBlockAckAgreement
IsFailure	amrr-wifi-manager.cc	/^AmrrWifiManager::IsFailure (AmrrWifiRemoteStation *station) const$/;"	f	class:ns3::AmrrWifiManager
IsFragmentReceived	ctrl-headers.cc	/^CtrlBAckResponseHeader::IsFragmentReceived (uint16_t seq, uint8_t frag) const$/;"	f	class:ns3::CtrlBAckResponseHeader
IsFromDs	wifi-mac-header.cc	/^WifiMacHeader::IsFromDs (void) const$/;"	f	class:ns3::WifiMacHeader
IsHigherCodeRate	wifi-mode.cc	/^WifiMode::IsHigherCodeRate (WifiMode mode) const$/;"	f	class:ns3::WifiMode
IsHigherDataRate	wifi-mode.cc	/^WifiMode::IsHigherDataRate (WifiMode mode) const$/;"	f	class:ns3::WifiMode
IsHtSupported	block-ack-agreement.cc	/^BlockAckAgreement::IsHtSupported (void) const$/;"	f	class:ns3::BlockAckAgreement
IsIbss	capability-information.cc	/^CapabilityInformation::IsIbss (void) const$/;"	f	class:ns3::CapabilityInformation
IsImmediateBlockAck	block-ack-agreement.cc	/^BlockAckAgreement::IsImmediateBlockAck (void) const$/;"	f	class:ns3::BlockAckAgreement
IsImmediateBlockAck	mgt-headers.cc	/^MgtAddBaRequestHeader::IsImmediateBlockAck (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
IsImmediateBlockAck	mgt-headers.cc	/^MgtAddBaResponseHeader::IsImmediateBlockAck (void) const$/;"	f	class:ns3::MgtAddBaResponseHeader
IsInBitmap	ctrl-headers.cc	/^CtrlBAckResponseHeader::IsInBitmap (uint16_t seq) const$/;"	f	class:ns3::CtrlBAckResponseHeader
IsInWindow	block-ack-cache.cc	/^BlockAckCache::IsInWindow (uint16_t seq)$/;"	f	class:ns3::BlockAckCache
IsInWindow	mac-low.cc	/^MacLow::IsInWindow (uint16_t seq, uint16_t winstart, uint16_t winsize)$/;"	f	class:ns3::MacLow
IsInactive	originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::IsInactive (void) const$/;"	f	class:ns3::OriginatorBlockAckAgreement
IsLastFragment	dca-txop.cc	/^DcaTxop::IsLastFragment (void)$/;"	f	class:ns3::DcaTxop
IsLastFragment	edca-txop-n.cc	/^EdcaTxopN::IsLastFragment (void) const$/;"	f	class:ns3::EdcaTxopN
IsLastFragment	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::IsLastFragment (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
IsLinkUp	wifi-net-device.cc	/^WifiNetDevice::IsLinkUp (void) const$/;"	f	class:ns3::WifiNetDevice
IsLowLatency	aarf-wifi-manager.cc	/^AarfWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::AarfWifiManager
IsLowLatency	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::AarfcdWifiManager
IsLowLatency	amrr-wifi-manager.cc	/^AmrrWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::AmrrWifiManager
IsLowLatency	aparf-wifi-manager.cc	/^AparfWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::AparfWifiManager
IsLowLatency	arf-wifi-manager.cc	/^ArfWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::ArfWifiManager
IsLowLatency	cara-wifi-manager.cc	/^CaraWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::CaraWifiManager
IsLowLatency	constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::ConstantRateWifiManager
IsLowLatency	ideal-wifi-manager.cc	/^IdealWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::IdealWifiManager
IsLowLatency	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::MinstrelHtWifiManager
IsLowLatency	minstrel-wifi-manager.cc	/^MinstrelWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::MinstrelWifiManager
IsLowLatency	onoe-wifi-manager.cc	/^OnoeWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::OnoeWifiManager
IsLowLatency	parf-wifi-manager.cc	/^ParfWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::ParfWifiManager
IsLowLatency	rraa-wifi-manager.cc	/^RraaWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::RraaWifiManager
IsMandatory	wifi-mode.cc	/^WifiMode::IsMandatory (void) const$/;"	f	class:ns3::WifiMode
IsMaxRate	amrr-wifi-manager.cc	/^AmrrWifiManager::IsMaxRate (AmrrWifiRemoteStation *station) const$/;"	f	class:ns3::AmrrWifiManager
IsMcsSupported	yans-wifi-phy.cc	/^YansWifiPhy::IsMcsSupported (WifiMode mcs)$/;"	f	class:ns3::YansWifiPhy
IsMgt	wifi-mac-header.cc	/^WifiMacHeader::IsMgt (void) const$/;"	f	class:ns3::WifiMacHeader
IsMinRate	amrr-wifi-manager.cc	/^AmrrWifiManager::IsMinRate (AmrrWifiRemoteStation *station) const$/;"	f	class:ns3::AmrrWifiManager
IsModeSupported	yans-wifi-phy.cc	/^YansWifiPhy::IsModeSupported (WifiMode mode) const$/;"	f	class:ns3::YansWifiPhy
IsMoreFragments	wifi-mac-header.cc	/^WifiMacHeader::IsMoreFragments (void) const$/;"	f	class:ns3::WifiMacHeader
IsMultiTid	ctrl-headers.cc	/^CtrlBAckRequestHeader::IsMultiTid (void) const$/;"	f	class:ns3::CtrlBAckRequestHeader
IsMultiTid	ctrl-headers.cc	/^CtrlBAckResponseHeader::IsMultiTid (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
IsMulticast	wifi-net-device.cc	/^WifiNetDevice::IsMulticast (void) const$/;"	f	class:ns3::WifiNetDevice
IsMultihopAction	wifi-mac-header.cc	/^WifiMacHeader::IsMultihopAction (void) const$/;"	f	class:ns3::WifiMacHeader
IsNavZero	mac-low.cc	/^MacLow::IsNavZero (void) const$/;"	f	class:ns3::MacLow
IsNextFragment	mac-rx-middle.cc	/^  bool IsNextFragment (uint16_t sequenceControl)$/;"	f	class:ns3::OriginatorRxStatus
IsPacketReceived	ctrl-headers.cc	/^CtrlBAckResponseHeader::IsPacketReceived (uint16_t seq) const$/;"	f	class:ns3::CtrlBAckResponseHeader
IsPending	originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::IsPending (void) const$/;"	f	class:ns3::OriginatorBlockAckAgreement
IsPointToPoint	wifi-net-device.cc	/^WifiNetDevice::IsPointToPoint (void) const$/;"	f	class:ns3::WifiNetDevice
IsProbeReq	wifi-mac-header.cc	/^WifiMacHeader::IsProbeReq (void) const$/;"	f	class:ns3::WifiMacHeader
IsProbeResp	wifi-mac-header.cc	/^WifiMacHeader::IsProbeResp (void) const$/;"	f	class:ns3::WifiMacHeader
IsPromisc	mac-low.cc	/^MacLow::IsPromisc (void) const$/;"	f	class:ns3::MacLow
IsQosAck	wifi-mac-header.cc	/^WifiMacHeader::IsQosAck (void) const$/;"	f	class:ns3::WifiMacHeader
IsQosAmsdu	wifi-mac-header.cc	/^WifiMacHeader::IsQosAmsdu (void) const$/;"	f	class:ns3::WifiMacHeader
IsQosBlockAck	wifi-mac-header.cc	/^WifiMacHeader::IsQosBlockAck (void) const$/;"	f	class:ns3::WifiMacHeader
IsQosData	wifi-mac-header.cc	/^WifiMacHeader::IsQosData (void) const$/;"	f	class:ns3::WifiMacHeader
IsQosEosp	wifi-mac-header.cc	/^WifiMacHeader::IsQosEosp (void) const$/;"	f	class:ns3::WifiMacHeader
IsQosNoAck	wifi-mac-header.cc	/^WifiMacHeader::IsQosNoAck (void) const$/;"	f	class:ns3::WifiMacHeader
IsReassocReq	wifi-mac-header.cc	/^WifiMacHeader::IsReassocReq (void) const$/;"	f	class:ns3::WifiMacHeader
IsReassocResp	wifi-mac-header.cc	/^WifiMacHeader::IsReassocResp (void) const$/;"	f	class:ns3::WifiMacHeader
IsRetry	wifi-mac-header.cc	/^WifiMacHeader::IsRetry (void) const$/;"	f	class:ns3::WifiMacHeader
IsRts	wifi-mac-header.cc	/^WifiMacHeader::IsRts (void) const$/;"	f	class:ns3::WifiMacHeader
IsShortGuardInterval	wifi-tx-vector.cc	/^WifiTxVector::IsShortGuardInterval (void) const$/;"	f	class:ns3::WifiTxVector
IsShortPreamble	capability-information.cc	/^CapabilityInformation::IsShortPreamble (void) const$/;"	f	class:ns3::CapabilityInformation
IsShortSlotTime	capability-information.cc	/^CapabilityInformation::IsShortSlotTime (void) const$/;"	f	class:ns3::CapabilityInformation
IsStateBusy	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::IsStateBusy (void)$/;"	f	class:ns3::WifiPhyStateHelper
IsStateBusy	yans-wifi-phy.cc	/^YansWifiPhy::IsStateBusy (void)$/;"	f	class:ns3::YansWifiPhy
IsStateCcaBusy	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::IsStateCcaBusy (void)$/;"	f	class:ns3::WifiPhyStateHelper
IsStateCcaBusy	yans-wifi-phy.cc	/^YansWifiPhy::IsStateCcaBusy (void)$/;"	f	class:ns3::YansWifiPhy
IsStateIdle	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::IsStateIdle (void)$/;"	f	class:ns3::WifiPhyStateHelper
IsStateIdle	yans-wifi-phy.cc	/^YansWifiPhy::IsStateIdle (void)$/;"	f	class:ns3::YansWifiPhy
IsStateRx	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::IsStateRx (void)$/;"	f	class:ns3::WifiPhyStateHelper
IsStateRx	yans-wifi-phy.cc	/^YansWifiPhy::IsStateRx (void)$/;"	f	class:ns3::YansWifiPhy
IsStateSleep	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::IsStateSleep (void)$/;"	f	class:ns3::WifiPhyStateHelper
IsStateSleep	yans-wifi-phy.cc	/^YansWifiPhy::IsStateSleep (void)$/;"	f	class:ns3::YansWifiPhy
IsStateSwitching	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::IsStateSwitching (void)$/;"	f	class:ns3::WifiPhyStateHelper
IsStateSwitching	yans-wifi-phy.cc	/^YansWifiPhy::IsStateSwitching (void)$/;"	f	class:ns3::YansWifiPhy
IsStateTx	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::IsStateTx (void)$/;"	f	class:ns3::WifiPhyStateHelper
IsStateTx	yans-wifi-phy.cc	/^YansWifiPhy::IsStateTx (void)$/;"	f	class:ns3::YansWifiPhy
IsStbc	wifi-tx-vector.cc	/^WifiTxVector::IsStbc (void) const$/;"	f	class:ns3::WifiTxVector
IsSuccess	amrr-wifi-manager.cc	/^AmrrWifiManager::IsSuccess (AmrrWifiRemoteStation *station) const$/;"	f	class:ns3::AmrrWifiManager
IsSuccess	status-code.cc	/^StatusCode::IsSuccess (void) const$/;"	f	class:ns3::StatusCode
IsSupportedMcs	ht-capabilities.cc	/^HtCapabilities::IsSupportedMcs (uint8_t mcs) const$/;"	f	class:ns3::HtCapabilities
IsSupportedMcs	ht-operations.cc	/^HtOperations::IsSupportedMcs (uint8_t mcs)$/;"	f	class:ns3::HtOperations
IsSupportedMcs	vht-capabilities.cc	/^VhtCapabilities::IsSupportedMcs (uint8_t mcs, uint8_t nss) const$/;"	f	class:ns3::VhtCapabilities
IsSupportedRate	supported-rates.cc	/^SupportedRates::IsSupportedRate (uint32_t bs) const$/;"	f	class:ns3::SupportedRates
IsSupportedRxMcs	vht-capabilities.cc	/^VhtCapabilities::IsSupportedRxMcs (uint8_t mcs) const$/;"	f	class:ns3::VhtCapabilities
IsSupportedTxMcs	vht-capabilities.cc	/^VhtCapabilities::IsSupportedTxMcs (uint8_t mcs) const$/;"	f	class:ns3::VhtCapabilities
IsToDs	wifi-mac-header.cc	/^WifiMacHeader::IsToDs (void) const$/;"	f	class:ns3::WifiMacHeader
IsUnsuccessful	originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::IsUnsuccessful (void) const$/;"	f	class:ns3::OriginatorBlockAckAgreement
IsValidMcs	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::IsValidMcs (Ptr<WifiPhy> phy, uint8_t streams, uint32_t chWidth, WifiMode mode)$/;"	f	class:ns3::MinstrelHtWifiManager
IsValidTxVector	wifi-phy.cc	/^WifiPhy::IsValidTxVector (WifiTxVector txVector)$/;"	f	class:ns3::WifiPhy
IsWaitAssocResp	sta-wifi-mac.cc	/^StaWifiMac::IsWaitAssocResp (void) const$/;"	f	class:ns3::StaWifiMac
IsWaitAssocTxOk	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::IsWaitAssocTxOk (Mac48Address address) const$/;"	f	class:ns3::WifiRemoteStationManager
Item	block-ack-manager.cc	/^BlockAckManager::Item::Item ()$/;"	f	class:ns3::BlockAckManager::Item
Item	block-ack-manager.cc	/^BlockAckManager::Item::Item (Ptr<const Packet> packet, const WifiMacHeader &hdr, Time tStamp)$/;"	f	class:ns3::BlockAckManager::Item
Item	block-ack-manager.h	/^  struct Item$/;"	s	class:ns3::BlockAckManager
Item	mac-low.h	/^  } Item;$/;"	t	class:ns3::MacLow	typeref:struct:ns3::MacLow::__anon3
Item	wifi-mac-queue.cc	/^WifiMacQueue::Item::Item (Ptr<const Packet> packet,$/;"	f	class:ns3::WifiMacQueue::Item
Item	wifi-mac-queue.h	/^  struct Item$/;"	s	class:ns3::WifiMacQueue
Iterator	wifi-information-element-vector.h	/^  typedef std::vector<Ptr<WifiInformationElement> >::iterator Iterator;$/;"	t	class:ns3::WifiInformationElementVector
LAST_MPDU_IN_AGGREGATE	wifi-phy.h	/^  LAST_MPDU_IN_AGGREGATE$/;"	e	enum:ns3::mpduType
LINK_METRIC_REPORT	mgt-headers.h	/^    LINK_METRIC_REPORT = 0,               \/\/Action Value:0 in Category 13: Mesh$/;"	e	enum:ns3::WifiActionHeader::MeshActionValue
LinearWifiTxCurrentModel	wifi-tx-current-model.cc	/^LinearWifiTxCurrentModel::LinearWifiTxCurrentModel ()$/;"	f	class:ns3::LinearWifiTxCurrentModel
LinearWifiTxCurrentModel	wifi-tx-current-model.h	/^class LinearWifiTxCurrentModel : public WifiTxCurrentModel$/;"	c	namespace:ns3
LinkDown	wifi-net-device.cc	/^WifiNetDevice::LinkDown (void)$/;"	f	class:ns3::WifiNetDevice
LinkUp	wifi-net-device.cc	/^WifiNetDevice::LinkUp (void)$/;"	f	class:ns3::WifiNetDevice
Listeners	wifi-phy-state-helper.h	/^  typedef std::vector<WifiPhyListener *> Listeners;$/;"	t	class:ns3::WifiPhyStateHelper
ListenersI	wifi-phy-state-helper.h	/^  typedef std::vector<WifiPhyListener *>::iterator ListenersI;$/;"	t	class:ns3::WifiPhyStateHelper
Log2	yans-error-rate-model.cc	/^YansErrorRateModel::Log2 (double val) const$/;"	f	class:ns3::YansErrorRateModel
LogPreviousIdleAndCcaBusyStates	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::LogPreviousIdleAndCcaBusyStates (void)$/;"	f	class:ns3::WifiPhyStateHelper
Lookup	mac-rx-middle.cc	/^MacRxMiddle::Lookup (const WifiMacHeader *hdr)$/;"	f	class:ns3::MacRxMiddle
Lookup	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::Lookup (Mac48Address address, const WifiMacHeader *header) const$/;"	f	class:ns3::WifiRemoteStationManager
Lookup	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::Lookup (Mac48Address address, uint8_t tid) const$/;"	f	class:ns3::WifiRemoteStationManager
LookupState	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::LookupState (Mac48Address address) const$/;"	f	class:ns3::WifiRemoteStationManager
Low	aparf-wifi-manager.h	/^    Low,$/;"	e	enum:ns3::AparfWifiManager::State
Low	dca-txop.cc	/^DcaTxop::Low (void)$/;"	f	class:ns3::DcaTxop
Low	edca-txop-n.cc	/^EdcaTxopN::Low (void)$/;"	f	class:ns3::EdcaTxopN
LowDcfListener	dcf-manager.cc	/^  LowDcfListener (ns3::DcfManager *dcf)$/;"	f	class:ns3::LowDcfListener
LowDcfListener	dcf-manager.cc	/^class LowDcfListener : public ns3::MacLowDcfListener$/;"	c	namespace:ns3	file:
MAC_LOW_H	mac-low.h	23;"	d
MAC_RX_MIDDLE_H	mac-rx-middle.h	22;"	d
MAC_TX_MIDDLE_H	mac-tx-middle.h	24;"	d
MAX_HT_GROUP_RATES	minstrel-ht-wifi-manager.h	/^static const uint8_t MAX_HT_GROUP_RATES = 8;     \/\/!< Number of rates (or MCS) per HT group.$/;"	m	namespace:ns3
MAX_HT_STREAM_GROUPS	minstrel-ht-wifi-manager.h	/^static const uint8_t MAX_HT_STREAM_GROUPS = 4;   \/\/!< Maximal number of groups per stream in HT (2 possible channel widths and 2 possible SGI configurations).$/;"	m	namespace:ns3
MAX_HT_WIDTH	minstrel-ht-wifi-manager.h	/^static const uint8_t MAX_HT_WIDTH = 40;          \/\/!< Maximal channel width.$/;"	m	namespace:ns3
MAX_MSDU_SIZE	wifi-net-device.h	/^  static const uint16_t MAX_MSDU_SIZE = 2304;$/;"	m	class:ns3::WifiNetDevice
MAX_SUPPORTED_MCS	ht-capabilities.h	34;"	d
MAX_SUPPORTED_MCS	ht-operations.h	33;"	d
MAX_SUPPORTED_RATES	supported-rates.h	/^  static const uint8_t MAX_SUPPORTED_RATES = 32;$/;"	m	class:ns3::SupportedRates
MAX_SUPPORTED_STREAMS	minstrel-ht-wifi-manager.h	/^static const uint8_t MAX_SUPPORTED_STREAMS = 4;  \/\/!< Maximal number of streams supported by the phy layer.$/;"	m	namespace:ns3
MAX_VHT_GROUP_RATES	minstrel-ht-wifi-manager.h	/^static const uint8_t MAX_VHT_GROUP_RATES = 10;   \/\/!< Number of rates (or MCS) per VHT group.$/;"	m	namespace:ns3
MAX_VHT_STREAM_GROUPS	minstrel-ht-wifi-manager.h	/^static const uint8_t MAX_VHT_STREAM_GROUPS = 8;  \/\/!< Maximal number of groups per stream in VHT (4 possible channel widths and 2 possible SGI configurations).$/;"	m	namespace:ns3
MAX_VHT_WIDTH	minstrel-ht-wifi-manager.h	/^static const uint8_t MAX_VHT_WIDTH = 160;        \/\/!< Maximal channel width.$/;"	m	namespace:ns3
MDAOP_ADVERTISMENTS	mgt-headers.h	/^    MDAOP_ADVERTISMENTS = 7,              \/\/Action Value:7 in Category 13: Mesh (not used so far)$/;"	e	enum:ns3::WifiActionHeader::MeshActionValue
MDAOP_ADVERTISMENT_REQUEST	mgt-headers.h	/^    MDAOP_ADVERTISMENT_REQUEST = 6,       \/\/Action Value:6 in Category 13: Mesh MCCA-Advertisement-Request (not used so far)$/;"	e	enum:ns3::WifiActionHeader::MeshActionValue
MDAOP_SET_TEARDOWN	mgt-headers.h	/^    MDAOP_SET_TEARDOWN = 8,               \/\/Action Value:8 in Category 13: Mesh (not used so far)$/;"	e	enum:ns3::WifiActionHeader::MeshActionValue
MDA_SETUP_REPLY	mgt-headers.h	/^    MDA_SETUP_REPLY = 5,                  \/\/Action Value:5 in Category 13: Mesh MCCA-Setup-Reply (not used so far)$/;"	e	enum:ns3::WifiActionHeader::MeshActionValue
MDA_SETUP_REQUEST	mgt-headers.h	/^    MDA_SETUP_REQUEST = 4,                \/\/Action Value:4 in Category 13: Mesh MCCA-Setup-Request (not used so far)$/;"	e	enum:ns3::WifiActionHeader::MeshActionValue
MESH	edca-txop-n.h	/^  MESH,$/;"	e	enum:ns3::TypeOfStation
MESH	mgt-headers.h	/^    MESH = 13,                  \/\/Category: Mesh$/;"	e	enum:ns3::WifiActionHeader::CategoryValue
MGT_HEADERS_H	mgt-headers.h	24;"	d
MINSTREL_HT_WIFI_MANAGER_H	minstrel-ht-wifi-manager.h	27;"	d
MINSTREL_WIFI_MANAGER_H	minstrel-wifi-manager.h	23;"	d
MIXED_MODE_PROTECTION	ht-operations.h	/^  MIXED_MODE_PROTECTION$/;"	e	enum:ns3::HtProtectionType
MPDU_AGGREGATOR_H	mpdu-aggregator.h	22;"	d
MPDU_IN_AGGREGATE	wifi-phy.h	/^  MPDU_IN_AGGREGATE,$/;"	e	enum:ns3::mpduType
MPDU_STANDARD_AGGREGATOR_H	mpdu-standard-aggregator.h	22;"	d
MSDU_AGGREGATOR_H	msdu-aggregator.h	22;"	d
MSDU_STANDARD_AGGREGATOR_H	msdu-standard-aggregator.h	22;"	d
MULTIHOP	mgt-headers.h	/^    MULTIHOP = 14,              \/\/not used so far$/;"	e	enum:ns3::WifiActionHeader::CategoryValue
MULTI_TID_BLOCK_ACK	ctrl-headers.h	/^  MULTI_TID_BLOCK_ACK$/;"	e	enum:ns3::BlockAckType
MY_DEBUG	dcf-manager.cc	30;"	d	file:
MacLow	mac-low.cc	/^MacLow::MacLow ()$/;"	f	class:ns3::MacLow
MacLow	mac-low.h	/^class MacLow : public Object$/;"	c	namespace:ns3
MacLowAggregationCapableTransmissionListener	mac-low.cc	/^MacLowAggregationCapableTransmissionListener::MacLowAggregationCapableTransmissionListener ()$/;"	f	class:ns3::MacLowAggregationCapableTransmissionListener
MacLowAggregationCapableTransmissionListener	mac-low.h	/^class MacLowAggregationCapableTransmissionListener$/;"	c	namespace:ns3
MacLowDcfListener	mac-low.cc	/^MacLowDcfListener::MacLowDcfListener ()$/;"	f	class:ns3::MacLowDcfListener
MacLowDcfListener	mac-low.h	/^class MacLowDcfListener$/;"	c	namespace:ns3
MacLowRxCallback	mac-low.h	/^  typedef Callback<void, Ptr<Packet>, const WifiMacHeader*> MacLowRxCallback;$/;"	t	class:ns3::MacLow
MacLowTransmissionListener	mac-low.cc	/^MacLowTransmissionListener::MacLowTransmissionListener ()$/;"	f	class:ns3::MacLowTransmissionListener
MacLowTransmissionListener	mac-low.h	/^class MacLowTransmissionListener$/;"	c	namespace:ns3
MacLowTransmissionParameters	mac-low.cc	/^MacLowTransmissionParameters::MacLowTransmissionParameters ()$/;"	f	class:ns3::MacLowTransmissionParameters
MacLowTransmissionParameters	mac-low.h	/^class MacLowTransmissionParameters$/;"	c	namespace:ns3
MacRxMiddle	mac-rx-middle.cc	/^MacRxMiddle::MacRxMiddle ()$/;"	f	class:ns3::MacRxMiddle
MacRxMiddle	mac-rx-middle.h	/^class MacRxMiddle$/;"	c	namespace:ns3
MacState	sta-wifi-mac.h	/^  enum MacState$/;"	g	class:ns3::StaWifiMac
MacTxMiddle	mac-tx-middle.cc	/^MacTxMiddle::MacTxMiddle ()$/;"	f	class:ns3::MacTxMiddle
MacTxMiddle	mac-tx-middle.h	/^class MacTxMiddle$/;"	c	namespace:ns3
MapDestAddressForAggregation	edca-txop-n.cc	/^EdcaTxopN::MapDestAddressForAggregation (const WifiMacHeader &hdr)$/;"	f	class:ns3::EdcaTxopN
MapSrcAddressForAggregation	edca-txop-n.cc	/^EdcaTxopN::MapSrcAddressForAggregation (const WifiMacHeader &hdr)$/;"	f	class:ns3::EdcaTxopN
Max	aarf-wifi-manager.cc	27;"	d	file:
Max	aarfcd-wifi-manager.cc	31;"	d	file:
Max	minstrel-ht-wifi-manager.cc	53;"	d	file:
McsGroup	minstrel-ht-wifi-manager.h	/^struct McsGroup$/;"	s	namespace:ns3
McsGroupData	minstrel-ht-wifi-manager.h	/^typedef std::vector<struct GroupInfo> McsGroupData;$/;"	t	namespace:ns3
MeshActionValue	mgt-headers.h	/^  enum MeshActionValue$/;"	g	class:ns3::WifiActionHeader
MgtAddBaRequestHeader	mgt-headers.cc	/^MgtAddBaRequestHeader::MgtAddBaRequestHeader ()$/;"	f	class:ns3::MgtAddBaRequestHeader
MgtAddBaRequestHeader	mgt-headers.h	/^class MgtAddBaRequestHeader : public Header$/;"	c	namespace:ns3
MgtAddBaResponseHeader	mgt-headers.cc	/^MgtAddBaResponseHeader::MgtAddBaResponseHeader ()$/;"	f	class:ns3::MgtAddBaResponseHeader
MgtAddBaResponseHeader	mgt-headers.h	/^class MgtAddBaResponseHeader : public Header$/;"	c	namespace:ns3
MgtAssocRequestHeader	mgt-headers.cc	/^MgtAssocRequestHeader::MgtAssocRequestHeader ()$/;"	f	class:ns3::MgtAssocRequestHeader
MgtAssocRequestHeader	mgt-headers.h	/^class MgtAssocRequestHeader : public Header$/;"	c	namespace:ns3
MgtAssocResponseHeader	mgt-headers.cc	/^MgtAssocResponseHeader::MgtAssocResponseHeader ()$/;"	f	class:ns3::MgtAssocResponseHeader
MgtAssocResponseHeader	mgt-headers.h	/^class MgtAssocResponseHeader : public Header$/;"	c	namespace:ns3
MgtBeaconHeader	mgt-headers.h	/^class MgtBeaconHeader : public MgtProbeResponseHeader$/;"	c	namespace:ns3
MgtDelBaHeader	mgt-headers.cc	/^MgtDelBaHeader::MgtDelBaHeader ()$/;"	f	class:ns3::MgtDelBaHeader
MgtDelBaHeader	mgt-headers.h	/^class MgtDelBaHeader : public Header$/;"	c	namespace:ns3
MgtProbeRequestHeader	mgt-headers.h	/^class MgtProbeRequestHeader : public Header$/;"	c	namespace:ns3
MgtProbeResponseHeader	mgt-headers.cc	/^MgtProbeResponseHeader::MgtProbeResponseHeader ()$/;"	f	class:ns3::MgtProbeResponseHeader
MgtProbeResponseHeader	mgt-headers.h	/^class MgtProbeResponseHeader : public Header$/;"	c	namespace:ns3
Min	aarf-wifi-manager.cc	26;"	d	file:
Min	aarfcd-wifi-manager.cc	30;"	d	file:
Min	amrr-wifi-manager.cc	27;"	d	file:
Min	aparf-wifi-manager.cc	28;"	d	file:
Min	arf-wifi-manager.cc	26;"	d	file:
Min	cara-wifi-manager.cc	28;"	d	file:
Min	constant-rate-wifi-manager.cc	26;"	d	file:
Min	minstrel-ht-wifi-manager.cc	52;"	d	file:
Min	minstrel-wifi-manager.cc	44;"	d	file:
Min	onoe-wifi-manager.cc	26;"	d	file:
Min	parf-wifi-manager.cc	28;"	d	file:
Min	rraa-wifi-manager.cc	29;"	d	file:
MinstrelHtWifiManager	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::MinstrelHtWifiManager ()$/;"	f	class:ns3::MinstrelHtWifiManager
MinstrelHtWifiManager	minstrel-ht-wifi-manager.h	/^class MinstrelHtWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
MinstrelHtWifiRemoteStation	minstrel-ht-wifi-manager.cc	/^struct MinstrelHtWifiRemoteStation : MinstrelWifiRemoteStation$/;"	s	namespace:ns3	file:
MinstrelMcsGroups	minstrel-ht-wifi-manager.h	/^typedef std::vector<struct McsGroup> MinstrelMcsGroups;$/;"	t	namespace:ns3
MinstrelRate	minstrel-wifi-manager.h	/^typedef std::vector<struct RateInfo> MinstrelRate;$/;"	t	namespace:ns3
MinstrelWifiManager	minstrel-wifi-manager.cc	/^MinstrelWifiManager::MinstrelWifiManager ()$/;"	f	class:ns3::MinstrelWifiManager
MinstrelWifiManager	minstrel-wifi-manager.h	/^class MinstrelWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
MinstrelWifiRemoteStation	minstrel-wifi-manager.h	/^struct MinstrelWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3
MissedAck	dca-txop.cc	/^  virtual void MissedAck (void)$/;"	f	class:ns3::DcaTxop::TransmissionListener
MissedAck	dca-txop.cc	/^DcaTxop::MissedAck (void)$/;"	f	class:ns3::DcaTxop
MissedAck	edca-txop-n.cc	/^  virtual void MissedAck (void)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
MissedAck	edca-txop-n.cc	/^EdcaTxopN::MissedAck (void)$/;"	f	class:ns3::EdcaTxopN
MissedBeacons	sta-wifi-mac.cc	/^StaWifiMac::MissedBeacons (void)$/;"	f	class:ns3::StaWifiMac
MissedBlockAck	edca-txop-n.cc	/^  virtual void MissedBlockAck (uint32_t nMpdus)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
MissedBlockAck	edca-txop-n.cc	/^EdcaTxopN::MissedBlockAck (uint32_t nMpdus)$/;"	f	class:ns3::EdcaTxopN
MissedBlockAck	mac-low.cc	/^MacLowTransmissionListener::MissedBlockAck (uint32_t nMpdus)$/;"	f	class:ns3::MacLowTransmissionListener
MissedCts	dca-txop.cc	/^  virtual void MissedCts (void)$/;"	f	class:ns3::DcaTxop::TransmissionListener
MissedCts	dca-txop.cc	/^DcaTxop::MissedCts (void)$/;"	f	class:ns3::DcaTxop
MissedCts	edca-txop-n.cc	/^  virtual void MissedCts (void)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
MissedCts	edca-txop-n.cc	/^EdcaTxopN::MissedCts (void)$/;"	f	class:ns3::EdcaTxopN
MonitorSnifferRxCallback	wifi-phy.h	/^  typedef void (* MonitorSnifferRxCallback)(Ptr<const Packet> packet, uint16_t channelFreqMhz,$/;"	t	class:ns3::WifiPhy
MonitorSnifferTxCallback	wifi-phy.h	/^  typedef void (* MonitorSnifferTxCallback)(const Ptr<const Packet> packet, uint16_t channelFreqMhz,$/;"	t	class:ns3::WifiPhy
MostRecent	dcf-manager.cc	/^DcfManager::MostRecent (Time a, Time b) const$/;"	f	class:ns3::DcfManager
MostRecent	dcf-manager.cc	/^DcfManager::MostRecent (Time a, Time b, Time c) const$/;"	f	class:ns3::DcfManager
MostRecent	dcf-manager.cc	/^DcfManager::MostRecent (Time a, Time b, Time c, Time d) const$/;"	f	class:ns3::DcfManager
MostRecent	dcf-manager.cc	/^DcfManager::MostRecent (Time a, Time b, Time c, Time d, Time e, Time f) const$/;"	f	class:ns3::DcfManager
MostRecent	dcf-manager.cc	/^DcfManager::MostRecent (Time a, Time b, Time c, Time d, Time e, Time f, Time g) const$/;"	f	class:ns3::DcfManager
MpduAggregator	mpdu-aggregator.h	/^class MpduAggregator : public Object$/;"	c	namespace:ns3
MpduStandardAggregator	mpdu-standard-aggregator.cc	/^MpduStandardAggregator::MpduStandardAggregator ()$/;"	f	class:ns3::MpduStandardAggregator
MpduStandardAggregator	mpdu-standard-aggregator.h	/^class MpduStandardAggregator : public MpduAggregator$/;"	c	namespace:ns3
MsduAggregator	msdu-aggregator.h	/^class MsduAggregator : public Object$/;"	c	namespace:ns3
MsduStandardAggregator	msdu-standard-aggregator.cc	/^MsduStandardAggregator::MsduStandardAggregator ()$/;"	f	class:ns3::MsduStandardAggregator
MsduStandardAggregator	msdu-standard-aggregator.h	/^class MsduStandardAggregator : public MsduAggregator$/;"	c	namespace:ns3
MultihopActionValue	mgt-headers.h	/^  enum MultihopActionValue$/;"	g	class:ns3::WifiActionHeader
MustSendHtImmediateAck	ctrl-headers.cc	/^CtrlBAckRequestHeader::MustSendHtImmediateAck (void) const$/;"	f	class:ns3::CtrlBAckRequestHeader
MustSendHtImmediateAck	ctrl-headers.cc	/^CtrlBAckResponseHeader::MustSendHtImmediateAck (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
MustSendRts	mac-low.cc	/^MacLowTransmissionParameters::MustSendRts (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
MustWaitAck	mac-low.cc	/^MacLowTransmissionParameters::MustWaitAck (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
MustWaitBasicBlockAck	mac-low.cc	/^MacLowTransmissionParameters::MustWaitBasicBlockAck (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
MustWaitCompressedBlockAck	mac-low.cc	/^MacLowTransmissionParameters::MustWaitCompressedBlockAck (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
MustWaitFastAck	mac-low.cc	/^MacLowTransmissionParameters::MustWaitFastAck (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
MustWaitMultiTidBlockAck	mac-low.cc	/^MacLowTransmissionParameters::MustWaitMultiTidBlockAck (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
MustWaitNormalAck	mac-low.cc	/^MacLowTransmissionParameters::MustWaitNormalAck (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
MustWaitSuperFastAck	mac-low.cc	/^MacLowTransmissionParameters::MustWaitSuperFastAck (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
NIST_ERROR_RATE_MODEL_H	nist-error-rate-model.h	22;"	d
NON_MEMBER_PROTECTION	ht-operations.h	/^  NON_MEMBER_PROTECTION,$/;"	e	enum:ns3::HtProtectionType
NORMAL_ACK	wifi-mac-header.h	/^    NORMAL_ACK = 0,$/;"	e	enum:ns3::WifiMacHeader::QosAckPolicy
NORMAL_MPDU	wifi-phy.h	/^  NORMAL_MPDU = 0,$/;"	e	enum:ns3::mpduType
NO_ACK	wifi-mac-header.h	/^    NO_ACK = 1,$/;"	e	enum:ns3::WifiMacHeader::QosAckPolicy
NO_EXPLICIT_ACK	wifi-mac-header.h	/^    NO_EXPLICIT_ACK = 2,$/;"	e	enum:ns3::WifiMacHeader::QosAckPolicy
NO_PROTECTION	ht-operations.h	/^  NO_PROTECTION,$/;"	e	enum:ns3::HtProtectionType
NS_LOG_APPEND_CONTEXT	dca-txop.cc	37;"	d	file:
NS_LOG_APPEND_CONTEXT	dca-txop.cc	38;"	d	file:
NS_LOG_APPEND_CONTEXT	edca-txop-n.cc	39;"	d	file:
NS_LOG_APPEND_CONTEXT	edca-txop-n.cc	40;"	d	file:
NS_LOG_APPEND_CONTEXT	mac-low.cc	40;"	d	file:
NS_LOG_APPEND_CONTEXT	mac-low.cc	41;"	d	file:
NavCounterResetCtsMissed	mac-low.cc	/^MacLow::NavCounterResetCtsMissed (Time rtsEndRxTime)$/;"	f	class:ns3::MacLow
NavReset	dcf-manager.cc	/^  virtual void NavReset (Time duration)$/;"	f	class:ns3::LowDcfListener
NavStart	dcf-manager.cc	/^  virtual void NavStart (Time duration)$/;"	f	class:ns3::LowDcfListener
NeedBarRetransmission	block-ack-manager.cc	/^bool BlockAckManager::NeedBarRetransmission (uint8_t tid, uint16_t seqNumber, Mac48Address recipient)$/;"	f	class:ns3::BlockAckManager
NeedBarRetransmission	edca-txop-n.cc	/^EdcaTxopN::NeedBarRetransmission (void)$/;"	f	class:ns3::EdcaTxopN
NeedCtsToSelf	mac-low.cc	/^MacLow::NeedCtsToSelf (void)$/;"	f	class:ns3::MacLow
NeedCtsToSelf	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::NeedCtsToSelf (WifiTxVector txVector)$/;"	f	class:ns3::WifiRemoteStationManager
NeedDataRetransmission	dca-txop.cc	/^DcaTxop::NeedDataRetransmission (void)$/;"	f	class:ns3::DcaTxop
NeedDataRetransmission	edca-txop-n.cc	/^EdcaTxopN::NeedDataRetransmission (void)$/;"	f	class:ns3::EdcaTxopN
NeedDataRetransmission	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::NeedDataRetransmission (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
NeedFragmentation	dca-txop.cc	/^DcaTxop::NeedFragmentation (void)$/;"	f	class:ns3::DcaTxop
NeedFragmentation	edca-txop-n.cc	/^EdcaTxopN::NeedFragmentation (void) const$/;"	f	class:ns3::EdcaTxopN
NeedFragmentation	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::NeedFragmentation (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
NeedRts	mac-low.cc	/^MacLow::NeedRts (void)$/;"	f	class:ns3::MacLow
NeedRts	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::NeedRts (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
NeedRtsRetransmission	dca-txop.cc	/^DcaTxop::NeedRtsRetransmission (void)$/;"	f	class:ns3::DcaTxop
NeedRtsRetransmission	edca-txop-n.cc	/^EdcaTxopN::NeedRtsRetransmission (void)$/;"	f	class:ns3::EdcaTxopN
NeedRtsRetransmission	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::NeedRtsRetransmission (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
NeedsAccess	dca-txop.cc	/^DcaTxop::NeedsAccess (void) const$/;"	f	class:ns3::DcaTxop
NeedsAccess	edca-txop-n.cc	/^EdcaTxopN::NeedsAccess (void) const$/;"	f	class:ns3::EdcaTxopN
NeedsArp	wifi-net-device.cc	/^WifiNetDevice::NeedsArp (void) const$/;"	f	class:ns3::WifiNetDevice
NextFragment	dca-txop.cc	/^DcaTxop::NextFragment (void)$/;"	f	class:ns3::DcaTxop
NextFragment	edca-txop-n.cc	/^EdcaTxopN::NextFragment (void)$/;"	f	class:ns3::EdcaTxopN
NiChange	interference-helper.cc	/^InterferenceHelper::NiChange::NiChange (Time time, double delta)$/;"	f	class:ns3::InterferenceHelper::NiChange
NiChange	interference-helper.h	/^  class NiChange$/;"	c	class:ns3::InterferenceHelper
NiChanges	interference-helper.h	/^  typedef std::vector <NiChange> NiChanges;$/;"	t	class:ns3::InterferenceHelper
NistErrorRateModel	nist-error-rate-model.cc	/^NistErrorRateModel::NistErrorRateModel ()$/;"	f	class:ns3::NistErrorRateModel
NistErrorRateModel	nist-error-rate-model.h	/^class NistErrorRateModel : public ErrorRateModel$/;"	c	namespace:ns3
NormalAckTimeout	mac-low.cc	/^MacLow::NormalAckTimeout (void)$/;"	f	class:ns3::MacLow
NotifyAccessGranted	dca-txop.cc	/^DcaTxop::NotifyAccessGranted (void)$/;"	f	class:ns3::DcaTxop
NotifyAccessGranted	dcf-manager.cc	/^DcfState::NotifyAccessGranted (void)$/;"	f	class:ns3::DcfState
NotifyAccessGranted	edca-txop-n.cc	/^EdcaTxopN::NotifyAccessGranted (void)$/;"	f	class:ns3::EdcaTxopN
NotifyAccessRequested	dcf-manager.cc	/^DcfState::NotifyAccessRequested (void)$/;"	f	class:ns3::DcfState
NotifyAckTimeoutResetNow	dcf-manager.cc	/^DcfManager::NotifyAckTimeoutResetNow ()$/;"	f	class:ns3::DcfManager
NotifyAckTimeoutResetNow	mac-low.cc	/^MacLow::NotifyAckTimeoutResetNow ()$/;"	f	class:ns3::MacLow
NotifyAckTimeoutStartNow	dcf-manager.cc	/^DcfManager::NotifyAckTimeoutStartNow (Time duration)$/;"	f	class:ns3::DcfManager
NotifyAckTimeoutStartNow	mac-low.cc	/^MacLow::NotifyAckTimeoutStartNow (Time duration)$/;"	f	class:ns3::MacLow
NotifyAgreementEstablished	block-ack-manager.cc	/^BlockAckManager::NotifyAgreementEstablished (Mac48Address recipient, uint8_t tid, uint16_t startingSeq)$/;"	f	class:ns3::BlockAckManager
NotifyAgreementUnsuccessful	block-ack-manager.cc	/^BlockAckManager::NotifyAgreementUnsuccessful (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::BlockAckManager
NotifyChannelSwitching	dca-txop.cc	/^DcaTxop::NotifyChannelSwitching (void)$/;"	f	class:ns3::DcaTxop
NotifyChannelSwitching	dcf-manager.cc	/^DcfState::NotifyChannelSwitching (void)$/;"	f	class:ns3::DcfState
NotifyChannelSwitching	edca-txop-n.cc	/^EdcaTxopN::NotifyChannelSwitching (void)$/;"	f	class:ns3::EdcaTxopN
NotifyCollision	dca-txop.cc	/^DcaTxop::NotifyCollision (void)$/;"	f	class:ns3::DcaTxop
NotifyCollision	dcf-manager.cc	/^DcfState::NotifyCollision (void)$/;"	f	class:ns3::DcfState
NotifyCollision	edca-txop-n.cc	/^EdcaTxopN::NotifyCollision (void)$/;"	f	class:ns3::EdcaTxopN
NotifyCtsTimeoutResetNow	dcf-manager.cc	/^DcfManager::NotifyCtsTimeoutResetNow ()$/;"	f	class:ns3::DcfManager
NotifyCtsTimeoutResetNow	mac-low.cc	/^MacLow::NotifyCtsTimeoutResetNow ()$/;"	f	class:ns3::MacLow
NotifyCtsTimeoutStartNow	dcf-manager.cc	/^DcfManager::NotifyCtsTimeoutStartNow (Time duration)$/;"	f	class:ns3::DcfManager
NotifyCtsTimeoutStartNow	mac-low.cc	/^MacLow::NotifyCtsTimeoutStartNow (Time duration)$/;"	f	class:ns3::MacLow
NotifyGotBlockAck	block-ack-manager.cc	/^BlockAckManager::NotifyGotBlockAck (const CtrlBAckResponseHeader *blockAck, Mac48Address recipient, double rxSnr, WifiMode txMode, double dataSnr)$/;"	f	class:ns3::BlockAckManager
NotifyInternalCollision	dca-txop.cc	/^DcaTxop::NotifyInternalCollision (void)$/;"	f	class:ns3::DcaTxop
NotifyInternalCollision	dcf-manager.cc	/^DcfState::NotifyInternalCollision (void)$/;"	f	class:ns3::DcfState
NotifyInternalCollision	edca-txop-n.cc	/^void EdcaTxopN::NotifyInternalCollision (void)$/;"	f	class:ns3::EdcaTxopN
NotifyMaybeCcaBusyStart	dcf-manager.cc	/^  virtual void NotifyMaybeCcaBusyStart (Time duration)$/;"	f	class:ns3::PhyListener
NotifyMaybeCcaBusyStart	mac-low.cc	/^  virtual void NotifyMaybeCcaBusyStart (Time duration)$/;"	f	class:ns3::PhyMacLowListener
NotifyMaybeCcaBusyStart	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::NotifyMaybeCcaBusyStart (Time duration)$/;"	f	class:ns3::WifiPhyStateHelper
NotifyMaybeCcaBusyStart	wifi-radio-energy-model.cc	/^WifiRadioEnergyModelPhyListener::NotifyMaybeCcaBusyStart (Time duration)$/;"	f	class:ns3::WifiRadioEnergyModelPhyListener
NotifyMaybeCcaBusyStartNow	dcf-manager.cc	/^DcfManager::NotifyMaybeCcaBusyStartNow (Time duration)$/;"	f	class:ns3::DcfManager
NotifyMonitorSniffRx	wifi-phy.cc	/^WifiPhy::NotifyMonitorSniffRx (Ptr<const Packet> packet, uint16_t channelFreqMhz, uint16_t channelNumber, uint32_t rate, WifiPreamble preamble, WifiTxVector txVector, struct mpduInfo aMpdu, struct signalNoiseDbm signalNoise)$/;"	f	class:ns3::WifiPhy
NotifyMonitorSniffTx	wifi-phy.cc	/^WifiPhy::NotifyMonitorSniffTx (Ptr<const Packet> packet, uint16_t channelFreqMhz, uint16_t channelNumber, uint32_t rate, WifiPreamble preamble, WifiTxVector txVector, struct mpduInfo aMpdu)$/;"	f	class:ns3::WifiPhy
NotifyMpduTransmission	block-ack-manager.cc	/^BlockAckManager::NotifyMpduTransmission (Mac48Address recipient, uint8_t tid, uint16_t nextSeqNumber, enum WifiMacHeader::QosAckPolicy policy)$/;"	f	class:ns3::BlockAckManager
NotifyMpduTransmission	originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::NotifyMpduTransmission (uint16_t nextSeqNumber)$/;"	f	class:ns3::OriginatorBlockAckAgreement
NotifyNav	mac-low.cc	/^MacLow::NotifyNav (Ptr<const Packet> packet,const WifiMacHeader &hdr, WifiPreamble preamble)$/;"	f	class:ns3::MacLow
NotifyNavResetNow	dcf-manager.cc	/^DcfManager::NotifyNavResetNow (Time duration)$/;"	f	class:ns3::DcfManager
NotifyNavStartNow	dcf-manager.cc	/^DcfManager::NotifyNavStartNow (Time duration)$/;"	f	class:ns3::DcfManager
NotifyPromiscRx	wifi-mac.cc	/^WifiMac::NotifyPromiscRx (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiMac
NotifyRx	wifi-mac.cc	/^WifiMac::NotifyRx (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiMac
NotifyRxBegin	wifi-phy.cc	/^WifiPhy::NotifyRxBegin (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiPhy
NotifyRxDrop	wifi-mac.cc	/^WifiMac::NotifyRxDrop (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiMac
NotifyRxDrop	wifi-phy.cc	/^WifiPhy::NotifyRxDrop (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiPhy
NotifyRxEnd	interference-helper.cc	/^InterferenceHelper::NotifyRxEnd ()$/;"	f	class:ns3::InterferenceHelper
NotifyRxEnd	wifi-phy.cc	/^WifiPhy::NotifyRxEnd (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiPhy
NotifyRxEndError	dcf-manager.cc	/^  virtual void NotifyRxEndError (void)$/;"	f	class:ns3::PhyListener
NotifyRxEndError	mac-low.cc	/^  virtual void NotifyRxEndError (void)$/;"	f	class:ns3::PhyMacLowListener
NotifyRxEndError	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::NotifyRxEndError (void)$/;"	f	class:ns3::WifiPhyStateHelper
NotifyRxEndError	wifi-radio-energy-model.cc	/^WifiRadioEnergyModelPhyListener::NotifyRxEndError (void)$/;"	f	class:ns3::WifiRadioEnergyModelPhyListener
NotifyRxEndErrorNow	dcf-manager.cc	/^DcfManager::NotifyRxEndErrorNow (void)$/;"	f	class:ns3::DcfManager
NotifyRxEndOk	dcf-manager.cc	/^  virtual void NotifyRxEndOk (void)$/;"	f	class:ns3::PhyListener
NotifyRxEndOk	mac-low.cc	/^  virtual void NotifyRxEndOk (void)$/;"	f	class:ns3::PhyMacLowListener
NotifyRxEndOk	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::NotifyRxEndOk (void)$/;"	f	class:ns3::WifiPhyStateHelper
NotifyRxEndOk	wifi-radio-energy-model.cc	/^WifiRadioEnergyModelPhyListener::NotifyRxEndOk (void)$/;"	f	class:ns3::WifiRadioEnergyModelPhyListener
NotifyRxEndOkNow	dcf-manager.cc	/^DcfManager::NotifyRxEndOkNow (void)$/;"	f	class:ns3::DcfManager
NotifyRxStart	dcf-manager.cc	/^  virtual void NotifyRxStart (Time duration)$/;"	f	class:ns3::PhyListener
NotifyRxStart	interference-helper.cc	/^InterferenceHelper::NotifyRxStart ()$/;"	f	class:ns3::InterferenceHelper
NotifyRxStart	mac-low.cc	/^  virtual void NotifyRxStart (Time duration)$/;"	f	class:ns3::PhyMacLowListener
NotifyRxStart	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::NotifyRxStart (Time duration)$/;"	f	class:ns3::WifiPhyStateHelper
NotifyRxStart	wifi-radio-energy-model.cc	/^WifiRadioEnergyModelPhyListener::NotifyRxStart (Time duration)$/;"	f	class:ns3::WifiRadioEnergyModelPhyListener
NotifyRxStartNow	dcf-manager.cc	/^DcfManager::NotifyRxStartNow (Time duration)$/;"	f	class:ns3::DcfManager
NotifySleep	dca-txop.cc	/^DcaTxop::NotifySleep (void)$/;"	f	class:ns3::DcaTxop
NotifySleep	dcf-manager.cc	/^  virtual void NotifySleep (void)$/;"	f	class:ns3::PhyListener
NotifySleep	dcf-manager.cc	/^DcfState::NotifySleep (void)$/;"	f	class:ns3::DcfState
NotifySleep	edca-txop-n.cc	/^EdcaTxopN::NotifySleep (void)$/;"	f	class:ns3::EdcaTxopN
NotifySleep	mac-low.cc	/^  virtual void NotifySleep (void)$/;"	f	class:ns3::PhyMacLowListener
NotifySleep	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::NotifySleep (void)$/;"	f	class:ns3::WifiPhyStateHelper
NotifySleep	wifi-radio-energy-model.cc	/^WifiRadioEnergyModelPhyListener::NotifySleep (void)$/;"	f	class:ns3::WifiRadioEnergyModelPhyListener
NotifySleepNow	dcf-manager.cc	/^DcfManager::NotifySleepNow (void)$/;"	f	class:ns3::DcfManager
NotifySleepNow	mac-low.cc	/^MacLow::NotifySleepNow (void)$/;"	f	class:ns3::MacLow
NotifySwitchingStart	dcf-manager.cc	/^  virtual void NotifySwitchingStart (Time duration)$/;"	f	class:ns3::PhyListener
NotifySwitchingStart	mac-low.cc	/^  virtual void NotifySwitchingStart (Time duration)$/;"	f	class:ns3::PhyMacLowListener
NotifySwitchingStart	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::NotifySwitchingStart (Time duration)$/;"	f	class:ns3::WifiPhyStateHelper
NotifySwitchingStart	wifi-radio-energy-model.cc	/^WifiRadioEnergyModelPhyListener::NotifySwitchingStart (Time duration)$/;"	f	class:ns3::WifiRadioEnergyModelPhyListener
NotifySwitchingStartNow	dcf-manager.cc	/^DcfManager::NotifySwitchingStartNow (Time duration)$/;"	f	class:ns3::DcfManager
NotifySwitchingStartNow	mac-low.cc	/^MacLow::NotifySwitchingStartNow (Time duration)$/;"	f	class:ns3::MacLow
NotifyTx	wifi-mac.cc	/^WifiMac::NotifyTx (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiMac
NotifyTxBegin	wifi-phy.cc	/^WifiPhy::NotifyTxBegin (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiPhy
NotifyTxDrop	wifi-mac.cc	/^WifiMac::NotifyTxDrop (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiMac
NotifyTxDrop	wifi-phy.cc	/^WifiPhy::NotifyTxDrop (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiPhy
NotifyTxEnd	wifi-phy.cc	/^WifiPhy::NotifyTxEnd (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiPhy
NotifyTxFailed	wifi-remote-station-manager.cc	/^WifiRemoteStationInfo::NotifyTxFailed ()$/;"	f	class:ns3::WifiRemoteStationInfo
NotifyTxStart	dcf-manager.cc	/^  virtual void NotifyTxStart (Time duration, double txPowerDbm)$/;"	f	class:ns3::PhyListener
NotifyTxStart	mac-low.cc	/^  virtual void NotifyTxStart (Time duration, double txPowerDbm)$/;"	f	class:ns3::PhyMacLowListener
NotifyTxStart	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::NotifyTxStart (Time duration, double txPowerDbm)$/;"	f	class:ns3::WifiPhyStateHelper
NotifyTxStart	wifi-radio-energy-model.cc	/^WifiRadioEnergyModelPhyListener::NotifyTxStart (Time duration, double txPowerDbm)$/;"	f	class:ns3::WifiRadioEnergyModelPhyListener
NotifyTxStartNow	dcf-manager.cc	/^DcfManager::NotifyTxStartNow (Time duration)$/;"	f	class:ns3::DcfManager
NotifyTxSuccess	wifi-remote-station-manager.cc	/^WifiRemoteStationInfo::NotifyTxSuccess (uint32_t retryCounter)$/;"	f	class:ns3::WifiRemoteStationInfo
NotifyWakeUp	dca-txop.cc	/^DcaTxop::NotifyWakeUp (void)$/;"	f	class:ns3::DcaTxop
NotifyWakeUp	dcf-manager.cc	/^DcfState::NotifyWakeUp (void)$/;"	f	class:ns3::DcfState
NotifyWakeUp	edca-txop-n.cc	/^EdcaTxopN::NotifyWakeUp (void)$/;"	f	class:ns3::EdcaTxopN
NotifyWakeup	dcf-manager.cc	/^  virtual void NotifyWakeup (void)$/;"	f	class:ns3::PhyListener
NotifyWakeup	mac-low.cc	/^  virtual void NotifyWakeup (void)$/;"	f	class:ns3::PhyMacLowListener
NotifyWakeup	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::NotifyWakeup (void)$/;"	f	class:ns3::WifiPhyStateHelper
NotifyWakeup	wifi-radio-energy-model.cc	/^WifiRadioEnergyModelPhyListener::NotifyWakeup(void)$/;"	f	class:ns3::WifiRadioEnergyModelPhyListener
NotifyWakeupNow	dcf-manager.cc	/^DcfManager::NotifyWakeupNow (void)$/;"	f	class:ns3::DcfManager
OCB	edca-txop-n.h	/^  OCB$/;"	e	enum:ns3::TypeOfStation
ONOE_WIFI_MANAGER_H	onoe-wifi-manager.h	22;"	d
ORIGINATOR_BLOCK_ACK_AGREEMENT_H	originator-block-ack-agreement.h	22;"	d
OnoeWifiManager	onoe-wifi-manager.cc	/^OnoeWifiManager::OnoeWifiManager ()$/;"	f	class:ns3::OnoeWifiManager
OnoeWifiManager	onoe-wifi-manager.h	/^class OnoeWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
OnoeWifiRemoteStation	onoe-wifi-manager.cc	/^struct OnoeWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
OriginatorBlockAckAgreement	originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::OriginatorBlockAckAgreement ()$/;"	f	class:ns3::OriginatorBlockAckAgreement
OriginatorBlockAckAgreement	originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::OriginatorBlockAckAgreement (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::OriginatorBlockAckAgreement
OriginatorBlockAckAgreement	originator-block-ack-agreement.h	/^class OriginatorBlockAckAgreement : public BlockAckAgreement$/;"	c	namespace:ns3
OriginatorRxStatus	mac-rx-middle.cc	/^  OriginatorRxStatus ()$/;"	f	class:ns3::OriginatorRxStatus
OriginatorRxStatus	mac-rx-middle.cc	/^class OriginatorRxStatus$/;"	c	namespace:ns3	file:
Originators	mac-rx-middle.h	/^  typedef std::map <Mac48Address, OriginatorRxStatus *, std::less<Mac48Address> > Originators;$/;"	t	class:ns3::MacRxMiddle
OriginatorsI	mac-rx-middle.h	/^  typedef std::map <Mac48Address, OriginatorRxStatus *, std::less<Mac48Address> >::iterator OriginatorsI;$/;"	t	class:ns3::MacRxMiddle
PARF_WIFI_MANAGER_H	parf-wifi-manager.h	22;"	d
PATH_SELECTION	mgt-headers.h	/^    PATH_SELECTION = 1,                   \/\/Action Value:1 in Category 13: Mesh$/;"	e	enum:ns3::WifiActionHeader::MeshActionValue
PEER_LINK_CLOSE	mgt-headers.h	/^    PEER_LINK_CLOSE = 3,        \/\/Mesh Peering Close$/;"	e	enum:ns3::WifiActionHeader::SelfProtectedActionValue
PEER_LINK_CONFIRM	mgt-headers.h	/^    PEER_LINK_CONFIRM = 2,      \/\/Mesh Peering Confirm$/;"	e	enum:ns3::WifiActionHeader::SelfProtectedActionValue
PEER_LINK_OPEN	mgt-headers.h	/^    PEER_LINK_OPEN = 1,         \/\/Mesh Peering Open$/;"	e	enum:ns3::WifiActionHeader::SelfProtectedActionValue
PENDING	originator-block-ack-agreement.h	/^    PENDING,$/;"	e	enum:ns3::OriginatorBlockAckAgreement::State
PIEComparator	wifi-information-element-vector.cc	/^struct PIEComparator$/;"	s	namespace:ns3::__anon5	file:
PORTAL_ANNOUNCEMENT	mgt-headers.h	/^    PORTAL_ANNOUNCEMENT = 2,              \/\/Action Value:2 in Category 13: Mesh$/;"	e	enum:ns3::WifiActionHeader::MeshActionValue
PROXY_UPDATE	mgt-headers.h	/^    PROXY_UPDATE = 0,                   \/\/not used so far$/;"	e	enum:ns3::WifiActionHeader::MultihopActionValue
PROXY_UPDATE_CONFIRMATION	mgt-headers.h	/^    PROXY_UPDATE_CONFIRMATION = 1,      \/\/not used so far$/;"	e	enum:ns3::WifiActionHeader::MultihopActionValue
PacketQueue	block-ack-manager.h	/^  typedef std::list<Item> PacketQueue;$/;"	t	class:ns3::BlockAckManager
PacketQueue	wifi-mac-queue.h	/^  typedef std::list<struct Item> PacketQueue;$/;"	t	class:ns3::WifiMacQueue
PacketQueueCI	block-ack-manager.h	/^  typedef std::list<Item>::const_iterator PacketQueueCI;$/;"	t	class:ns3::BlockAckManager
PacketQueueI	block-ack-manager.h	/^  typedef std::list<Item>::iterator PacketQueueI;$/;"	t	class:ns3::BlockAckManager
PacketQueueI	wifi-mac-queue.h	/^  typedef std::list<struct Item>::iterator PacketQueueI;$/;"	t	class:ns3::WifiMacQueue
PacketQueueRI	wifi-mac-queue.h	/^  typedef std::list<struct Item>::reverse_iterator PacketQueueRI;$/;"	t	class:ns3::WifiMacQueue
Parameters	yans-wifi-channel.h	/^struct Parameters$/;"	s	namespace:ns3
ParfWifiManager	parf-wifi-manager.cc	/^ParfWifiManager::ParfWifiManager ()$/;"	f	class:ns3::ParfWifiManager
ParfWifiManager	parf-wifi-manager.h	/^class ParfWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
ParfWifiRemoteStation	parf-wifi-manager.cc	/^struct ParfWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
Peek	wifi-mac-queue.cc	/^WifiMacQueue::Peek (WifiMacHeader *hdr)$/;"	f	class:ns3::WifiMacQueue
PeekByTidAndAddress	wifi-mac-queue.cc	/^WifiMacQueue::PeekByTidAndAddress (WifiMacHeader *hdr, uint8_t tid,$/;"	f	class:ns3::WifiMacQueue
PeekFirstAvailable	wifi-mac-queue.cc	/^WifiMacQueue::PeekFirstAvailable (WifiMacHeader *hdr, Time &timestamp,$/;"	f	class:ns3::WifiMacQueue
PeekNextPacket	block-ack-manager.cc	/^BlockAckManager::PeekNextPacket (WifiMacHeader &hdr, Mac48Address recipient, uint8_t tid, Time *tstamp)$/;"	f	class:ns3::BlockAckManager
PeekNextPacketInBaQueue	edca-txop-n.cc	/^  virtual Ptr<const Packet> PeekNextPacketInBaQueue (WifiMacHeader &header, Mac48Address recipient, uint8_t tid, Time *timestamp)$/;"	f	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener
PeekNextPacketInBaQueue	mac-low.cc	/^MacLowAggregationCapableTransmissionListener::PeekNextPacketInBaQueue (WifiMacHeader &header, Mac48Address recipient, uint8_t tid, Time *timestamp)$/;"	f	class:ns3::MacLowAggregationCapableTransmissionListener
PeekNextRetransmitPacket	edca-txop-n.cc	/^EdcaTxopN::PeekNextRetransmitPacket (WifiMacHeader &header,Mac48Address recipient, uint8_t tid, Time *timestamp)$/;"	f	class:ns3::EdcaTxopN
PeekNextSequenceNumberfor	edca-txop-n.cc	/^  virtual uint16_t PeekNextSequenceNumberfor (WifiMacHeader *hdr)$/;"	f	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener
PeekNextSequenceNumberfor	edca-txop-n.cc	/^uint16_t EdcaTxopN::PeekNextSequenceNumberfor (WifiMacHeader *hdr)$/;"	f	class:ns3::EdcaTxopN
PeekNextSequenceNumberfor	mac-low.cc	/^MacLowAggregationCapableTransmissionListener::PeekNextSequenceNumberfor (WifiMacHeader *hdr)$/;"	f	class:ns3::MacLowAggregationCapableTransmissionListener
PeekNextSequenceNumberfor	mac-tx-middle.cc	/^MacTxMiddle::PeekNextSequenceNumberfor (const WifiMacHeader *hdr)$/;"	f	class:ns3::MacTxMiddle
PeekString	ssid.cc	/^Ssid::PeekString (void) const$/;"	f	class:ns3::Ssid
PerformMsduAggregation	mac-low.cc	/^MacLow::PerformMsduAggregation (Ptr<const Packet> packet, WifiMacHeader *hdr, Time *tstamp, Ptr<Packet> currentAmpduPacket, uint16_t blockAckSize)$/;"	f	class:ns3::MacLow
PhyList	yans-wifi-channel.h	/^  typedef std::vector<Ptr<YansWifiPhy> > PhyList;$/;"	t	class:ns3::YansWifiChannel
PhyListener	dcf-manager.cc	/^  PhyListener (ns3::DcfManager *dcf)$/;"	f	class:ns3::PhyListener
PhyListener	dcf-manager.cc	/^class PhyListener : public ns3::WifiPhyListener$/;"	c	namespace:ns3	file:
PhyMacLowListener	mac-low.cc	/^  PhyMacLowListener (ns3::MacLow *macLow)$/;"	f	class:ns3::PhyMacLowListener
PhyMacLowListener	mac-low.cc	/^class PhyMacLowListener : public ns3::WifiPhyListener$/;"	c	namespace:ns3	file:
PowerChangeTracedCallback	wifi-remote-station-manager.h	/^  typedef void (*PowerChangeTracedCallback)(uint8_t power, Mac48Address remoteAddress);$/;"	t	class:ns3::WifiRemoteStationManager
PrepareForQueue	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::PrepareForQueue (Mac48Address address, const WifiMacHeader *header, Ptr<const Packet> packet)$/;"	f	class:ns3::WifiRemoteStationManager
Print	ampdu-subframe-header.cc	/^AmpduSubframeHeader::Print (std::ostream &os) const$/;"	f	class:ns3::AmpduSubframeHeader
Print	ampdu-tag.cc	/^AmpduTag::Print (std::ostream &os) const$/;"	f	class:ns3::AmpduTag
Print	amsdu-subframe-header.cc	/^AmsduSubframeHeader::Print (std::ostream &os) const$/;"	f	class:ns3::AmsduSubframeHeader
Print	ctrl-headers.cc	/^CtrlBAckRequestHeader::Print (std::ostream &os) const$/;"	f	class:ns3::CtrlBAckRequestHeader
Print	ctrl-headers.cc	/^CtrlBAckResponseHeader::Print (std::ostream &os) const$/;"	f	class:ns3::CtrlBAckResponseHeader
Print	mgt-headers.cc	/^MgtAddBaRequestHeader::Print (std::ostream &os) const$/;"	f	class:ns3::MgtAddBaRequestHeader
Print	mgt-headers.cc	/^MgtAddBaResponseHeader::Print (std::ostream &os) const$/;"	f	class:ns3::MgtAddBaResponseHeader
Print	mgt-headers.cc	/^MgtAssocRequestHeader::Print (std::ostream &os) const$/;"	f	class:ns3::MgtAssocRequestHeader
Print	mgt-headers.cc	/^MgtAssocResponseHeader::Print (std::ostream &os) const$/;"	f	class:ns3::MgtAssocResponseHeader
Print	mgt-headers.cc	/^MgtDelBaHeader::Print (std::ostream &os) const$/;"	f	class:ns3::MgtDelBaHeader
Print	mgt-headers.cc	/^MgtProbeRequestHeader::Print (std::ostream &os) const$/;"	f	class:ns3::MgtProbeRequestHeader
Print	mgt-headers.cc	/^MgtProbeResponseHeader::Print (std::ostream &os) const$/;"	f	class:ns3::MgtProbeResponseHeader
Print	mgt-headers.cc	/^WifiActionHeader::Print (std::ostream &os) const$/;"	f	class:ns3::WifiActionHeader
Print	qos-tag.cc	/^QosTag::Print (std::ostream &os) const$/;"	f	class:ns3::QosTag
Print	snr-tag.cc	/^SnrTag::Print (std::ostream &os) const$/;"	f	class:ns3::SnrTag
Print	wifi-information-element-vector.cc	/^WifiInformationElementVector::Print (std::ostream & os) const$/;"	f	class:ns3::WifiInformationElementVector
Print	wifi-information-element.cc	/^WifiInformationElement::Print (std::ostream &os) const$/;"	f	class:ns3::WifiInformationElement
Print	wifi-mac-header.cc	/^WifiMacHeader::Print (std::ostream &os) const$/;"	f	class:ns3::WifiMacHeader
Print	wifi-mac-trailer.cc	/^WifiMacTrailer::Print (std::ostream &os) const$/;"	f	class:ns3::WifiMacTrailer
Print	wifi-remote-station-manager.cc	/^HighLatencyCtsToSelfTxVectorTag::Print (std::ostream &os) const$/;"	f	class:ns3::HighLatencyCtsToSelfTxVectorTag
Print	wifi-remote-station-manager.cc	/^HighLatencyDataTxVectorTag::Print (std::ostream &os) const$/;"	f	class:ns3::HighLatencyDataTxVectorTag
Print	wifi-remote-station-manager.cc	/^HighLatencyRtsTxVectorTag::Print (std::ostream &os) const$/;"	f	class:ns3::HighLatencyRtsTxVectorTag
PrintFrameControl	wifi-mac-header.cc	/^WifiMacHeader::PrintFrameControl (std::ostream &os) const$/;"	f	class:ns3::WifiMacHeader
PrintSampleTable	minstrel-wifi-manager.cc	/^MinstrelWifiManager::PrintSampleTable (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
PrintTable	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::PrintTable (MinstrelHtWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelHtWifiManager
PrintTable	minstrel-wifi-manager.cc	/^MinstrelWifiManager::PrintTable (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
ProbeRequestTimeout	sta-wifi-mac.cc	/^StaWifiMac::ProbeRequestTimeout (void)$/;"	f	class:ns3::StaWifiMac
ProtectionMode	wifi-remote-station-manager.h	/^  enum ProtectionMode$/;"	g	class:ns3::WifiRemoteStationManager
PushFront	edca-txop-n.cc	/^EdcaTxopN::PushFront (Ptr<const Packet> packet, const WifiMacHeader &hdr)$/;"	f	class:ns3::EdcaTxopN
PushFront	wifi-mac-queue.cc	/^WifiMacQueue::PushFront (Ptr<const Packet> packet, const WifiMacHeader &hdr)$/;"	f	class:ns3::WifiMacQueue
QOS_BLOCKED_DESTINATIONS_H	qos-blocked-destinations.h	23;"	d
QOS_TAG_H	qos-tag.h	22;"	d
QOS_UTILS_H	qos-utils.h	22;"	d
QosAckPolicy	wifi-mac-header.h	/^  enum QosAckPolicy$/;"	g	class:ns3::WifiMacHeader
QosBlockedDestinations	qos-blocked-destinations.cc	/^QosBlockedDestinations::QosBlockedDestinations ()$/;"	f	class:ns3::QosBlockedDestinations
QosBlockedDestinations	qos-blocked-destinations.h	/^class QosBlockedDestinations$/;"	c	namespace:ns3
QosOriginators	mac-rx-middle.h	/^  typedef std::map <std::pair<Mac48Address, uint8_t>, OriginatorRxStatus *, std::less<std::pair<Mac48Address,uint8_t> > > QosOriginators;$/;"	t	class:ns3::MacRxMiddle
QosOriginatorsI	mac-rx-middle.h	/^  typedef std::map <std::pair<Mac48Address, uint8_t>, OriginatorRxStatus *, std::less<std::pair<Mac48Address,uint8_t> > >::iterator QosOriginatorsI;$/;"	t	class:ns3::MacRxMiddle
QosTag	qos-tag.cc	/^QosTag::QosTag ()$/;"	f	class:ns3::QosTag
QosTag	qos-tag.cc	/^QosTag::QosTag (uint8_t tid)$/;"	f	class:ns3::QosTag
QosTag	qos-tag.h	/^class QosTag : public Tag$/;"	c	namespace:ns3
QosUtilsGetTidForPacket	qos-utils.cc	/^QosUtilsGetTidForPacket (Ptr<const Packet> packet)$/;"	f	namespace:ns3
QosUtilsIsOldPacket	qos-utils.cc	/^QosUtilsIsOldPacket (uint16_t startingSeq, uint16_t seqNumber)$/;"	f	namespace:ns3
QosUtilsMapSeqControlToUniqueInteger	qos-utils.cc	/^QosUtilsMapSeqControlToUniqueInteger (uint16_t seqControl, uint16_t endSequence)$/;"	f	namespace:ns3
QosUtilsMapTidToAc	qos-utils.cc	/^QosUtilsMapTidToAc (uint8_t tid)$/;"	f	namespace:ns3
Queue	dca-txop.cc	/^DcaTxop::Queue (Ptr<const Packet> packet, const WifiMacHeader &hdr)$/;"	f	class:ns3::DcaTxop
Queue	edca-txop-n.cc	/^EdcaTxopN::Queue (Ptr<const Packet> packet, const WifiMacHeader &hdr)$/;"	f	class:ns3::EdcaTxopN
QueueListeners	mac-low.h	/^  typedef std::map<AcIndex, MacLowAggregationCapableTransmissionListener*> QueueListeners;$/;"	t	class:ns3::MacLow
RANDOM_STREAM_H	random-stream.h	22;"	d
REFUSED	sta-wifi-mac.h	/^    REFUSED$/;"	e	enum:ns3::StaWifiMac::MacState
REGULAR_WIFI_MAC_H	regular-wifi-mac.h	22;"	d
RRAA_WIFI_MANAGER_H	rraa-wifi-manager.h	22;"	d
RTS_CTS	wifi-remote-station-manager.h	/^    RTS_CTS,$/;"	e	enum:ns3::WifiRemoteStationManager::ProtectionMode
RX	wifi-phy.h	/^    RX,$/;"	e	enum:ns3::WifiPhy::State
RandomStream	random-stream.h	/^class RandomStream$/;"	c	namespace:ns3
RateChangeTracedCallback	minstrel-ht-wifi-manager.h	/^  typedef void (*RateChangeTracedCallback)(const uint64_t rate, const Mac48Address remoteAddress);$/;"	t	class:ns3::MinstrelHtWifiManager
RateChangeTracedCallback	wifi-remote-station-manager.h	/^  typedef void (*RateChangeTracedCallback)(uint32_t rate, Mac48Address remoteAddress);$/;"	t	class:ns3::WifiRemoteStationManager
RateInfo	minstrel-wifi-manager.h	/^struct RateInfo$/;"	s	namespace:ns3
RateInit	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::RateInit (MinstrelHtWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelHtWifiManager
RateInit	minstrel-wifi-manager.cc	/^MinstrelWifiManager::RateInit (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
RatioToDb	yans-wifi-phy.cc	/^YansWifiPhy::RatioToDb (double ratio) const$/;"	f	class:ns3::YansWifiPhy
RealRandomStream	random-stream.cc	/^RealRandomStream::RealRandomStream ()$/;"	f	class:ns3::RealRandomStream
RealRandomStream	random-stream.h	/^class RealRandomStream : public RandomStream$/;"	c	namespace:ns3
Receive	adhoc-wifi-mac.cc	/^AdhocWifiMac::Receive (Ptr<Packet> packet, const WifiMacHeader *hdr)$/;"	f	class:ns3::AdhocWifiMac
Receive	ap-wifi-mac.cc	/^ApWifiMac::Receive (Ptr<Packet> packet, const WifiMacHeader *hdr)$/;"	f	class:ns3::ApWifiMac
Receive	mac-rx-middle.cc	/^MacRxMiddle::Receive (Ptr<Packet> packet, const WifiMacHeader *hdr)$/;"	f	class:ns3::MacRxMiddle
Receive	regular-wifi-mac.cc	/^RegularWifiMac::Receive (Ptr<Packet> packet, const WifiMacHeader *hdr)$/;"	f	class:ns3::RegularWifiMac
Receive	sta-wifi-mac.cc	/^StaWifiMac::Receive (Ptr<Packet> packet, const WifiMacHeader *hdr)$/;"	f	class:ns3::StaWifiMac
Receive	yans-wifi-channel.cc	/^YansWifiChannel::Receive (uint32_t i, Ptr<Packet> packet, struct Parameters parameters) const$/;"	f	class:ns3::YansWifiChannel
ReceiveError	mac-low.cc	/^MacLow::ReceiveError (Ptr<Packet> packet, double rxSnr, bool isEndOfFrame)$/;"	f	class:ns3::MacLow
ReceiveMpdu	mac-low.cc	/^MacLow::ReceiveMpdu (Ptr<Packet> packet, WifiMacHeader hdr)$/;"	f	class:ns3::MacLow
ReceiveOk	mac-low.cc	/^MacLow::ReceiveOk (Ptr<Packet> packet, double rxSnr, WifiTxVector txVector, WifiPreamble preamble, bool ampduSubframe)$/;"	f	class:ns3::MacLow
RecordDisassociated	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::RecordDisassociated (Mac48Address address)$/;"	f	class:ns3::WifiRemoteStationManager
RecordGotAssocTxFailed	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::RecordGotAssocTxFailed (Mac48Address address)$/;"	f	class:ns3::WifiRemoteStationManager
RecordGotAssocTxOk	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::RecordGotAssocTxOk (Mac48Address address)$/;"	f	class:ns3::WifiRemoteStationManager
RecordWaitAssocTxOk	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::RecordWaitAssocTxOk (Mac48Address address)$/;"	f	class:ns3::WifiRemoteStationManager
RegisterBlockAckListenerForAc	mac-low.cc	/^MacLow::RegisterBlockAckListenerForAc (enum AcIndex ac, MacLowAggregationCapableTransmissionListener *listener)$/;"	f	class:ns3::MacLow
RegisterDcfListener	mac-low.cc	/^MacLow::RegisterDcfListener (MacLowDcfListener *listener)$/;"	f	class:ns3::MacLow
RegisterListener	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::RegisterListener (WifiPhyListener *listener)$/;"	f	class:ns3::WifiPhyStateHelper
RegisterListener	yans-wifi-phy.cc	/^YansWifiPhy::RegisterListener (WifiPhyListener *listener)$/;"	f	class:ns3::YansWifiPhy
RegularWifiMac	regular-wifi-mac.cc	/^RegularWifiMac::RegularWifiMac () :$/;"	f	class:ns3::RegularWifiMac
RegularWifiMac	regular-wifi-mac.h	/^class RegularWifiMac : public WifiMac$/;"	c	namespace:ns3
Remove	wifi-mac-queue.cc	/^WifiMacQueue::Remove (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiMacQueue
RemoveFromBaQueue	edca-txop-n.cc	/^  virtual void RemoveFromBaQueue (uint8_t tid, Mac48Address recipient, uint16_t seqnumber)$/;"	f	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener
RemoveFromBaQueue	mac-low.cc	/^MacLowAggregationCapableTransmissionListener::RemoveFromBaQueue (uint8_t tid, Mac48Address recipient, uint16_t seqnumber)$/;"	f	class:ns3::MacLowAggregationCapableTransmissionListener
RemovePacket	block-ack-manager.cc	/^BlockAckManager::RemovePacket (uint8_t tid, Mac48Address recipient, uint16_t seqnumber)$/;"	f	class:ns3::BlockAckManager
RemovePhyListener	dcf-manager.cc	/^DcfManager::RemovePhyListener (Ptr<WifiPhy> phy)$/;"	f	class:ns3::DcfManager
RemovePhyMacLowListener	mac-low.cc	/^MacLow::RemovePhyMacLowListener (Ptr<WifiPhy> phy)$/;"	f	class:ns3::MacLow
RemoveRetransmitPacket	edca-txop-n.cc	/^EdcaTxopN::RemoveRetransmitPacket (uint8_t tid, Mac48Address recipient, uint16_t seqnumber)$/;"	f	class:ns3::EdcaTxopN
ReportAmpduTxStatus	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::ReportAmpduTxStatus (Mac48Address address, uint8_t tid,$/;"	f	class:ns3::WifiRemoteStationManager
ReportDataFailed	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::ReportDataFailed (Mac48Address address, const WifiMacHeader *header)$/;"	f	class:ns3::WifiRemoteStationManager
ReportDataOk	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::ReportDataOk (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
ReportFinalDataFailed	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::ReportFinalDataFailed (Mac48Address address, const WifiMacHeader *header)$/;"	f	class:ns3::WifiRemoteStationManager
ReportFinalRtsFailed	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::ReportFinalRtsFailed (Mac48Address address, const WifiMacHeader *header)$/;"	f	class:ns3::WifiRemoteStationManager
ReportRtsFailed	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::ReportRtsFailed (Mac48Address address, const WifiMacHeader *header)$/;"	f	class:ns3::WifiRemoteStationManager
ReportRtsOk	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::ReportRtsOk (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
ReportRxOk	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::ReportRxOk (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
RequestAccess	dcf-manager.cc	/^DcfManager::RequestAccess (DcfState *state)$/;"	f	class:ns3::DcfManager
Reset	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::Reset (Mac48Address address)$/;"	f	class:ns3::WifiRemoteStationManager
Reset	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::Reset (void)$/;"	f	class:ns3::WifiRemoteStationManager
ResetBitmap	ctrl-headers.cc	/^CtrlBAckResponseHeader::ResetBitmap (void)$/;"	f	class:ns3::CtrlBAckResponseHeader
ResetBlockAckInactivityTimerIfNeeded	mac-low.cc	/^MacLow::ResetBlockAckInactivityTimerIfNeeded (BlockAckAgreement &agreement)$/;"	f	class:ns3::MacLow
ResetCnt	amrr-wifi-manager.cc	/^AmrrWifiManager::ResetCnt (AmrrWifiRemoteStation *station)$/;"	f	class:ns3::AmrrWifiManager
ResetCountersBasic	rraa-wifi-manager.cc	/^RraaWifiManager::ResetCountersBasic (RraaWifiRemoteStation *station)$/;"	f	class:ns3::RraaWifiManager
ResetCw	dcf-manager.cc	/^DcfState::ResetCw (void)$/;"	f	class:ns3::DcfState
ResetPhy	mac-low.cc	/^MacLow::ResetPhy (void)$/;"	f	class:ns3::MacLow
ResetPortionOfBitmap	block-ack-cache.cc	/^BlockAckCache::ResetPortionOfBitmap (uint16_t start, uint16_t end)$/;"	f	class:ns3::BlockAckCache
ResetRtsWnd	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::ResetRtsWnd (AarfcdWifiRemoteStation *station)$/;"	f	class:ns3::AarfcdWifiManager
ResetWifiPhy	regular-wifi-mac.cc	/^RegularWifiMac::ResetWifiPhy (void)$/;"	f	class:ns3::RegularWifiMac
RestartAccessIfNeeded	dca-txop.cc	/^DcaTxop::RestartAccessIfNeeded (void)$/;"	f	class:ns3::DcaTxop
RestartAccessIfNeeded	edca-txop-n.cc	/^EdcaTxopN::RestartAccessIfNeeded (void)$/;"	f	class:ns3::EdcaTxopN
RestartBeaconWatchdog	sta-wifi-mac.cc	/^StaWifiMac::RestartBeaconWatchdog (Time delay)$/;"	f	class:ns3::StaWifiMac
ResumeFromSleep	yans-wifi-phy.cc	/^YansWifiPhy::ResumeFromSleep (void)$/;"	f	class:ns3::YansWifiPhy
RraaWifiManager	rraa-wifi-manager.cc	/^RraaWifiManager::RraaWifiManager ()$/;"	f	class:ns3::RraaWifiManager
RraaWifiManager	rraa-wifi-manager.h	/^class RraaWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
RraaWifiRemoteStation	rraa-wifi-manager.cc	/^struct RraaWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
RunBasicAlgorithm	rraa-wifi-manager.cc	/^RraaWifiManager::RunBasicAlgorithm (RraaWifiRemoteStation *station)$/;"	f	class:ns3::RraaWifiManager
RxCompleteBufferedPacketsUntilFirstLost	mac-low.cc	/^MacLow::RxCompleteBufferedPacketsUntilFirstLost (Mac48Address originator, uint8_t tid)$/;"	f	class:ns3::MacLow
RxCompleteBufferedPacketsWithSmallerSequence	mac-low.cc	/^MacLow::RxCompleteBufferedPacketsWithSmallerSequence (uint16_t seq, Mac48Address originator, uint8_t tid)$/;"	f	class:ns3::MacLow
RxEndErrorTracedCallback	wifi-phy-state-helper.h	/^  typedef void (* RxEndErrorTracedCallback)$/;"	t	class:ns3::WifiPhyStateHelper
RxErrorCallback	wifi-phy.h	/^  typedef Callback<void, Ptr<Packet>, double, bool> RxErrorCallback;$/;"	t	class:ns3::WifiPhy
RxOkCallback	wifi-phy.h	/^  typedef Callback<void, Ptr<Packet>, double, WifiTxVector, enum WifiPreamble> RxOkCallback;$/;"	t	class:ns3::WifiPhy
RxOkTracedCallback	wifi-phy-state-helper.h	/^  typedef void (* RxOkTracedCallback)$/;"	t	class:ns3::WifiPhyStateHelper
SELF_PROTECTED	mgt-headers.h	/^    SELF_PROTECTED = 15,        \/\/Category: Self Protected$/;"	e	enum:ns3::WifiActionHeader::CategoryValue
SLEEP	wifi-phy.h	/^    SLEEP$/;"	e	enum:ns3::WifiPhy::State
SNR_TAG_H	snr-tag.h	26;"	d
SSID_H	ssid.h	22;"	d
STA	edca-txop-n.h	/^  STA,$/;"	e	enum:ns3::TypeOfStation
STATUS_CODE_H	status-code.h	22;"	d
STA_WIFI_MAC_H	sta-wifi-mac.h	23;"	d
SUBTYPE_CTL_ACK	wifi-mac-header.cc	/^  SUBTYPE_CTL_ACK = 13$/;"	e	enum:ns3::__anon7	file:
SUBTYPE_CTL_BACKREQ	wifi-mac-header.cc	/^  SUBTYPE_CTL_BACKREQ = 8,$/;"	e	enum:ns3::__anon7	file:
SUBTYPE_CTL_BACKRESP	wifi-mac-header.cc	/^  SUBTYPE_CTL_BACKRESP = 9,$/;"	e	enum:ns3::__anon7	file:
SUBTYPE_CTL_CTLWRAPPER	wifi-mac-header.cc	/^  SUBTYPE_CTL_CTLWRAPPER = 7,$/;"	e	enum:ns3::__anon7	file:
SUBTYPE_CTL_CTS	wifi-mac-header.cc	/^  SUBTYPE_CTL_CTS = 12,$/;"	e	enum:ns3::__anon7	file:
SUBTYPE_CTL_RTS	wifi-mac-header.cc	/^  SUBTYPE_CTL_RTS = 11,$/;"	e	enum:ns3::__anon7	file:
SUPPORTED_RATES_H	supported-rates.h	22;"	d
SWITCHING	wifi-phy.h	/^    SWITCHING,$/;"	e	enum:ns3::WifiPhy::State
SampleRate	minstrel-wifi-manager.h	/^typedef std::vector<std::vector<uint32_t> > SampleRate;$/;"	t	namespace:ns3
ScheduleBlockAckReqIfNeeded	block-ack-manager.cc	/^BlockAckManager::ScheduleBlockAckReqIfNeeded (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::BlockAckManager
Search	wifi-mode.cc	/^WifiModeFactory::Search (std::string name)$/;"	f	class:ns3::WifiModeFactory
SelfProtectedActionValue	mgt-headers.h	/^  enum SelfProtectedActionValue \/\/Category: 15 (Self Protected)$/;"	g	class:ns3::WifiActionHeader
SelfProtectedActionValueToString	mgt-headers.cc	/^WifiActionHeader::SelfProtectedActionValueToString (SelfProtectedActionValue value) const$/;"	f	class:ns3::WifiActionHeader
Send	wifi-net-device.cc	/^WifiNetDevice::Send (Ptr<Packet> packet, const Address& dest, uint16_t protocolNumber)$/;"	f	class:ns3::WifiNetDevice
Send	yans-wifi-channel.cc	/^YansWifiChannel::Send (Ptr<YansWifiPhy> sender, Ptr<const Packet> packet, double txPowerDbm,$/;"	f	class:ns3::YansWifiChannel
SendAckAfterData	mac-low.cc	/^MacLow::SendAckAfterData (Mac48Address source, Time duration, WifiMode dataTxMode, double dataSnr)$/;"	f	class:ns3::MacLow
SendAddBaRequest	edca-txop-n.cc	/^EdcaTxopN::SendAddBaRequest (Mac48Address dest, uint8_t tid, uint16_t startSeq,$/;"	f	class:ns3::EdcaTxopN
SendAddBaResponse	regular-wifi-mac.cc	/^RegularWifiMac::SendAddBaResponse (const MgtAddBaRequestHeader *reqHdr,$/;"	f	class:ns3::RegularWifiMac
SendAssocResp	ap-wifi-mac.cc	/^ApWifiMac::SendAssocResp (Mac48Address to, bool success)$/;"	f	class:ns3::ApWifiMac
SendAssociationRequest	sta-wifi-mac.cc	/^StaWifiMac::SendAssociationRequest (void)$/;"	f	class:ns3::StaWifiMac
SendBlockAckAfterAmpdu	mac-low.cc	/^MacLow::SendBlockAckAfterAmpdu (uint8_t tid, Mac48Address originator, Time duration, WifiTxVector blockAckReqTxVector, double rxSnr)$/;"	f	class:ns3::MacLow
SendBlockAckAfterBlockAckRequest	mac-low.cc	/^MacLow::SendBlockAckAfterBlockAckRequest (const CtrlBAckRequestHeader reqHdr, Mac48Address originator,$/;"	f	class:ns3::MacLow
SendBlockAckRequest	edca-txop-n.cc	/^EdcaTxopN::SendBlockAckRequest (const struct Bar &bar)$/;"	f	class:ns3::EdcaTxopN
SendBlockAckResponse	mac-low.cc	/^MacLow::SendBlockAckResponse (const CtrlBAckResponseHeader* blockAck, Mac48Address originator, bool immediate,$/;"	f	class:ns3::MacLow
SendCtsAfterRts	mac-low.cc	/^MacLow::SendCtsAfterRts (Mac48Address source, Time duration, WifiTxVector rtsTxVector, double rtsSnr)$/;"	f	class:ns3::MacLow
SendCtsToSelf	mac-low.cc	/^MacLow::SendCtsToSelf (void)$/;"	f	class:ns3::MacLow
SendDataAfterCts	mac-low.cc	/^MacLow::SendDataAfterCts (Mac48Address source, Time duration)$/;"	f	class:ns3::MacLow
SendDataPacket	mac-low.cc	/^MacLow::SendDataPacket (void)$/;"	f	class:ns3::MacLow
SendDelbaFrame	edca-txop-n.cc	/^EdcaTxopN::SendDelbaFrame (Mac48Address addr, uint8_t tid, bool byOriginator)$/;"	f	class:ns3::EdcaTxopN
SendFrom	wifi-net-device.cc	/^WifiNetDevice::SendFrom (Ptr<Packet> packet, const Address& source, const Address& dest, uint16_t protocolNumber)$/;"	f	class:ns3::WifiNetDevice
SendMpdu	mac-low.cc	/^MacLow::SendMpdu (Ptr<const Packet> packet, WifiTxVector txVector, WifiPreamble preamble, enum mpduType mpdutype)$/;"	f	class:ns3::MacLow
SendOneBeacon	ap-wifi-mac.cc	/^ApWifiMac::SendOneBeacon (void)$/;"	f	class:ns3::ApWifiMac
SendPacket	yans-wifi-phy.cc	/^YansWifiPhy::SendPacket (Ptr<const Packet> packet, WifiTxVector txVector, WifiPreamble preamble)$/;"	f	class:ns3::YansWifiPhy
SendPacket	yans-wifi-phy.cc	/^YansWifiPhy::SendPacket (Ptr<const Packet> packet, WifiTxVector txVector, WifiPreamble preamble, enum mpduType mpdutype)$/;"	f	class:ns3::YansWifiPhy
SendProbeRequest	sta-wifi-mac.cc	/^StaWifiMac::SendProbeRequest (void)$/;"	f	class:ns3::StaWifiMac
SendProbeResp	ap-wifi-mac.cc	/^ApWifiMac::SendProbeResp (Mac48Address to)$/;"	f	class:ns3::ApWifiMac
SendRtsForPacket	mac-low.cc	/^MacLow::SendRtsForPacket (void)$/;"	f	class:ns3::MacLow
Serialize	ampdu-subframe-header.cc	/^AmpduSubframeHeader::Serialize (Buffer::Iterator i) const$/;"	f	class:ns3::AmpduSubframeHeader
Serialize	ampdu-tag.cc	/^AmpduTag::Serialize (TagBuffer i) const$/;"	f	class:ns3::AmpduTag
Serialize	amsdu-subframe-header.cc	/^AmsduSubframeHeader::Serialize (Buffer::Iterator i) const$/;"	f	class:ns3::AmsduSubframeHeader
Serialize	capability-information.cc	/^CapabilityInformation::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::CapabilityInformation
Serialize	ctrl-headers.cc	/^CtrlBAckRequestHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::CtrlBAckRequestHeader
Serialize	ctrl-headers.cc	/^CtrlBAckResponseHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::CtrlBAckResponseHeader
Serialize	erp-information.cc	/^ErpInformation::Serialize (Buffer::Iterator i) const$/;"	f	class:ns3::ErpInformation
Serialize	ht-capabilities.cc	/^HtCapabilities::Serialize (Buffer::Iterator i) const$/;"	f	class:ns3::HtCapabilities
Serialize	ht-operations.cc	/^HtOperations::Serialize (Buffer::Iterator i) const$/;"	f	class:ns3::HtOperations
Serialize	mgt-headers.cc	/^MgtAddBaRequestHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::MgtAddBaRequestHeader
Serialize	mgt-headers.cc	/^MgtAddBaResponseHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::MgtAddBaResponseHeader
Serialize	mgt-headers.cc	/^MgtAssocRequestHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::MgtAssocRequestHeader
Serialize	mgt-headers.cc	/^MgtAssocResponseHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::MgtAssocResponseHeader
Serialize	mgt-headers.cc	/^MgtDelBaHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::MgtDelBaHeader
Serialize	mgt-headers.cc	/^MgtProbeRequestHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::MgtProbeRequestHeader
Serialize	mgt-headers.cc	/^MgtProbeResponseHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::MgtProbeResponseHeader
Serialize	mgt-headers.cc	/^WifiActionHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::WifiActionHeader
Serialize	qos-tag.cc	/^QosTag::Serialize (TagBuffer i) const$/;"	f	class:ns3::QosTag
Serialize	snr-tag.cc	/^SnrTag::Serialize (TagBuffer i) const$/;"	f	class:ns3::SnrTag
Serialize	status-code.cc	/^StatusCode::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::StatusCode
Serialize	supported-rates.cc	/^ExtendedSupportedRatesIE::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::ExtendedSupportedRatesIE
Serialize	vht-capabilities.cc	/^VhtCapabilities::Serialize (Buffer::Iterator i) const$/;"	f	class:ns3::VhtCapabilities
Serialize	wifi-information-element-vector.cc	/^WifiInformationElementVector::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::WifiInformationElementVector
Serialize	wifi-information-element.cc	/^WifiInformationElement::Serialize (Buffer::Iterator i) const$/;"	f	class:ns3::WifiInformationElement
Serialize	wifi-mac-header.cc	/^WifiMacHeader::Serialize (Buffer::Iterator i) const$/;"	f	class:ns3::WifiMacHeader
Serialize	wifi-mac-trailer.cc	/^WifiMacTrailer::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::WifiMacTrailer
Serialize	wifi-remote-station-manager.cc	/^HighLatencyCtsToSelfTxVectorTag::Serialize (TagBuffer i) const$/;"	f	class:ns3::HighLatencyCtsToSelfTxVectorTag
Serialize	wifi-remote-station-manager.cc	/^HighLatencyDataTxVectorTag::Serialize (TagBuffer i) const$/;"	f	class:ns3::HighLatencyDataTxVectorTag
Serialize	wifi-remote-station-manager.cc	/^HighLatencyRtsTxVectorTag::Serialize (TagBuffer i) const$/;"	f	class:ns3::HighLatencyRtsTxVectorTag
SerializeBitmap	ctrl-headers.cc	/^CtrlBAckResponseHeader::SerializeBitmap (Buffer::Iterator start) const$/;"	f	class:ns3::CtrlBAckResponseHeader
SerializeInformationField	erp-information.cc	/^ErpInformation::SerializeInformationField (Buffer::Iterator start) const$/;"	f	class:ns3::ErpInformation
SerializeInformationField	ht-capabilities.cc	/^HtCapabilities::SerializeInformationField (Buffer::Iterator start) const$/;"	f	class:ns3::HtCapabilities
SerializeInformationField	ht-operations.cc	/^HtOperations::SerializeInformationField (Buffer::Iterator start) const$/;"	f	class:ns3::HtOperations
SerializeInformationField	ssid.cc	/^Ssid::SerializeInformationField (Buffer::Iterator start) const$/;"	f	class:ns3::Ssid
SerializeInformationField	supported-rates.cc	/^ExtendedSupportedRatesIE::SerializeInformationField (Buffer::Iterator start) const$/;"	f	class:ns3::ExtendedSupportedRatesIE
SerializeInformationField	supported-rates.cc	/^SupportedRates::SerializeInformationField (Buffer::Iterator start) const$/;"	f	class:ns3::SupportedRates
SerializeInformationField	vht-capabilities.cc	/^VhtCapabilities::SerializeInformationField (Buffer::Iterator start) const$/;"	f	class:ns3::VhtCapabilities
Set	capability-information.cc	/^CapabilityInformation::Set (uint8_t n)$/;"	f	class:ns3::CapabilityInformation
Set	snr-tag.cc	/^SnrTag::Set (double snr)$/;"	f	class:ns3::SnrTag
SetAccessCategory	edca-txop-n.cc	/^EdcaTxopN::SetAccessCategory (enum AcIndex ac)$/;"	f	class:ns3::EdcaTxopN
SetAckTimeout	mac-low.cc	/^MacLow::SetAckTimeout (Time ackTimeout)$/;"	f	class:ns3::MacLow
SetAckTimeout	regular-wifi-mac.cc	/^RegularWifiMac::SetAckTimeout (Time ackTimeout)$/;"	f	class:ns3::RegularWifiMac
SetAction	mgt-headers.cc	/^WifiActionHeader::SetAction (WifiActionHeader::CategoryValue type,$/;"	f	class:ns3::WifiActionHeader
SetAction	wifi-mac-header.cc	/^WifiMacHeader::SetAction (void)$/;"	f	class:ns3::WifiMacHeader
SetActiveProbing	sta-wifi-mac.cc	/^StaWifiMac::SetActiveProbing (bool enable)$/;"	f	class:ns3::StaWifiMac
SetAddr1	wifi-mac-header.cc	/^WifiMacHeader::SetAddr1 (Mac48Address address)$/;"	f	class:ns3::WifiMacHeader
SetAddr2	wifi-mac-header.cc	/^WifiMacHeader::SetAddr2 (Mac48Address address)$/;"	f	class:ns3::WifiMacHeader
SetAddr3	wifi-mac-header.cc	/^WifiMacHeader::SetAddr3 (Mac48Address address)$/;"	f	class:ns3::WifiMacHeader
SetAddr4	wifi-mac-header.cc	/^WifiMacHeader::SetAddr4 (Mac48Address address)$/;"	f	class:ns3::WifiMacHeader
SetAddress	adhoc-wifi-mac.cc	/^AdhocWifiMac::SetAddress (Mac48Address address)$/;"	f	class:ns3::AdhocWifiMac
SetAddress	ap-wifi-mac.cc	/^ApWifiMac::SetAddress (Mac48Address address)$/;"	f	class:ns3::ApWifiMac
SetAddress	mac-low.cc	/^MacLow::SetAddress (Mac48Address ad)$/;"	f	class:ns3::MacLow
SetAddress	regular-wifi-mac.cc	/^RegularWifiMac::SetAddress (Mac48Address address)$/;"	f	class:ns3::RegularWifiMac
SetAddress	wifi-net-device.cc	/^WifiNetDevice::SetAddress (Address address)$/;"	f	class:ns3::WifiNetDevice
SetAggregation	wifi-tx-vector.cc	/^WifiTxVector::SetAggregation (bool aggregation)$/;"	f	class:ns3::WifiTxVector
SetAifsn	dca-txop.cc	/^DcaTxop::SetAifsn (uint32_t aifsn)$/;"	f	class:ns3::DcaTxop
SetAifsn	dcf-manager.cc	/^DcfState::SetAifsn (uint32_t aifsn)$/;"	f	class:ns3::DcfState
SetAifsn	edca-txop-n.cc	/^EdcaTxopN::SetAifsn (uint32_t aifsn)$/;"	f	class:ns3::EdcaTxopN
SetAmpdu	ampdu-tag.cc	/^AmpduTag::SetAmpdu (bool supported)$/;"	f	class:ns3::AmpduTag
SetAmpdu	edca-txop-n.cc	/^  virtual void SetAmpdu (Mac48Address dest, bool enableAmpdu)$/;"	f	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener
SetAmpdu	mac-low.cc	/^void MacLowAggregationCapableTransmissionListener::SetAmpdu (Mac48Address dest, bool enableAmpdu)$/;"	f	class:ns3::MacLowAggregationCapableTransmissionListener
SetAmpduExist	edca-txop-n.cc	/^void EdcaTxopN::SetAmpduExist (Mac48Address dest, bool enableAmpdu)$/;"	f	class:ns3::EdcaTxopN
SetAmpduParameters	ht-capabilities.cc	/^HtCapabilities::SetAmpduParameters (uint8_t ctrl)$/;"	f	class:ns3::HtCapabilities
SetAmsduSupport	block-ack-agreement.cc	/^BlockAckAgreement::SetAmsduSupport (bool supported)$/;"	f	class:ns3::BlockAckAgreement
SetAmsduSupport	mgt-headers.cc	/^MgtAddBaRequestHeader::SetAmsduSupport (bool supported)$/;"	f	class:ns3::MgtAddBaRequestHeader
SetAmsduSupport	mgt-headers.cc	/^MgtAddBaResponseHeader::SetAmsduSupport (bool supported)$/;"	f	class:ns3::MgtAddBaResponseHeader
SetAntennaSelectionCapabilities	ht-capabilities.cc	/^HtCapabilities::SetAntennaSelectionCapabilities (uint8_t ctrl)$/;"	f	class:ns3::HtCapabilities
SetAssocReq	wifi-mac-header.cc	/^WifiMacHeader::SetAssocReq (void)$/;"	f	class:ns3::WifiMacHeader
SetAssocRequestTimeout	sta-wifi-mac.cc	/^StaWifiMac::SetAssocRequestTimeout (Time timeout)$/;"	f	class:ns3::StaWifiMac
SetAssocResp	wifi-mac-header.cc	/^WifiMacHeader::SetAssocResp (void)$/;"	f	class:ns3::WifiMacHeader
SetBaControl	ctrl-headers.cc	/^CtrlBAckResponseHeader::SetBaControl (uint16_t ba)$/;"	f	class:ns3::CtrlBAckResponseHeader
SetBarControl	ctrl-headers.cc	/^CtrlBAckRequestHeader::SetBarControl (uint16_t bar)$/;"	f	class:ns3::CtrlBAckRequestHeader
SetBarkerPreambleMode	erp-information.cc	/^ErpInformation::SetBarkerPreambleMode (uint8_t barkerPreambleMode)$/;"	f	class:ns3::ErpInformation
SetBasicBlockAckTimeout	mac-low.cc	/^MacLow::SetBasicBlockAckTimeout (Time blockAckTimeout)$/;"	f	class:ns3::MacLow
SetBasicBlockAckTimeout	regular-wifi-mac.cc	/^RegularWifiMac::SetBasicBlockAckTimeout (Time blockAckTimeout)$/;"	f	class:ns3::RegularWifiMac
SetBasicBlockAckTimeout	wifi-mac.cc	/^WifiMac::SetBasicBlockAckTimeout (Time blockAckTimeout)$/;"	f	class:ns3::WifiMac
SetBasicMcsSet	ht-operations.cc	/^HtOperations::SetBasicMcsSet (uint64_t ctrl1, uint64_t ctrl2)$/;"	f	class:ns3::HtOperations
SetBasicRate	supported-rates.cc	/^SupportedRates::SetBasicRate (uint32_t bs)$/;"	f	class:ns3::SupportedRates
SetBeBlockAckInactivityTimeout	regular-wifi-mac.cc	/^RegularWifiMac::SetBeBlockAckInactivityTimeout (uint16_t timeout)$/;"	f	class:ns3::RegularWifiMac
SetBeBlockAckThreshold	regular-wifi-mac.cc	/^RegularWifiMac::SetBeBlockAckThreshold (uint8_t threshold)$/;"	f	class:ns3::RegularWifiMac
SetBeMaxAmpduSize	regular-wifi-mac.cc	/^RegularWifiMac::SetBeMaxAmpduSize (uint32_t size)$/;"	f	class:ns3::RegularWifiMac
SetBeMaxAmsduSize	regular-wifi-mac.cc	/^RegularWifiMac::SetBeMaxAmsduSize (uint32_t size)$/;"	f	class:ns3::RegularWifiMac
SetBeacon	wifi-mac-header.cc	/^WifiMacHeader::SetBeacon (void)$/;"	f	class:ns3::WifiMacHeader
SetBeaconGeneration	ap-wifi-mac.cc	/^ApWifiMac::SetBeaconGeneration (bool enable)$/;"	f	class:ns3::ApWifiMac
SetBeaconInterval	ap-wifi-mac.cc	/^ApWifiMac::SetBeaconInterval (Time interval)$/;"	f	class:ns3::ApWifiMac
SetBeaconIntervalUs	mgt-headers.cc	/^MgtProbeResponseHeader::SetBeaconIntervalUs (uint64_t us)$/;"	f	class:ns3::MgtProbeResponseHeader
SetBestProbabilityRate	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::SetBestProbabilityRate (MinstrelHtWifiRemoteStation *station, uint32_t index)$/;"	f	class:ns3::MinstrelHtWifiManager
SetBestStationThRates	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::SetBestStationThRates (MinstrelHtWifiRemoteStation *station, uint32_t index)$/;"	f	class:ns3::MinstrelHtWifiManager
SetBkBlockAckInactivityTimeout	regular-wifi-mac.cc	/^RegularWifiMac::SetBkBlockAckInactivityTimeout (uint16_t timeout)$/;"	f	class:ns3::RegularWifiMac
SetBkBlockAckThreshold	regular-wifi-mac.cc	/^RegularWifiMac::SetBkBlockAckThreshold (uint8_t threshold)$/;"	f	class:ns3::RegularWifiMac
SetBkMaxAmpduSize	regular-wifi-mac.cc	/^RegularWifiMac::SetBkMaxAmpduSize (uint32_t size)$/;"	f	class:ns3::RegularWifiMac
SetBkMaxAmsduSize	regular-wifi-mac.cc	/^RegularWifiMac::SetBkMaxAmsduSize (uint32_t size)$/;"	f	class:ns3::RegularWifiMac
SetBlockAck	wifi-mac-header.cc	/^WifiMacHeader::SetBlockAck (void)$/;"	f	class:ns3::WifiMacHeader
SetBlockAckInactivityCallback	block-ack-manager.cc	/^BlockAckManager::SetBlockAckInactivityCallback (Callback<void, Mac48Address, uint8_t, bool> callback)$/;"	f	class:ns3::BlockAckManager
SetBlockAckInactivityTimeout	edca-txop-n.cc	/^EdcaTxopN::SetBlockAckInactivityTimeout (uint16_t timeout)$/;"	f	class:ns3::EdcaTxopN
SetBlockAckReq	wifi-mac-header.cc	/^WifiMacHeader::SetBlockAckReq (void)$/;"	f	class:ns3::WifiMacHeader
SetBlockAckThreshold	block-ack-manager.cc	/^BlockAckManager::SetBlockAckThreshold (uint8_t nPackets)$/;"	f	class:ns3::BlockAckManager
SetBlockAckThreshold	edca-txop-n.cc	/^EdcaTxopN::SetBlockAckThreshold (uint8_t threshold)$/;"	f	class:ns3::EdcaTxopN
SetBlockAckType	block-ack-manager.cc	/^BlockAckManager::SetBlockAckType (enum BlockAckType bAckType)$/;"	f	class:ns3::BlockAckManager
SetBlockDestinationCallback	block-ack-manager.cc	/^BlockAckManager::SetBlockDestinationCallback (Callback<void, Mac48Address, uint8_t> callback)$/;"	f	class:ns3::BlockAckManager
SetBssid	mac-low.cc	/^MacLow::SetBssid (Mac48Address bssid)$/;"	f	class:ns3::MacLow
SetBssid	regular-wifi-mac.cc	/^RegularWifiMac::SetBssid (Mac48Address bssid)$/;"	f	class:ns3::RegularWifiMac
SetBufferSize	block-ack-agreement.cc	/^BlockAckAgreement::SetBufferSize (uint16_t bufferSize)$/;"	f	class:ns3::BlockAckAgreement
SetBufferSize	mgt-headers.cc	/^MgtAddBaRequestHeader::SetBufferSize (uint16_t size)$/;"	f	class:ns3::MgtAddBaRequestHeader
SetBufferSize	mgt-headers.cc	/^MgtAddBaResponseHeader::SetBufferSize (uint16_t size)$/;"	f	class:ns3::MgtAddBaResponseHeader
SetByOriginator	mgt-headers.cc	/^MgtDelBaHeader::SetByOriginator (void)$/;"	f	class:ns3::MgtDelBaHeader
SetByRecipient	mgt-headers.cc	/^MgtDelBaHeader::SetByRecipient (void)$/;"	f	class:ns3::MgtDelBaHeader
SetCapabilities	mgt-headers.cc	/^MgtAssocRequestHeader::SetCapabilities (CapabilityInformation capabilities)$/;"	f	class:ns3::MgtAssocRequestHeader
SetCapabilities	mgt-headers.cc	/^MgtAssocResponseHeader::SetCapabilities (CapabilityInformation capabilities)$/;"	f	class:ns3::MgtAssocResponseHeader
SetCapabilities	mgt-headers.cc	/^MgtProbeResponseHeader::SetCapabilities (CapabilityInformation capabilities)$/;"	f	class:ns3::MgtProbeResponseHeader
SetCcaBusyCurrentA	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::SetCcaBusyCurrentA (double CcaBusyCurrentA)$/;"	f	class:ns3::WifiRadioEnergyModel
SetCcaMode1Threshold	yans-wifi-phy.cc	/^YansWifiPhy::SetCcaMode1Threshold (double threshold)$/;"	f	class:ns3::YansWifiPhy
SetChangeStateCallback	wifi-radio-energy-model.cc	/^WifiRadioEnergyModelPhyListener::SetChangeStateCallback (DeviceEnergyModel::ChangeStateCallback callback)$/;"	f	class:ns3::WifiRadioEnergyModelPhyListener
SetChannel	yans-wifi-phy.cc	/^YansWifiPhy::SetChannel (Ptr<YansWifiChannel> channel)$/;"	f	class:ns3::YansWifiPhy
SetChannelNumber	yans-wifi-phy.cc	/^YansWifiPhy::SetChannelNumber (uint16_t nch)$/;"	f	class:ns3::YansWifiPhy
SetChannelWidth	wifi-tx-vector.cc	/^WifiTxVector::SetChannelWidth (uint32_t channelWidth)$/;"	f	class:ns3::WifiTxVector
SetChannelWidth	yans-wifi-phy.cc	/^YansWifiPhy::SetChannelWidth (uint32_t channelwidth)$/;"	f	class:ns3::YansWifiPhy
SetCompressedBlockAckTimeout	mac-low.cc	/^MacLow::SetCompressedBlockAckTimeout (Time blockAckTimeout)$/;"	f	class:ns3::MacLow
SetCompressedBlockAckTimeout	regular-wifi-mac.cc	/^RegularWifiMac::SetCompressedBlockAckTimeout (Time blockAckTimeout)$/;"	f	class:ns3::RegularWifiMac
SetCompressedBlockAckTimeout	wifi-mac.cc	/^WifiMac::SetCompressedBlockAckTimeout (Time blockAckTimeout)$/;"	f	class:ns3::WifiMac
SetCrc	ampdu-subframe-header.cc	/^AmpduSubframeHeader::SetCrc (uint8_t crc)$/;"	f	class:ns3::AmpduSubframeHeader
SetCtsTimeout	mac-low.cc	/^MacLow::SetCtsTimeout (Time ctsTimeout)$/;"	f	class:ns3::MacLow
SetCtsTimeout	regular-wifi-mac.cc	/^RegularWifiMac::SetCtsTimeout (Time ctsTimeout)$/;"	f	class:ns3::RegularWifiMac
SetCtsToSelfSupported	mac-low.cc	/^MacLow::SetCtsToSelfSupported (bool enable)$/;"	f	class:ns3::MacLow
SetCtsToSelfSupported	regular-wifi-mac.cc	/^RegularWifiMac::SetCtsToSelfSupported (bool enable)$/;"	f	class:ns3::RegularWifiMac
SetCwMax	dcf-manager.cc	/^DcfState::SetCwMax (uint32_t maxCw)$/;"	f	class:ns3::DcfState
SetCwMin	dcf-manager.cc	/^DcfState::SetCwMin (uint32_t minCw)$/;"	f	class:ns3::DcfState
SetDefaultTxPowerLevel	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetDefaultTxPowerLevel (uint8_t txPower)$/;"	f	class:ns3::WifiRemoteStationManager
SetDelayedBlockAck	block-ack-agreement.cc	/^BlockAckAgreement::SetDelayedBlockAck (void)$/;"	f	class:ns3::BlockAckAgreement
SetDelayedBlockAck	mgt-headers.cc	/^MgtAddBaRequestHeader::SetDelayedBlockAck ()$/;"	f	class:ns3::MgtAddBaRequestHeader
SetDelayedBlockAck	mgt-headers.cc	/^MgtAddBaResponseHeader::SetDelayedBlockAck ()$/;"	f	class:ns3::MgtAddBaResponseHeader
SetDestinationAddr	amsdu-subframe-header.cc	/^AmsduSubframeHeader::SetDestinationAddr (Mac48Address to)$/;"	f	class:ns3::AmsduSubframeHeader
SetDevice	yans-wifi-phy.cc	/^YansWifiPhy::SetDevice (Ptr<NetDevice> device)$/;"	f	class:ns3::YansWifiPhy
SetDsFrom	wifi-mac-header.cc	/^WifiMacHeader::SetDsFrom (void)$/;"	f	class:ns3::WifiMacHeader
SetDsNotFrom	wifi-mac-header.cc	/^WifiMacHeader::SetDsNotFrom (void)$/;"	f	class:ns3::WifiMacHeader
SetDsNotTo	wifi-mac-header.cc	/^WifiMacHeader::SetDsNotTo (void)$/;"	f	class:ns3::WifiMacHeader
SetDsTo	wifi-mac-header.cc	/^WifiMacHeader::SetDsTo (void)$/;"	f	class:ns3::WifiMacHeader
SetDualBeacon	ht-operations.cc	/^HtOperations::SetDualBeacon (uint8_t dualbeacon)$/;"	f	class:ns3::HtOperations
SetDualCtsProtection	ht-operations.cc	/^HtOperations::SetDualCtsProtection (uint8_t dualctsprotection)$/;"	f	class:ns3::HtOperations
SetDuration	wifi-mac-header.cc	/^WifiMacHeader::SetDuration (Time duration)$/;"	f	class:ns3::WifiMacHeader
SetEdThreshold	yans-wifi-phy.cc	/^YansWifiPhy::SetEdThreshold (double threshold)$/;"	f	class:ns3::YansWifiPhy
SetEifsNoDifs	dcf-manager.cc	/^DcfManager::SetEifsNoDifs (Time eifsNoDifs)$/;"	f	class:ns3::DcfManager
SetEifsNoDifs	regular-wifi-mac.cc	/^RegularWifiMac::SetEifsNoDifs (Time eifsNoDifs)$/;"	f	class:ns3::RegularWifiMac
SetEnergyDepletionCallback	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::SetEnergyDepletionCallback ($/;"	f	class:ns3::WifiRadioEnergyModel
SetEnergyRechargedCallback	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::SetEnergyRechargedCallback ($/;"	f	class:ns3::WifiRadioEnergyModel
SetEnergySource	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::SetEnergySource (Ptr<EnergySource> source)$/;"	f	class:ns3::WifiRadioEnergyModel
SetEof	ampdu-subframe-header.cc	/^AmpduSubframeHeader::SetEof (bool eof)$/;"	f	class:ns3::AmpduSubframeHeader
SetErpInformation	mgt-headers.cc	/^MgtAssocResponseHeader::SetErpInformation (ErpInformation erpInformation)$/;"	f	class:ns3::MgtAssocResponseHeader
SetErpInformation	mgt-headers.cc	/^MgtProbeResponseHeader::SetErpInformation (ErpInformation erpInformation)$/;"	f	class:ns3::MgtProbeResponseHeader
SetErpSupported	erp-information.cc	/^ErpInformation::SetErpSupported (uint8_t erpSupported)$/;"	f	class:ns3::ErpInformation
SetErpSupported	regular-wifi-mac.cc	/^RegularWifiMac::SetErpSupported (bool enable)$/;"	f	class:ns3::RegularWifiMac
SetErrorRateModel	interference-helper.cc	/^InterferenceHelper::SetErrorRateModel (Ptr<ErrorRateModel> rate)$/;"	f	class:ns3::InterferenceHelper
SetErrorRateModel	yans-wifi-phy.cc	/^YansWifiPhy::SetErrorRateModel (Ptr<ErrorRateModel> rate)$/;"	f	class:ns3::YansWifiPhy
SetEss	capability-information.cc	/^CapabilityInformation::SetEss (void)$/;"	f	class:ns3::CapabilityInformation
SetEta	wifi-tx-current-model.cc	/^LinearWifiTxCurrentModel::SetEta (double eta)$/;"	f	class:ns3::LinearWifiTxCurrentModel
SetExtendedHtCapabilities	ht-capabilities.cc	/^HtCapabilities::SetExtendedHtCapabilities (uint16_t ctrl)$/;"	f	class:ns3::HtCapabilities
SetFailure	status-code.cc	/^StatusCode::SetFailure (void)$/;"	f	class:ns3::StatusCode
SetForwardCallback	mac-rx-middle.cc	/^MacRxMiddle::SetForwardCallback (ForwardUpCallback callback)$/;"	f	class:ns3::MacRxMiddle
SetForwardUpCallback	regular-wifi-mac.cc	/^RegularWifiMac::SetForwardUpCallback (ForwardUpCallback upCallback)$/;"	f	class:ns3::RegularWifiMac
SetFragmentNumber	wifi-mac-header.cc	/^void WifiMacHeader::SetFragmentNumber (uint8_t frag)$/;"	f	class:ns3::WifiMacHeader
SetFragmentationThreshold	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetFragmentationThreshold (uint32_t threshold)$/;"	f	class:ns3::WifiRemoteStationManager
SetFrameControl	wifi-mac-header.cc	/^WifiMacHeader::SetFrameControl (uint16_t ctrl)$/;"	f	class:ns3::WifiMacHeader
SetFrequency	yans-wifi-phy.cc	/^YansWifiPhy::SetFrequency (uint32_t freq)$/;"	f	class:ns3::YansWifiPhy
SetGreenfield	ht-capabilities.cc	/^HtCapabilities::SetGreenfield (uint8_t greenfield)$/;"	f	class:ns3::HtCapabilities
SetGreenfield	yans-wifi-phy.cc	/^YansWifiPhy::SetGreenfield (bool greenfield)$/;"	f	class:ns3::YansWifiPhy
SetGuardInterval	yans-wifi-phy.cc	/^YansWifiPhy::SetGuardInterval (bool guardInterval)$/;"	f	class:ns3::YansWifiPhy
SetHtCapabilities	mgt-headers.cc	/^MgtAssocRequestHeader::SetHtCapabilities (HtCapabilities htcapabilities)$/;"	f	class:ns3::MgtAssocRequestHeader
SetHtCapabilities	mgt-headers.cc	/^MgtAssocResponseHeader::SetHtCapabilities (HtCapabilities htcapabilities)$/;"	f	class:ns3::MgtAssocResponseHeader
SetHtCapabilities	mgt-headers.cc	/^MgtProbeRequestHeader::SetHtCapabilities (HtCapabilities htcapabilities)$/;"	f	class:ns3::MgtProbeRequestHeader
SetHtCapabilities	mgt-headers.cc	/^MgtProbeResponseHeader::SetHtCapabilities (HtCapabilities htcapabilities)$/;"	f	class:ns3::MgtProbeResponseHeader
SetHtCapabilitiesInfo	ht-capabilities.cc	/^HtCapabilities::SetHtCapabilitiesInfo (uint16_t ctrl)$/;"	f	class:ns3::HtCapabilities
SetHtImmediateAck	ctrl-headers.cc	/^CtrlBAckRequestHeader::SetHtImmediateAck (bool immediateAck)$/;"	f	class:ns3::CtrlBAckRequestHeader
SetHtImmediateAck	ctrl-headers.cc	/^CtrlBAckResponseHeader::SetHtImmediateAck (bool immediateAck)$/;"	f	class:ns3::CtrlBAckResponseHeader
SetHtOperations	mgt-headers.cc	/^MgtAssocResponseHeader::SetHtOperations (HtOperations htoperations)$/;"	f	class:ns3::MgtAssocResponseHeader
SetHtOperations	mgt-headers.cc	/^MgtProbeResponseHeader::SetHtOperations (HtOperations htoperations)$/;"	f	class:ns3::MgtProbeResponseHeader
SetHtProtection	ht-operations.cc	/^HtOperations::SetHtProtection (uint8_t htprotection)$/;"	f	class:ns3::HtOperations
SetHtSupported	block-ack-agreement.cc	/^BlockAckAgreement::SetHtSupported (bool htSupported)$/;"	f	class:ns3::BlockAckAgreement
SetHtSupported	ht-capabilities.cc	/^HtCapabilities::SetHtSupported (uint8_t htsupported)$/;"	f	class:ns3::HtCapabilities
SetHtSupported	ht-operations.cc	/^HtOperations::SetHtSupported (uint8_t htsupported)$/;"	f	class:ns3::HtOperations
SetHtSupported	regular-wifi-mac.cc	/^RegularWifiMac::SetHtSupported (bool enable)$/;"	f	class:ns3::RegularWifiMac
SetHtSupported	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetHtSupported (bool enable)$/;"	f	class:ns3::WifiRemoteStationManager
SetIbss	capability-information.cc	/^CapabilityInformation::SetIbss (void)$/;"	f	class:ns3::CapabilityInformation
SetId	wifi-mac-header.cc	/^void WifiMacHeader::SetId (uint16_t id)$/;"	f	class:ns3::WifiMacHeader
SetIdleCurrent	wifi-tx-current-model.cc	/^LinearWifiTxCurrentModel::SetIdleCurrent (double idleCurrent)$/;"	f	class:ns3::LinearWifiTxCurrentModel
SetIdleCurrentA	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::SetIdleCurrentA (double idleCurrentA)$/;"	f	class:ns3::WifiRadioEnergyModel
SetIfIndex	wifi-net-device.cc	/^WifiNetDevice::SetIfIndex (const uint32_t index)$/;"	f	class:ns3::WifiNetDevice
SetImmediateBlockAck	block-ack-agreement.cc	/^BlockAckAgreement::SetImmediateBlockAck (void)$/;"	f	class:ns3::BlockAckAgreement
SetImmediateBlockAck	mgt-headers.cc	/^MgtAddBaRequestHeader::SetImmediateBlockAck ()$/;"	f	class:ns3::MgtAddBaRequestHeader
SetImmediateBlockAck	mgt-headers.cc	/^MgtAddBaResponseHeader::SetImmediateBlockAck ()$/;"	f	class:ns3::MgtAddBaResponseHeader
SetInformationSubset1	ht-operations.cc	/^HtOperations::SetInformationSubset1 (uint8_t ctrl)$/;"	f	class:ns3::HtOperations
SetInformationSubset2	ht-operations.cc	/^HtOperations::SetInformationSubset2 (uint16_t ctrl)$/;"	f	class:ns3::HtOperations
SetInformationSubset3	ht-operations.cc	/^HtOperations::SetInformationSubset3 (uint16_t ctrl)$/;"	f	class:ns3::HtOperations
SetLSigProtectionSupport	ht-capabilities.cc	/^HtCapabilities::SetLSigProtectionSupport (uint8_t lsigprotection)$/;"	f	class:ns3::HtCapabilities
SetLSigTxopProtectionFullSupport	ht-operations.cc	/^HtOperations::SetLSigTxopProtectionFullSupport (uint8_t lsigtxopprotectionfullsupport)$/;"	f	class:ns3::HtOperations
SetLdpc	ht-capabilities.cc	/^HtCapabilities::SetLdpc (uint8_t ldpc)$/;"	f	class:ns3::HtCapabilities
SetLdpc	yans-wifi-phy.cc	/^YansWifiPhy::SetLdpc (bool Ldpc)$/;"	f	class:ns3::YansWifiPhy
SetLength	ampdu-subframe-header.cc	/^AmpduSubframeHeader::SetLength (uint16_t length)$/;"	f	class:ns3::AmpduSubframeHeader
SetLength	amsdu-subframe-header.cc	/^AmsduSubframeHeader::SetLength (uint16_t length)$/;"	f	class:ns3::AmsduSubframeHeader
SetLinkDownCallback	regular-wifi-mac.cc	/^RegularWifiMac::SetLinkDownCallback (Callback<void> linkDown)$/;"	f	class:ns3::RegularWifiMac
SetLinkUpCallback	adhoc-wifi-mac.cc	/^AdhocWifiMac::SetLinkUpCallback (Callback<void> linkUp)$/;"	f	class:ns3::AdhocWifiMac
SetLinkUpCallback	ap-wifi-mac.cc	/^ApWifiMac::SetLinkUpCallback (Callback<void> linkUp)$/;"	f	class:ns3::ApWifiMac
SetLinkUpCallback	regular-wifi-mac.cc	/^RegularWifiMac::SetLinkUpCallback (Callback<void> linkUp)$/;"	f	class:ns3::RegularWifiMac
SetListenInterval	mgt-headers.cc	/^MgtAssocRequestHeader::SetListenInterval (uint16_t interval)$/;"	f	class:ns3::MgtAssocRequestHeader
SetLow	dca-txop.cc	/^DcaTxop::SetLow (Ptr<MacLow> low)$/;"	f	class:ns3::DcaTxop
SetLow	edca-txop-n.cc	/^EdcaTxopN::SetLow (Ptr<MacLow> low)$/;"	f	class:ns3::EdcaTxopN
SetMac	wifi-net-device.cc	/^WifiNetDevice::SetMac (Ptr<WifiMac> mac)$/;"	f	class:ns3::WifiNetDevice
SetManager	dca-txop.cc	/^DcaTxop::SetManager (DcfManager *manager)$/;"	f	class:ns3::DcaTxop
SetManager	edca-txop-n.cc	/^EdcaTxopN::SetManager (DcfManager *manager)$/;"	f	class:ns3::EdcaTxopN
SetMaxAmpduLength	ht-capabilities.cc	/^HtCapabilities::SetMaxAmpduLength (uint8_t maxampdulength)$/;"	f	class:ns3::HtCapabilities
SetMaxAmpduLengthExponent	vht-capabilities.cc	/^VhtCapabilities::SetMaxAmpduLengthExponent (uint8_t exponent)$/;"	f	class:ns3::VhtCapabilities
SetMaxAmpduSize	mpdu-standard-aggregator.cc	/^MpduStandardAggregator::SetMaxAmpduSize (uint32_t maxSize)$/;"	f	class:ns3::MpduStandardAggregator
SetMaxAmsduLength	ht-capabilities.cc	/^HtCapabilities::SetMaxAmsduLength (uint8_t maxamsdulength)$/;"	f	class:ns3::HtCapabilities
SetMaxAmsduSize	msdu-standard-aggregator.cc	/^MsduStandardAggregator::SetMaxAmsduSize (uint32_t maxSize)$/;"	f	class:ns3::MsduStandardAggregator
SetMaxCw	dca-txop.cc	/^DcaTxop::SetMaxCw (uint32_t maxCw)$/;"	f	class:ns3::DcaTxop
SetMaxCw	edca-txop-n.cc	/^EdcaTxopN::SetMaxCw (uint32_t maxCw)$/;"	f	class:ns3::EdcaTxopN
SetMaxDelay	wifi-mac-queue.cc	/^WifiMacQueue::SetMaxDelay (Time delay)$/;"	f	class:ns3::WifiMacQueue
SetMaxMissedBeacons	sta-wifi-mac.cc	/^StaWifiMac::SetMaxMissedBeacons (uint32_t missed)$/;"	f	class:ns3::StaWifiMac
SetMaxMpduLength	vht-capabilities.cc	/^VhtCapabilities::SetMaxMpduLength (uint8_t length)$/;"	f	class:ns3::VhtCapabilities
SetMaxPacketDelay	block-ack-manager.cc	/^BlockAckManager::SetMaxPacketDelay (Time maxDelay)$/;"	f	class:ns3::BlockAckManager
SetMaxPropagationDelay	wifi-mac.cc	/^WifiMac::SetMaxPropagationDelay (Time delay)$/;"	f	class:ns3::WifiMac
SetMaxSize	wifi-information-element-vector.cc	/^WifiInformationElementVector::SetMaxSize (uint16_t size)$/;"	f	class:ns3::WifiInformationElementVector
SetMaxSize	wifi-mac-queue.cc	/^WifiMacQueue::SetMaxSize (uint32_t maxSize)$/;"	f	class:ns3::WifiMacQueue
SetMaxSlrc	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetMaxSlrc (uint32_t maxSlrc)$/;"	f	class:ns3::WifiRemoteStationManager
SetMaxSsrc	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetMaxSsrc (uint32_t maxSsrc)$/;"	f	class:ns3::WifiRemoteStationManager
SetMinCw	dca-txop.cc	/^DcaTxop::SetMinCw (uint32_t minCw)$/;"	f	class:ns3::DcaTxop
SetMinCw	edca-txop-n.cc	/^EdcaTxopN::SetMinCw (uint32_t minCw)$/;"	f	class:ns3::EdcaTxopN
SetMobility	yans-wifi-phy.cc	/^YansWifiPhy::SetMobility (Ptr<MobilityModel> mobility)$/;"	f	class:ns3::YansWifiPhy
SetMode	wifi-tx-vector.cc	/^WifiTxVector::SetMode (WifiMode mode)$/;"	f	class:ns3::WifiTxVector
SetMoreFragments	wifi-mac-header.cc	/^void WifiMacHeader::SetMoreFragments (void)$/;"	f	class:ns3::WifiMacHeader
SetMpduAggregator	edca-txop-n.cc	/^EdcaTxopN::SetMpduAggregator (Ptr<MpduAggregator> aggr)$/;"	f	class:ns3::EdcaTxopN
SetMsduAggregator	edca-txop-n.cc	/^EdcaTxopN::SetMsduAggregator (Ptr<MsduAggregator> aggr)$/;"	f	class:ns3::EdcaTxopN
SetMtu	wifi-net-device.cc	/^WifiNetDevice::SetMtu (const uint16_t mtu)$/;"	f	class:ns3::WifiNetDevice
SetMultihopAction	wifi-mac-header.cc	/^WifiMacHeader::SetMultihopAction (void)$/;"	f	class:ns3::WifiMacHeader
SetNTxPower	yans-wifi-phy.cc	/^YansWifiPhy::SetNTxPower (uint32_t n)$/;"	f	class:ns3::YansWifiPhy
SetNess	wifi-tx-vector.cc	/^WifiTxVector::SetNess (uint8_t ness)$/;"	f	class:ns3::WifiTxVector
SetNextSample	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::SetNextSample (MinstrelHtWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelHtWifiManager
SetNoMoreFragments	wifi-mac-header.cc	/^void WifiMacHeader::SetNoMoreFragments (void)$/;"	f	class:ns3::WifiMacHeader
SetNoOfMpdus	ampdu-tag.cc	/^AmpduTag::SetNoOfMpdus (uint8_t noofmpdus)$/;"	f	class:ns3::AmpduTag
SetNoOrder	wifi-mac-header.cc	/^void WifiMacHeader::SetNoOrder (void)$/;"	f	class:ns3::WifiMacHeader
SetNoRetry	wifi-mac-header.cc	/^void WifiMacHeader::SetNoRetry (void)$/;"	f	class:ns3::WifiMacHeader
SetNode	wifi-net-device.cc	/^WifiNetDevice::SetNode (Ptr<Node> node)$/;"	f	class:ns3::WifiNetDevice
SetNoiseFigure	interference-helper.cc	/^InterferenceHelper::SetNoiseFigure (double value)$/;"	f	class:ns3::InterferenceHelper
SetNonErpPresent	erp-information.cc	/^ErpInformation::SetNonErpPresent (uint8_t nonErpPresent)$/;"	f	class:ns3::ErpInformation
SetNonGfHtStasPresent	ht-operations.cc	/^HtOperations::SetNonGfHtStasPresent (uint8_t nongfhtstaspresent)$/;"	f	class:ns3::HtOperations
SetNss	wifi-tx-vector.cc	/^WifiTxVector::SetNss (uint8_t nss)$/;"	f	class:ns3::WifiTxVector
SetNumberOfReceiveAntennas	yans-wifi-phy.cc	/^YansWifiPhy::SetNumberOfReceiveAntennas (uint32_t rx)$/;"	f	class:ns3::YansWifiPhy
SetNumberOfTransmitAntennas	yans-wifi-phy.cc	/^YansWifiPhy::SetNumberOfTransmitAntennas (uint32_t tx)$/;"	f	class:ns3::YansWifiPhy
SetObssNonHtStasPresent	ht-operations.cc	/^HtOperations::SetObssNonHtStasPresent (uint8_t obssnonhtstaspresent)$/;"	f	class:ns3::HtOperations
SetOrder	wifi-mac-header.cc	/^void WifiMacHeader::SetOrder (void)$/;"	f	class:ns3::WifiMacHeader
SetParameterSet	mgt-headers.cc	/^MgtAddBaRequestHeader::SetParameterSet (uint16_t params)$/;"	f	class:ns3::MgtAddBaRequestHeader
SetParameterSet	mgt-headers.cc	/^MgtAddBaResponseHeader::SetParameterSet (uint16_t params)$/;"	f	class:ns3::MgtAddBaResponseHeader
SetParameterSet	mgt-headers.cc	/^MgtDelBaHeader::SetParameterSet (uint16_t params)$/;"	f	class:ns3::MgtDelBaHeader
SetPcoActive	ht-operations.cc	/^HtOperations::SetPcoActive (uint8_t pcoactive)$/;"	f	class:ns3::HtOperations
SetPhase	ht-operations.cc	/^HtOperations::SetPhase (uint8_t pcophase)$/;"	f	class:ns3::HtOperations
SetPhy	mac-low.cc	/^MacLow::SetPhy (Ptr<WifiPhy> phy)$/;"	f	class:ns3::MacLow
SetPhy	wifi-net-device.cc	/^WifiNetDevice::SetPhy (Ptr<WifiPhy> phy)$/;"	f	class:ns3::WifiNetDevice
SetPifs	mac-low.cc	/^MacLow::SetPifs (Time pifs)$/;"	f	class:ns3::MacLow
SetPifs	regular-wifi-mac.cc	/^RegularWifiMac::SetPifs (Time pifs)$/;"	f	class:ns3::RegularWifiMac
SetPrimaryChannel	ht-operations.cc	/^HtOperations::SetPrimaryChannel (uint8_t ctrl)$/;"	f	class:ns3::HtOperations
SetProbeReq	wifi-mac-header.cc	/^WifiMacHeader::SetProbeReq (void)$/;"	f	class:ns3::WifiMacHeader
SetProbeRequestTimeout	sta-wifi-mac.cc	/^StaWifiMac::SetProbeRequestTimeout (Time timeout)$/;"	f	class:ns3::StaWifiMac
SetProbeResp	wifi-mac-header.cc	/^WifiMacHeader::SetProbeResp (void)$/;"	f	class:ns3::WifiMacHeader
SetPromisc	mac-low.cc	/^MacLow::SetPromisc (void)$/;"	f	class:ns3::MacLow
SetPromisc	regular-wifi-mac.cc	/^RegularWifiMac::SetPromisc (void)$/;"	f	class:ns3::RegularWifiMac
SetPromiscReceiveCallback	wifi-net-device.cc	/^WifiNetDevice::SetPromiscReceiveCallback (PromiscReceiveCallback cb)$/;"	f	class:ns3::WifiNetDevice
SetPropagationDelayModel	yans-wifi-channel.cc	/^YansWifiChannel::SetPropagationDelayModel (Ptr<PropagationDelayModel> delay)$/;"	f	class:ns3::YansWifiChannel
SetPropagationLossModel	yans-wifi-channel.cc	/^YansWifiChannel::SetPropagationLossModel (Ptr<PropagationLossModel> loss)$/;"	f	class:ns3::YansWifiChannel
SetProtectionMode	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetProtectionMode (WifiRemoteStationManager::ProtectionMode mode)$/;"	f	class:ns3::WifiRemoteStationManager
SetQosAckPolicy	wifi-mac-header.cc	/^void WifiMacHeader::SetQosAckPolicy (enum QosAckPolicy policy)$/;"	f	class:ns3::WifiMacHeader
SetQosAmsdu	wifi-mac-header.cc	/^void WifiMacHeader::SetQosAmsdu (void)$/;"	f	class:ns3::WifiMacHeader
SetQosBlockAck	wifi-mac-header.cc	/^WifiMacHeader::SetQosBlockAck ()$/;"	f	class:ns3::WifiMacHeader
SetQosControl	wifi-mac-header.cc	/^WifiMacHeader::SetQosControl (uint16_t qos)$/;"	f	class:ns3::WifiMacHeader
SetQosEosp	wifi-mac-header.cc	/^void WifiMacHeader::SetQosEosp ()$/;"	f	class:ns3::WifiMacHeader
SetQosMeshControlPresent	wifi-mac-header.cc	/^void WifiMacHeader::SetQosMeshControlPresent (void)$/;"	f	class:ns3::WifiMacHeader
SetQosNoAck	wifi-mac-header.cc	/^WifiMacHeader::SetQosNoAck ()$/;"	f	class:ns3::WifiMacHeader
SetQosNoAmsdu	wifi-mac-header.cc	/^void WifiMacHeader::SetQosNoAmsdu (void)$/;"	f	class:ns3::WifiMacHeader
SetQosNoEosp	wifi-mac-header.cc	/^void WifiMacHeader::SetQosNoEosp ()$/;"	f	class:ns3::WifiMacHeader
SetQosNoMeshControlPresent	wifi-mac-header.cc	/^void WifiMacHeader::SetQosNoMeshControlPresent ()$/;"	f	class:ns3::WifiMacHeader
SetQosNormalAck	wifi-mac-header.cc	/^WifiMacHeader::SetQosNormalAck ()$/;"	f	class:ns3::WifiMacHeader
SetQosSupported	regular-wifi-mac.cc	/^RegularWifiMac::SetQosSupported (bool enable)$/;"	f	class:ns3::RegularWifiMac
SetQosTid	wifi-mac-header.cc	/^void WifiMacHeader::SetQosTid (uint8_t tid)$/;"	f	class:ns3::WifiMacHeader
SetQosTxopLimit	wifi-mac-header.cc	/^void WifiMacHeader::SetQosTxopLimit (uint8_t txop)$/;"	f	class:ns3::WifiMacHeader
SetQueue	block-ack-manager.cc	/^BlockAckManager::SetQueue (Ptr<WifiMacQueue> queue)$/;"	f	class:ns3::BlockAckManager
SetRawDuration	wifi-mac-header.cc	/^WifiMacHeader::SetRawDuration (uint16_t duration)$/;"	f	class:ns3::WifiMacHeader
SetReceiveCallback	wifi-net-device.cc	/^WifiNetDevice::SetReceiveCallback (NetDevice::ReceiveCallback cb)$/;"	f	class:ns3::WifiNetDevice
SetReceiveErrorCallback	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SetReceiveErrorCallback (WifiPhy::RxErrorCallback callback)$/;"	f	class:ns3::WifiPhyStateHelper
SetReceiveErrorCallback	yans-wifi-phy.cc	/^YansWifiPhy::SetReceiveErrorCallback (RxErrorCallback callback)$/;"	f	class:ns3::YansWifiPhy
SetReceiveOkCallback	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SetReceiveOkCallback (WifiPhy::RxOkCallback callback)$/;"	f	class:ns3::WifiPhyStateHelper
SetReceiveOkCallback	yans-wifi-phy.cc	/^YansWifiPhy::SetReceiveOkCallback (RxOkCallback callback)$/;"	f	class:ns3::YansWifiPhy
SetReceivedFragment	ctrl-headers.cc	/^CtrlBAckResponseHeader::SetReceivedFragment (uint16_t seq, uint8_t frag)$/;"	f	class:ns3::CtrlBAckResponseHeader
SetReceivedPacket	ctrl-headers.cc	/^CtrlBAckResponseHeader::SetReceivedPacket (uint16_t seq)$/;"	f	class:ns3::CtrlBAckResponseHeader
SetRemoteStationManager	wifi-net-device.cc	/^WifiNetDevice::SetRemoteStationManager (Ptr<WifiRemoteStationManager> manager)$/;"	f	class:ns3::WifiNetDevice
SetRetries	wifi-tx-vector.cc	/^WifiTxVector::SetRetries (uint8_t retries)$/;"	f	class:ns3::WifiTxVector
SetRetry	wifi-mac-header.cc	/^void WifiMacHeader::SetRetry (void)$/;"	f	class:ns3::WifiMacHeader
SetRifs	mac-low.cc	/^MacLow::SetRifs (Time rifs)$/;"	f	class:ns3::MacLow
SetRifs	regular-wifi-mac.cc	/^RegularWifiMac::SetRifs (Time rifs)$/;"	f	class:ns3::RegularWifiMac
SetRifsMode	ht-operations.cc	/^HtOperations::SetRifsMode (uint8_t rifsmode)$/;"	f	class:ns3::HtOperations
SetRtsCtsThreshold	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetRtsCtsThreshold (uint32_t threshold)$/;"	f	class:ns3::WifiRemoteStationManager
SetRxCallback	mac-low.cc	/^MacLow::SetRxCallback (Callback<void, Ptr<Packet>, const WifiMacHeader *> callback)$/;"	f	class:ns3::MacLow
SetRxCurrentA	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::SetRxCurrentA (double rxCurrentA)$/;"	f	class:ns3::WifiRadioEnergyModel
SetRxGain	yans-wifi-phy.cc	/^YansWifiPhy::SetRxGain (double gain)$/;"	f	class:ns3::YansWifiPhy
SetRxHighestSupportedDataRate	ht-capabilities.cc	/^HtCapabilities::SetRxHighestSupportedDataRate (uint16_t maxsupportedrate)$/;"	f	class:ns3::HtCapabilities
SetRxHighestSupportedDataRate	ht-operations.cc	/^HtOperations::SetRxHighestSupportedDataRate (uint16_t maxsupportedrate)$/;"	f	class:ns3::HtOperations
SetRxHighestSupportedLgiDataRate	vht-capabilities.cc	/^VhtCapabilities::SetRxHighestSupportedLgiDataRate (uint16_t supporteddatarate)$/;"	f	class:ns3::VhtCapabilities
SetRxLdpc	vht-capabilities.cc	/^VhtCapabilities::SetRxLdpc (uint8_t rxldpc)$/;"	f	class:ns3::VhtCapabilities
SetRxMcsBitmask	ht-capabilities.cc	/^HtCapabilities::SetRxMcsBitmask (uint8_t index)$/;"	f	class:ns3::HtCapabilities
SetRxMcsBitmask	ht-operations.cc	/^HtOperations::SetRxMcsBitmask (uint8_t index)$/;"	f	class:ns3::HtOperations
SetRxMcsMap	vht-capabilities.cc	/^VhtCapabilities::SetRxMcsMap (uint16_t map)$/;"	f	class:ns3::VhtCapabilities
SetRxMcsMap	vht-capabilities.cc	/^VhtCapabilities::SetRxMcsMap (uint8_t mcs, uint8_t nss)$/;"	f	class:ns3::VhtCapabilities
SetRxNoiseFigure	yans-wifi-phy.cc	/^YansWifiPhy::SetRxNoiseFigure (double noiseFigureDb)$/;"	f	class:ns3::YansWifiPhy
SetRxStbc	vht-capabilities.cc	/^VhtCapabilities::SetRxStbc (uint8_t rxstbc)$/;"	f	class:ns3::VhtCapabilities
SetSecondaryChannelOffset	ht-operations.cc	/^HtOperations::SetSecondaryChannelOffset (uint8_t secondarychanneloffset)$/;"	f	class:ns3::HtOperations
SetSequenceControl	mac-rx-middle.cc	/^  void SetSequenceControl (uint16_t sequenceControl)$/;"	f	class:ns3::OriginatorRxStatus
SetSequenceControl	wifi-mac-header.cc	/^WifiMacHeader::SetSequenceControl (uint16_t seq)$/;"	f	class:ns3::WifiMacHeader
SetSequenceNumber	wifi-mac-header.cc	/^void WifiMacHeader::SetSequenceNumber (uint16_t seq)$/;"	f	class:ns3::WifiMacHeader
SetShortGuardInterval	wifi-tx-vector.cc	/^WifiTxVector::SetShortGuardInterval (bool guardinterval)$/;"	f	class:ns3::WifiTxVector
SetShortGuardInterval20	ht-capabilities.cc	/^HtCapabilities::SetShortGuardInterval20 (uint8_t shortguardinterval)$/;"	f	class:ns3::HtCapabilities
SetShortGuardInterval40	ht-capabilities.cc	/^HtCapabilities::SetShortGuardInterval40 (uint8_t shortguardinterval)$/;"	f	class:ns3::HtCapabilities
SetShortGuardIntervalFor160Mhz	vht-capabilities.cc	/^VhtCapabilities::SetShortGuardIntervalFor160Mhz (uint8_t shortguardinterval)$/;"	f	class:ns3::VhtCapabilities
SetShortGuardIntervalFor80Mhz	vht-capabilities.cc	/^VhtCapabilities::SetShortGuardIntervalFor80Mhz (uint8_t shortguardinterval)$/;"	f	class:ns3::VhtCapabilities
SetShortPlcpPreambleSupported	yans-wifi-phy.cc	/^YansWifiPhy::SetShortPlcpPreambleSupported (bool enable)$/;"	f	class:ns3::YansWifiPhy
SetShortPreamble	capability-information.cc	/^CapabilityInformation::SetShortPreamble (bool shortPreamble)$/;"	f	class:ns3::CapabilityInformation
SetShortPreambleEnabled	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetShortPreambleEnabled (bool enable)$/;"	f	class:ns3::WifiRemoteStationManager
SetShortSlotTime	capability-information.cc	/^CapabilityInformation::SetShortSlotTime (bool shortSlotTime)$/;"	f	class:ns3::CapabilityInformation
SetShortSlotTimeEnabled	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetShortSlotTimeEnabled (bool enable)$/;"	f	class:ns3::WifiRemoteStationManager
SetShortSlotTimeSupported	regular-wifi-mac.cc	/^RegularWifiMac::SetShortSlotTimeSupported (bool enable)$/;"	f	class:ns3::RegularWifiMac
SetSifs	dcf-manager.cc	/^DcfManager::SetSifs (Time sifs)$/;"	f	class:ns3::DcfManager
SetSifs	mac-low.cc	/^MacLow::SetSifs (Time sifs)$/;"	f	class:ns3::MacLow
SetSifs	regular-wifi-mac.cc	/^RegularWifiMac::SetSifs (Time sifs)$/;"	f	class:ns3::RegularWifiMac
SetSig	ampdu-subframe-header.cc	/^AmpduSubframeHeader::SetSig ()$/;"	f	class:ns3::AmpduSubframeHeader
SetSleepCurrentA	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::SetSleepCurrentA (double sleepCurrentA)$/;"	f	class:ns3::WifiRadioEnergyModel
SetSleepMode	yans-wifi-phy.cc	/^YansWifiPhy::SetSleepMode (void)$/;"	f	class:ns3::YansWifiPhy
SetSlot	dcf-manager.cc	/^DcfManager::SetSlot (Time slotTime)$/;"	f	class:ns3::DcfManager
SetSlot	regular-wifi-mac.cc	/^RegularWifiMac::SetSlot (Time slotTime)$/;"	f	class:ns3::RegularWifiMac
SetSlotTime	mac-low.cc	/^MacLow::SetSlotTime (Time slotTime)$/;"	f	class:ns3::MacLow
SetSourceAddr	amsdu-subframe-header.cc	/^AmsduSubframeHeader::SetSourceAddr (Mac48Address from)$/;"	f	class:ns3::AmsduSubframeHeader
SetSsid	mgt-headers.cc	/^MgtAssocRequestHeader::SetSsid (Ssid ssid)$/;"	f	class:ns3::MgtAssocRequestHeader
SetSsid	mgt-headers.cc	/^MgtProbeRequestHeader::SetSsid (Ssid ssid)$/;"	f	class:ns3::MgtProbeRequestHeader
SetSsid	mgt-headers.cc	/^MgtProbeResponseHeader::SetSsid (Ssid ssid)$/;"	f	class:ns3::MgtProbeResponseHeader
SetSsid	regular-wifi-mac.cc	/^RegularWifiMac::SetSsid (Ssid ssid)$/;"	f	class:ns3::RegularWifiMac
SetStaChannelWidth	ht-operations.cc	/^HtOperations::SetStaChannelWidth (uint8_t stachannelwidth)$/;"	f	class:ns3::HtOperations
SetStartingSequence	block-ack-agreement.cc	/^BlockAckAgreement::SetStartingSequence (uint16_t seq)$/;"	f	class:ns3::BlockAckAgreement
SetStartingSequence	ctrl-headers.cc	/^CtrlBAckRequestHeader::SetStartingSequence (uint16_t seq)$/;"	f	class:ns3::CtrlBAckRequestHeader
SetStartingSequence	ctrl-headers.cc	/^CtrlBAckResponseHeader::SetStartingSequence (uint16_t seq)$/;"	f	class:ns3::CtrlBAckResponseHeader
SetStartingSequence	mgt-headers.cc	/^MgtAddBaRequestHeader::SetStartingSequence (uint16_t seq)$/;"	f	class:ns3::MgtAddBaRequestHeader
SetStartingSequenceControl	block-ack-agreement.cc	/^BlockAckAgreement::SetStartingSequenceControl (uint16_t seq)$/;"	f	class:ns3::BlockAckAgreement
SetStartingSequenceControl	ctrl-headers.cc	/^CtrlBAckRequestHeader::SetStartingSequenceControl (uint16_t seqControl)$/;"	f	class:ns3::CtrlBAckRequestHeader
SetStartingSequenceControl	ctrl-headers.cc	/^CtrlBAckResponseHeader::SetStartingSequenceControl (uint16_t seqControl)$/;"	f	class:ns3::CtrlBAckResponseHeader
SetStartingSequenceControl	mgt-headers.cc	/^MgtAddBaRequestHeader::SetStartingSequenceControl (uint16_t seqControl)$/;"	f	class:ns3::MgtAddBaRequestHeader
SetState	originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::SetState (enum State state)$/;"	f	class:ns3::OriginatorBlockAckAgreement
SetState	sta-wifi-mac.cc	/^StaWifiMac::SetState (MacState value)$/;"	f	class:ns3::StaWifiMac
SetStatusCode	mgt-headers.cc	/^MgtAddBaResponseHeader::SetStatusCode (StatusCode code)$/;"	f	class:ns3::MgtAddBaResponseHeader
SetStatusCode	mgt-headers.cc	/^MgtAssocResponseHeader::SetStatusCode (StatusCode code)$/;"	f	class:ns3::MgtAssocResponseHeader
SetStbc	wifi-tx-vector.cc	/^WifiTxVector::SetStbc (bool stbc)$/;"	f	class:ns3::WifiTxVector
SetStbc	yans-wifi-phy.cc	/^YansWifiPhy::SetStbc (bool stbc)$/;"	f	class:ns3::YansWifiPhy
SetStbcBeacon	ht-operations.cc	/^HtOperations::SetStbcBeacon (uint8_t stbcbeacon)$/;"	f	class:ns3::HtOperations
SetSuccess	status-code.cc	/^StatusCode::SetSuccess (void)$/;"	f	class:ns3::StatusCode
SetSupportedChannelWidth	ht-capabilities.cc	/^HtCapabilities::SetSupportedChannelWidth (uint8_t supportedchannelwidth)$/;"	f	class:ns3::HtCapabilities
SetSupportedChannelWidthSet	vht-capabilities.cc	/^VhtCapabilities::SetSupportedChannelWidthSet (uint8_t channelwidthset)$/;"	f	class:ns3::VhtCapabilities
SetSupportedMcsAndNssSet	vht-capabilities.cc	/^VhtCapabilities::SetSupportedMcsAndNssSet (uint64_t ctrl)$/;"	f	class:ns3::VhtCapabilities
SetSupportedMcsSet	ht-capabilities.cc	/^HtCapabilities::SetSupportedMcsSet (uint64_t ctrl1, uint64_t ctrl2)$/;"	f	class:ns3::HtCapabilities
SetSupportedRates	mgt-headers.cc	/^MgtAssocRequestHeader::SetSupportedRates (SupportedRates rates)$/;"	f	class:ns3::MgtAssocRequestHeader
SetSupportedRates	mgt-headers.cc	/^MgtAssocResponseHeader::SetSupportedRates (SupportedRates rates)$/;"	f	class:ns3::MgtAssocResponseHeader
SetSupportedRates	mgt-headers.cc	/^MgtProbeRequestHeader::SetSupportedRates (SupportedRates rates)$/;"	f	class:ns3::MgtProbeRequestHeader
SetSupportedRates	mgt-headers.cc	/^MgtProbeResponseHeader::SetSupportedRates (SupportedRates rates)$/;"	f	class:ns3::MgtProbeResponseHeader
SetSupportedRates	supported-rates.cc	/^ExtendedSupportedRatesIE::SetSupportedRates (SupportedRates *sr)$/;"	f	class:ns3::ExtendedSupportedRatesIE
SetSwitchingCurrentA	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::SetSwitchingCurrentA (double switchingCurrentA)$/;"	f	class:ns3::WifiRadioEnergyModel
SetTid	mgt-headers.cc	/^MgtAddBaRequestHeader::SetTid (uint8_t tid)$/;"	f	class:ns3::MgtAddBaRequestHeader
SetTid	mgt-headers.cc	/^MgtAddBaResponseHeader::SetTid (uint8_t tid)$/;"	f	class:ns3::MgtAddBaResponseHeader
SetTid	mgt-headers.cc	/^MgtDelBaHeader::SetTid (uint8_t tid)$/;"	f	class:ns3::MgtDelBaHeader
SetTid	qos-tag.cc	/^QosTag::SetTid (uint8_t tid)$/;"	f	class:ns3::QosTag
SetTidInfo	ctrl-headers.cc	/^CtrlBAckRequestHeader::SetTidInfo (uint8_t tid)$/;"	f	class:ns3::CtrlBAckRequestHeader
SetTidInfo	ctrl-headers.cc	/^CtrlBAckResponseHeader::SetTidInfo (uint8_t tid)$/;"	f	class:ns3::CtrlBAckResponseHeader
SetTimeout	block-ack-agreement.cc	/^BlockAckAgreement::SetTimeout (uint16_t timeout)$/;"	f	class:ns3::BlockAckAgreement
SetTimeout	mgt-headers.cc	/^MgtAddBaRequestHeader::SetTimeout (uint16_t timeout)$/;"	f	class:ns3::MgtAddBaRequestHeader
SetTimeout	mgt-headers.cc	/^MgtAddBaResponseHeader::SetTimeout (uint16_t timeout)$/;"	f	class:ns3::MgtAddBaResponseHeader
SetTxBfCapabilities	ht-capabilities.cc	/^HtCapabilities::SetTxBfCapabilities (uint32_t ctrl)$/;"	f	class:ns3::HtCapabilities
SetTxCurrentA	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::SetTxCurrentA (double txCurrentA)$/;"	f	class:ns3::WifiRadioEnergyModel
SetTxCurrentFromModel	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::SetTxCurrentFromModel (double txPowerDbm)$/;"	f	class:ns3::WifiRadioEnergyModel
SetTxCurrentModel	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::SetTxCurrentModel (Ptr<WifiTxCurrentModel> model)$/;"	f	class:ns3::WifiRadioEnergyModel
SetTxFailedCallback	block-ack-manager.cc	/^BlockAckManager::SetTxFailedCallback (TxFailed callback)$/;"	f	class:ns3::BlockAckManager
SetTxFailedCallback	dca-txop.cc	/^DcaTxop::SetTxFailedCallback (TxFailed callback)$/;"	f	class:ns3::DcaTxop
SetTxFailedCallback	edca-txop-n.cc	/^EdcaTxopN::SetTxFailedCallback (TxFailed callback)$/;"	f	class:ns3::EdcaTxopN
SetTxGain	yans-wifi-phy.cc	/^YansWifiPhy::SetTxGain (double gain)$/;"	f	class:ns3::YansWifiPhy
SetTxHighestSupportedLgiDataRate	vht-capabilities.cc	/^VhtCapabilities::SetTxHighestSupportedLgiDataRate (uint16_t supporteddatarate)$/;"	f	class:ns3::VhtCapabilities
SetTxMaxNSpatialStreams	ht-capabilities.cc	/^HtCapabilities::SetTxMaxNSpatialStreams (uint8_t maxtxspatialstreams)$/;"	f	class:ns3::HtCapabilities
SetTxMaxNSpatialStreams	ht-operations.cc	/^HtOperations::SetTxMaxNSpatialStreams (uint8_t maxtxspatialstreams)$/;"	f	class:ns3::HtOperations
SetTxMcsMap	vht-capabilities.cc	/^VhtCapabilities::SetTxMcsMap (uint16_t map)$/;"	f	class:ns3::VhtCapabilities
SetTxMcsMap	vht-capabilities.cc	/^VhtCapabilities::SetTxMcsMap (uint8_t mcs, uint8_t nss)$/;"	f	class:ns3::VhtCapabilities
SetTxMcsSetDefined	ht-capabilities.cc	/^HtCapabilities::SetTxMcsSetDefined (uint8_t txmcssetdefined)$/;"	f	class:ns3::HtCapabilities
SetTxMcsSetDefined	ht-operations.cc	/^HtOperations::SetTxMcsSetDefined (uint8_t txmcssetdefined)$/;"	f	class:ns3::HtOperations
SetTxMiddle	block-ack-manager.cc	/^BlockAckManager::SetTxMiddle (MacTxMiddle* txMiddle)$/;"	f	class:ns3::BlockAckManager
SetTxMiddle	dca-txop.cc	/^void DcaTxop::SetTxMiddle (MacTxMiddle *txMiddle)$/;"	f	class:ns3::DcaTxop
SetTxMiddle	edca-txop-n.cc	/^EdcaTxopN::SetTxMiddle (MacTxMiddle *txMiddle)$/;"	f	class:ns3::EdcaTxopN
SetTxOkCallback	block-ack-manager.cc	/^BlockAckManager::SetTxOkCallback (TxOk callback)$/;"	f	class:ns3::BlockAckManager
SetTxOkCallback	dca-txop.cc	/^DcaTxop::SetTxOkCallback (TxOk callback)$/;"	f	class:ns3::DcaTxop
SetTxOkCallback	edca-txop-n.cc	/^EdcaTxopN::SetTxOkCallback (TxOk callback)$/;"	f	class:ns3::EdcaTxopN
SetTxPowerEnd	yans-wifi-phy.cc	/^YansWifiPhy::SetTxPowerEnd (double end)$/;"	f	class:ns3::YansWifiPhy
SetTxPowerLevel	wifi-tx-vector.cc	/^WifiTxVector::SetTxPowerLevel (uint8_t powerlevel)$/;"	f	class:ns3::WifiTxVector
SetTxPowerStart	yans-wifi-phy.cc	/^YansWifiPhy::SetTxPowerStart (double start)$/;"	f	class:ns3::YansWifiPhy
SetTxRxMcsSetUnequal	ht-capabilities.cc	/^HtCapabilities::SetTxRxMcsSetUnequal (uint8_t txrxmcssetunequal)$/;"	f	class:ns3::HtCapabilities
SetTxRxMcsSetUnequal	ht-operations.cc	/^HtOperations::SetTxRxMcsSetUnequal (uint8_t txrxmcssetunequal)$/;"	f	class:ns3::HtOperations
SetTxStbc	vht-capabilities.cc	/^VhtCapabilities::SetTxStbc (uint8_t txstbc)$/;"	f	class:ns3::VhtCapabilities
SetTxUnequalModulation	ht-capabilities.cc	/^HtCapabilities::SetTxUnequalModulation (uint8_t txunequalmodulation)$/;"	f	class:ns3::HtCapabilities
SetTxUnequalModulation	ht-operations.cc	/^HtOperations::SetTxUnequalModulation (uint8_t txunequalmodulation)$/;"	f	class:ns3::HtOperations
SetType	ctrl-headers.cc	/^CtrlBAckRequestHeader::SetType (enum BlockAckType type)$/;"	f	class:ns3::CtrlBAckRequestHeader
SetType	ctrl-headers.cc	/^CtrlBAckResponseHeader::SetType (enum BlockAckType type)$/;"	f	class:ns3::CtrlBAckResponseHeader
SetType	wifi-mac-header.cc	/^WifiMacHeader::SetType (enum WifiMacType type)$/;"	f	class:ns3::WifiMacHeader
SetTypeData	wifi-mac-header.cc	/^WifiMacHeader::SetTypeData (void)$/;"	f	class:ns3::WifiMacHeader
SetTypeOfStation	edca-txop-n.cc	/^EdcaTxopN::SetTypeOfStation (enum TypeOfStation type)$/;"	f	class:ns3::EdcaTxopN
SetTypeOfStation	regular-wifi-mac.cc	/^RegularWifiMac::SetTypeOfStation (TypeOfStation type)$/;"	f	class:ns3::RegularWifiMac
SetUnblockDestinationCallback	block-ack-manager.cc	/^BlockAckManager::SetUnblockDestinationCallback (Callback<void, Mac48Address, uint8_t> callback)$/;"	f	class:ns3::BlockAckManager
SetUpdateTxCurrentCallback	wifi-radio-energy-model.cc	/^WifiRadioEnergyModelPhyListener::SetUpdateTxCurrentCallback (UpdateTxCurrentCallback callback)$/;"	f	class:ns3::WifiRadioEnergyModelPhyListener
SetUseNonErpProtection	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetUseNonErpProtection (bool enable)$/;"	f	class:ns3::WifiRemoteStationManager
SetUseProtection	erp-information.cc	/^ErpInformation::SetUseProtection (uint8_t useProtection)$/;"	f	class:ns3::ErpInformation
SetUserPriority	qos-tag.cc	/^QosTag::SetUserPriority (UserPriority up)$/;"	f	class:ns3::QosTag
SetVhtCapabilities	mgt-headers.cc	/^MgtAssocRequestHeader::SetVhtCapabilities (VhtCapabilities vhtcapabilities)$/;"	f	class:ns3::MgtAssocRequestHeader
SetVhtCapabilities	mgt-headers.cc	/^MgtAssocResponseHeader::SetVhtCapabilities (VhtCapabilities vhtcapabilities)$/;"	f	class:ns3::MgtAssocResponseHeader
SetVhtCapabilities	mgt-headers.cc	/^MgtProbeRequestHeader::SetVhtCapabilities (VhtCapabilities vhtcapabilities)$/;"	f	class:ns3::MgtProbeRequestHeader
SetVhtCapabilities	mgt-headers.cc	/^MgtProbeResponseHeader::SetVhtCapabilities (VhtCapabilities vhtcapabilities)$/;"	f	class:ns3::MgtProbeResponseHeader
SetVhtCapabilitiesInfo	vht-capabilities.cc	/^VhtCapabilities::SetVhtCapabilitiesInfo (uint32_t ctrl)$/;"	f	class:ns3::VhtCapabilities
SetVhtSupported	regular-wifi-mac.cc	/^RegularWifiMac::SetVhtSupported (bool enable)$/;"	f	class:ns3::RegularWifiMac
SetVhtSupported	vht-capabilities.cc	/^VhtCapabilities::SetVhtSupported (uint8_t vhtsupported)$/;"	f	class:ns3::VhtCapabilities
SetVhtSupported	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetVhtSupported (bool enable)$/;"	f	class:ns3::WifiRemoteStationManager
SetViBlockAckInactivityTimeout	regular-wifi-mac.cc	/^RegularWifiMac::SetViBlockAckInactivityTimeout (uint16_t timeout)$/;"	f	class:ns3::RegularWifiMac
SetViBlockAckThreshold	regular-wifi-mac.cc	/^RegularWifiMac::SetViBlockAckThreshold (uint8_t threshold)$/;"	f	class:ns3::RegularWifiMac
SetViMaxAmpduSize	regular-wifi-mac.cc	/^RegularWifiMac::SetViMaxAmpduSize (uint32_t size)$/;"	f	class:ns3::RegularWifiMac
SetViMaxAmsduSize	regular-wifi-mac.cc	/^RegularWifiMac::SetViMaxAmsduSize (uint32_t size)$/;"	f	class:ns3::RegularWifiMac
SetVoBlockAckInactivityTimeout	regular-wifi-mac.cc	/^RegularWifiMac::SetVoBlockAckInactivityTimeout (uint16_t timeout)$/;"	f	class:ns3::RegularWifiMac
SetVoBlockAckThreshold	regular-wifi-mac.cc	/^RegularWifiMac::SetVoBlockAckThreshold (uint8_t threshold)$/;"	f	class:ns3::RegularWifiMac
SetVoMaxAmpduSize	regular-wifi-mac.cc	/^RegularWifiMac::SetVoMaxAmpduSize (uint32_t size)$/;"	f	class:ns3::RegularWifiMac
SetVoMaxAmsduSize	regular-wifi-mac.cc	/^RegularWifiMac::SetVoMaxAmsduSize (uint32_t size)$/;"	f	class:ns3::RegularWifiMac
SetVoltage	wifi-tx-current-model.cc	/^LinearWifiTxCurrentModel::SetVoltage (double voltage)$/;"	f	class:ns3::LinearWifiTxCurrentModel
SetWifiPhy	regular-wifi-mac.cc	/^RegularWifiMac::SetWifiPhy (Ptr<WifiPhy> phy)$/;"	f	class:ns3::RegularWifiMac
SetWifiRadioState	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::SetWifiRadioState (const WifiPhy::State state)$/;"	f	class:ns3::WifiRadioEnergyModel
SetWifiRemoteStationManager	ap-wifi-mac.cc	/^ApWifiMac::SetWifiRemoteStationManager (Ptr<WifiRemoteStationManager> stationManager)$/;"	f	class:ns3::ApWifiMac
SetWifiRemoteStationManager	block-ack-manager.cc	/^BlockAckManager::SetWifiRemoteStationManager (Ptr<WifiRemoteStationManager> manager)$/;"	f	class:ns3::BlockAckManager
SetWifiRemoteStationManager	dca-txop.cc	/^DcaTxop::SetWifiRemoteStationManager (Ptr<WifiRemoteStationManager> remoteManager)$/;"	f	class:ns3::DcaTxop
SetWifiRemoteStationManager	edca-txop-n.cc	/^EdcaTxopN::SetWifiRemoteStationManager (Ptr<WifiRemoteStationManager> remoteManager)$/;"	f	class:ns3::EdcaTxopN
SetWifiRemoteStationManager	mac-low.cc	/^MacLow::SetWifiRemoteStationManager (Ptr<WifiRemoteStationManager> manager)$/;"	f	class:ns3::MacLow
SetWifiRemoteStationManager	regular-wifi-mac.cc	/^RegularWifiMac::SetWifiRemoteStationManager (Ptr<WifiRemoteStationManager> stationManager)$/;"	f	class:ns3::RegularWifiMac
SetWinEnd	block-ack-agreement.cc	/^BlockAckAgreement::SetWinEnd (uint16_t seq)$/;"	f	class:ns3::BlockAckAgreement
SetupBlockAckIfNeeded	edca-txop-n.cc	/^EdcaTxopN::SetupBlockAckIfNeeded ()$/;"	f	class:ns3::EdcaTxopN
SetupEdcaQueue	regular-wifi-mac.cc	/^RegularWifiMac::SetupEdcaQueue (enum AcIndex ac)$/;"	f	class:ns3::RegularWifiMac
SetupLowListener	dcf-manager.cc	/^DcfManager::SetupLowListener (Ptr<MacLow> low)$/;"	f	class:ns3::DcfManager
SetupMac	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::SetupMac (Ptr<WifiMac> mac)$/;"	f	class:ns3::MinstrelHtWifiManager
SetupMac	minstrel-wifi-manager.cc	/^MinstrelWifiManager::SetupMac (Ptr<WifiMac> mac)$/;"	f	class:ns3::MinstrelWifiManager
SetupMac	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetupMac (Ptr<WifiMac> mac)$/;"	f	class:ns3::WifiRemoteStationManager
SetupPhy	aparf-wifi-manager.cc	/^AparfWifiManager::SetupPhy (Ptr<WifiPhy> phy)$/;"	f	class:ns3::AparfWifiManager
SetupPhy	ideal-wifi-manager.cc	/^IdealWifiManager::SetupPhy (Ptr<WifiPhy> phy)$/;"	f	class:ns3::IdealWifiManager
SetupPhy	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::SetupPhy (Ptr<WifiPhy> phy)$/;"	f	class:ns3::MinstrelHtWifiManager
SetupPhy	minstrel-wifi-manager.cc	/^MinstrelWifiManager::SetupPhy (Ptr<WifiPhy> phy)$/;"	f	class:ns3::MinstrelWifiManager
SetupPhy	parf-wifi-manager.cc	/^ParfWifiManager::SetupPhy (Ptr<WifiPhy> phy)$/;"	f	class:ns3::ParfWifiManager
SetupPhy	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetupPhy (Ptr<WifiPhy> phy)$/;"	f	class:ns3::WifiRemoteStationManager
SetupPhyListener	dcf-manager.cc	/^DcfManager::SetupPhyListener (Ptr<WifiPhy> phy)$/;"	f	class:ns3::DcfManager
SetupPhyMacLowListener	mac-low.cc	/^MacLow::SetupPhyMacLowListener (Ptr<WifiPhy> phy)$/;"	f	class:ns3::MacLow
SnrPer	interference-helper.h	/^  struct SnrPer$/;"	s	class:ns3::InterferenceHelper
SnrTag	snr-tag.cc	/^SnrTag::SnrTag ()$/;"	f	class:ns3::SnrTag
SnrTag	snr-tag.cc	/^SnrTag::SnrTag (double snr)$/;"	f	class:ns3::SnrTag
SnrTag	snr-tag.h	/^class SnrTag : public Tag$/;"	c	namespace:ns3
Spread	aparf-wifi-manager.h	/^    Spread$/;"	e	enum:ns3::AparfWifiManager::State
Ssid	ssid.cc	/^Ssid::Ssid ()$/;"	f	class:ns3::Ssid
Ssid	ssid.cc	/^Ssid::Ssid (char const ssid[32], uint8_t length)$/;"	f	class:ns3::Ssid
Ssid	ssid.cc	/^Ssid::Ssid (std::string s)$/;"	f	class:ns3::Ssid
Ssid	ssid.h	/^class Ssid : public WifiInformationElement$/;"	c	namespace:ns3
StaWifiMac	sta-wifi-mac.cc	/^StaWifiMac::StaWifiMac ()$/;"	f	class:ns3::StaWifiMac
StaWifiMac	sta-wifi-mac.h	/^class StaWifiMac : public RegularWifiMac$/;"	c	namespace:ns3
StartAccessIfNeeded	dca-txop.cc	/^DcaTxop::StartAccessIfNeeded (void)$/;"	f	class:ns3::DcaTxop
StartAccessIfNeeded	edca-txop-n.cc	/^EdcaTxopN::StartAccessIfNeeded (void)$/;"	f	class:ns3::EdcaTxopN
StartActiveAssociation	sta-wifi-mac.cc	/^StaWifiMac::StartActiveAssociation (void)$/;"	f	class:ns3::StaWifiMac
StartBackoffNow	dcf-manager.cc	/^DcfState::StartBackoffNow (uint32_t nSlots)$/;"	f	class:ns3::DcfState
StartBeaconing	ap-wifi-mac.cc	/^ApWifiMac::StartBeaconing (void)$/;"	f	class:ns3::ApWifiMac
StartDataTxTimers	mac-low.cc	/^MacLow::StartDataTxTimers (WifiTxVector dataTxVector)$/;"	f	class:ns3::MacLow
StartNext	dca-txop.cc	/^  virtual void StartNext (void)$/;"	f	class:ns3::DcaTxop::TransmissionListener
StartNext	dca-txop.cc	/^DcaTxop::StartNext (void)$/;"	f	class:ns3::DcaTxop
StartNext	edca-txop-n.cc	/^  virtual void StartNext (void)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
StartNext	edca-txop-n.cc	/^EdcaTxopN::StartNext (void)$/;"	f	class:ns3::EdcaTxopN
StartReceivePacket	yans-wifi-phy.cc	/^YansWifiPhy::StartReceivePacket (Ptr<Packet> packet,$/;"	f	class:ns3::YansWifiPhy
StartReceivePreambleAndHeader	yans-wifi-phy.cc	/^YansWifiPhy::StartReceivePreambleAndHeader (Ptr<Packet> packet,$/;"	f	class:ns3::YansWifiPhy
StartTransmission	mac-low.cc	/^MacLow::StartTransmission (Ptr<const Packet> packet,$/;"	f	class:ns3::MacLow
State	aparf-wifi-manager.h	/^  enum State$/;"	g	class:ns3::AparfWifiManager
State	originator-block-ack-agreement.h	/^  enum State$/;"	g	class:ns3::OriginatorBlockAckAgreement
State	wifi-phy.h	/^  enum State$/;"	g	class:ns3::WifiPhy
StateTracedCallback	wifi-phy-state-helper.h	/^  typedef void (* StateTracedCallback)$/;"	t	class:ns3::WifiPhyStateHelper
States	dcf-manager.h	/^  typedef std::vector<DcfState *> States;$/;"	t	class:ns3::DcfManager
StationStates	wifi-remote-station-manager.h	/^  typedef std::vector <WifiRemoteStationState *> StationStates;$/;"	t	class:ns3::WifiRemoteStationManager
Stations	wifi-remote-station-manager.h	/^  typedef std::vector <WifiRemoteStation *> Stations;$/;"	t	class:ns3::WifiRemoteStationManager
StatsDump	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::StatsDump (MinstrelHtWifiRemoteStation *station, uint32_t groupId, std::ofstream &of)$/;"	f	class:ns3::MinstrelHtWifiManager
StatusCode	status-code.cc	/^StatusCode::StatusCode ()$/;"	f	class:ns3::StatusCode
StatusCode	status-code.h	/^class StatusCode$/;"	c	namespace:ns3
StopMpduAggregation	mac-low.cc	/^MacLow::StopMpduAggregation (Ptr<const Packet> peekedPacket, WifiMacHeader peekedHdr, Ptr<Packet> aggregatedPacket, uint16_t size) const$/;"	f	class:ns3::MacLow
StoreMpduIfNeeded	mac-low.cc	/^MacLow::StoreMpduIfNeeded (Ptr<Packet> packet, WifiMacHeader hdr)$/;"	f	class:ns3::MacLow
StorePacket	block-ack-manager.cc	/^BlockAckManager::StorePacket (Ptr<const Packet> packet, const WifiMacHeader &hdr, Time tStamp)$/;"	f	class:ns3::BlockAckManager
SuperFastAckTimeout	mac-low.cc	/^MacLow::SuperFastAckTimeout ()$/;"	f	class:ns3::MacLow
SupportedRates	supported-rates.cc	/^SupportedRates::SupportedRates ()$/;"	f	class:ns3::SupportedRates
SupportedRates	supported-rates.cc	/^SupportedRates::SupportedRates (const SupportedRates &rates)$/;"	f	class:ns3::SupportedRates
SupportedRates	supported-rates.h	/^class SupportedRates : public WifiInformationElement$/;"	c	namespace:ns3
SupportsSendFrom	ap-wifi-mac.cc	/^ApWifiMac::SupportsSendFrom (void) const$/;"	f	class:ns3::ApWifiMac
SupportsSendFrom	regular-wifi-mac.cc	/^RegularWifiMac::SupportsSendFrom (void) const$/;"	f	class:ns3::RegularWifiMac
SupportsSendFrom	wifi-net-device.cc	/^WifiNetDevice::SupportsSendFrom (void) const$/;"	f	class:ns3::WifiNetDevice
SwitchFromRxEndError	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SwitchFromRxEndError (Ptr<Packet> packet, double snr, bool isEndOfFrame)$/;"	f	class:ns3::WifiPhyStateHelper
SwitchFromRxEndOk	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SwitchFromRxEndOk (Ptr<Packet> packet, double snr, WifiTxVector txVector, enum WifiPreamble preamble)$/;"	f	class:ns3::WifiPhyStateHelper
SwitchFromSleep	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SwitchFromSleep (Time duration)$/;"	f	class:ns3::WifiPhyStateHelper
SwitchMaybeToCcaBusy	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SwitchMaybeToCcaBusy (Time duration)$/;"	f	class:ns3::WifiPhyStateHelper
SwitchToBlockAckIfNeeded	block-ack-manager.cc	/^BlockAckManager::SwitchToBlockAckIfNeeded (Mac48Address recipient, uint8_t tid, uint16_t startingSeq)$/;"	f	class:ns3::BlockAckManager
SwitchToChannelSwitching	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SwitchToChannelSwitching (Time switchingDuration)$/;"	f	class:ns3::WifiPhyStateHelper
SwitchToIdle	wifi-radio-energy-model.cc	/^WifiRadioEnergyModelPhyListener::SwitchToIdle (void)$/;"	f	class:ns3::WifiRadioEnergyModelPhyListener
SwitchToRx	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SwitchToRx (Time rxDuration)$/;"	f	class:ns3::WifiPhyStateHelper
SwitchToSleep	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SwitchToSleep (void)$/;"	f	class:ns3::WifiPhyStateHelper
SwitchToTx	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SwitchToTx (Time txDuration, Ptr<const Packet> packet, double txPowerDbm,$/;"	f	class:ns3::WifiPhyStateHelper
SymbolErrorProb16Cck	dsss-error-rate-model.cc	/^DsssErrorRateModel::SymbolErrorProb16Cck (double e2)$/;"	f	class:ns3::DsssErrorRateModel
SymbolErrorProb256Cck	dsss-error-rate-model.cc	/^double DsssErrorRateModel::SymbolErrorProb256Cck (double e1)$/;"	f	class:ns3::DsssErrorRateModel
TBTT_ADJUSTMENT_REQUEST	mgt-headers.h	/^    TBTT_ADJUSTMENT_REQUEST = 9,          \/\/Action Value:9 in Category 13: Mesh (not used so far)$/;"	e	enum:ns3::WifiActionHeader::MeshActionValue
TBTT_ADJUSTMENT_RESPONSE	mgt-headers.h	/^    TBTT_ADJUSTMENT_RESPONSE = 10,        \/\/Action Value:10 in Category 13: Mesh (not used so far)$/;"	e	enum:ns3::WifiActionHeader::MeshActionValue
TWENTY_MHZ_PROTECTION	ht-operations.h	/^  TWENTY_MHZ_PROTECTION,$/;"	e	enum:ns3::HtProtectionType
TX	wifi-phy.h	/^    TX,$/;"	e	enum:ns3::WifiPhy::State
TYPE_CTL	wifi-mac-header.cc	/^  TYPE_CTL  = 1,$/;"	e	enum:ns3::__anon6	file:
TYPE_DATA	wifi-mac-header.cc	/^  TYPE_DATA = 2$/;"	e	enum:ns3::__anon6	file:
TYPE_MGT	wifi-mac-header.cc	/^  TYPE_MGT = 0,$/;"	e	enum:ns3::__anon6	file:
TearDownBlockAck	block-ack-manager.cc	/^BlockAckManager::TearDownBlockAck (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::BlockAckManager
TestRandomStream	random-stream.h	/^class TestRandomStream : public RandomStream$/;"	c	namespace:ns3
Thresholds	ideal-wifi-manager.h	/^  typedef std::vector<std::pair<double, WifiTxVector> > Thresholds;$/;"	t	class:ns3::IdealWifiManager
ThresholdsItem	rraa-wifi-manager.h	/^  struct ThresholdsItem$/;"	s	class:ns3::RraaWifiManager
TracedCallback	wifi-mac-header.h	/^  typedef void (* TracedCallback)(const WifiMacHeader &header);$/;"	t	class:ns3::WifiMacHeader
TransmissionListener	dca-txop.cc	/^  TransmissionListener (DcaTxop * txop)$/;"	f	class:ns3::DcaTxop::TransmissionListener
TransmissionListener	dca-txop.cc	/^class DcaTxop::TransmissionListener : public MacLowTransmissionListener$/;"	c	class:ns3::DcaTxop	file:
TransmissionListener	edca-txop-n.cc	/^  TransmissionListener (EdcaTxopN * txop)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
TransmissionListener	edca-txop-n.cc	/^class EdcaTxopN::TransmissionListener : public MacLowTransmissionListener$/;"	c	class:ns3::EdcaTxopN	file:
TryToEnsureAssociated	sta-wifi-mac.cc	/^StaWifiMac::TryToEnsureAssociated (void)$/;"	f	class:ns3::StaWifiMac
TurnOffRts	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::TurnOffRts (AarfcdWifiRemoteStation *station)$/;"	f	class:ns3::AarfcdWifiManager
TurnOnRts	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::TurnOnRts (AarfcdWifiRemoteStation *station)$/;"	f	class:ns3::AarfcdWifiManager
TxFailed	ap-wifi-mac.cc	/^ApWifiMac::TxFailed (const WifiMacHeader &hdr)$/;"	f	class:ns3::ApWifiMac
TxFailed	block-ack-manager.h	/^  typedef Callback <void, const WifiMacHeader&> TxFailed;$/;"	t	class:ns3::BlockAckManager
TxFailed	dca-txop.h	/^  typedef Callback <void, const WifiMacHeader&> TxFailed;$/;"	t	class:ns3::DcaTxop
TxFailed	edca-txop-n.h	/^  typedef Callback <void, const WifiMacHeader&> TxFailed;$/;"	t	class:ns3::EdcaTxopN
TxFailed	regular-wifi-mac.cc	/^RegularWifiMac::TxFailed (const WifiMacHeader &hdr)$/;"	f	class:ns3::RegularWifiMac
TxOk	ap-wifi-mac.cc	/^ApWifiMac::TxOk (const WifiMacHeader &hdr)$/;"	f	class:ns3::ApWifiMac
TxOk	block-ack-manager.h	/^  typedef Callback <void, const WifiMacHeader&> TxOk;$/;"	t	class:ns3::BlockAckManager
TxOk	dca-txop.h	/^  typedef Callback <void, const WifiMacHeader&> TxOk;$/;"	t	class:ns3::DcaTxop
TxOk	edca-txop-n.h	/^  typedef Callback <void, const WifiMacHeader&> TxOk;$/;"	t	class:ns3::EdcaTxopN
TxOk	regular-wifi-mac.cc	/^RegularWifiMac::TxOk (const WifiMacHeader &hdr)$/;"	f	class:ns3::RegularWifiMac
TxTime	minstrel-ht-wifi-manager.h	/^typedef std::vector<std::pair<Time, WifiMode> > TxTime;$/;"	t	namespace:ns3
TxTime	minstrel-wifi-manager.h	/^  typedef std::vector<std::pair<Time,WifiMode> > TxTime;$/;"	t	class:ns3::MinstrelWifiManager
TxTracedCallback	wifi-phy-state-helper.h	/^  typedef void (* TxTracedCallback)$/;"	t	class:ns3::WifiPhyStateHelper
TypeOfStation	edca-txop-n.h	/^enum TypeOfStation$/;"	g	namespace:ns3
UNSUCCESSFUL	originator-block-ack-agreement.h	/^    UNSUCCESSFUL$/;"	e	enum:ns3::OriginatorBlockAckAgreement::State
UP_BE	qos-tag.h	/^  UP_BE = 0, \/**< best effort (default) *\/$/;"	e	enum:ns3::UserPriority
UP_BK	qos-tag.h	/^  UP_BK = 1, \/**< background  *\/$/;"	e	enum:ns3::UserPriority
UP_CL	qos-tag.h	/^  UP_CL = 4, \/**< controlled load *\/$/;"	e	enum:ns3::UserPriority
UP_EE	qos-tag.h	/^  UP_EE = 3, \/**< excellent effort  *\/$/;"	e	enum:ns3::UserPriority
UP_NC	qos-tag.h	/^  UP_NC = 7  \/**< network control *\/$/;"	e	enum:ns3::UserPriority
UP_VI	qos-tag.h	/^  UP_VI = 5, \/**< video, < 100ms latency and jitter *\/$/;"	e	enum:ns3::UserPriority
UP_VO	qos-tag.h	/^  UP_VO = 6, \/**< voice, < 10ms latency and jitter *\/$/;"	e	enum:ns3::UserPriority
Unblock	qos-blocked-destinations.cc	/^QosBlockedDestinations::Unblock (Mac48Address dest, uint8_t tid)$/;"	f	class:ns3::QosBlockedDestinations
UnregisterListener	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::UnregisterListener (WifiPhyListener *listener)$/;"	f	class:ns3::WifiPhyStateHelper
UnregisterListener	yans-wifi-phy.cc	/^YansWifiPhy::UnregisterListener (WifiPhyListener *listener)$/;"	f	class:ns3::YansWifiPhy
UpdateAgreement	block-ack-manager.cc	/^BlockAckManager::UpdateAgreement (const MgtAddBaResponseHeader *respHdr, Mac48Address recipient)$/;"	f	class:ns3::BlockAckManager
UpdateBackoff	dcf-manager.cc	/^DcfManager::UpdateBackoff (void)$/;"	f	class:ns3::DcfManager
UpdateBackoffSlotsNow	dcf-manager.cc	/^DcfState::UpdateBackoffSlotsNow (uint32_t nSlots, Time backoffUpdateBound)$/;"	f	class:ns3::DcfState
UpdateFailedCw	dcf-manager.cc	/^DcfState::UpdateFailedCw (void)$/;"	f	class:ns3::DcfState
UpdateFragmentationThreshold	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::UpdateFragmentationThreshold (void)$/;"	f	class:ns3::WifiRemoteStationManager
UpdateMode	amrr-wifi-manager.cc	/^AmrrWifiManager::UpdateMode (AmrrWifiRemoteStation *station)$/;"	f	class:ns3::AmrrWifiManager
UpdateMode	onoe-wifi-manager.cc	/^OnoeWifiManager::UpdateMode (OnoeWifiRemoteStation *station)$/;"	f	class:ns3::OnoeWifiManager
UpdatePacketCounters	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::UpdatePacketCounters (MinstrelHtWifiRemoteStation *station, uint32_t nSuccessfulMpdus, uint32_t nFailedMpdus)$/;"	f	class:ns3::MinstrelHtWifiManager
UpdatePacketCounters	minstrel-wifi-manager.cc	/^MinstrelWifiManager::UpdatePacketCounters (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
UpdateRate	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::UpdateRate (MinstrelHtWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelHtWifiManager
UpdateRate	minstrel-wifi-manager.cc	/^MinstrelWifiManager::UpdateRate (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
UpdateRetry	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::UpdateRetry (MinstrelHtWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelHtWifiManager
UpdateRetry	minstrel-wifi-manager.cc	/^MinstrelWifiManager::UpdateRetry (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
UpdateRetry	onoe-wifi-manager.cc	/^OnoeWifiManager::UpdateRetry (OnoeWifiRemoteStation *station)$/;"	f	class:ns3::OnoeWifiManager
UpdateStats	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::UpdateStats (MinstrelHtWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelHtWifiManager
UpdateStats	minstrel-wifi-manager.cc	/^MinstrelWifiManager::UpdateStats (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
UpdateTxCurrentCallback	wifi-radio-energy-model.h	/^  typedef Callback<void, double> UpdateTxCurrentCallback;$/;"	t	class:ns3::WifiRadioEnergyModelPhyListener
UpdateWithBlockAckReq	block-ack-cache.cc	/^BlockAckCache::UpdateWithBlockAckReq (uint16_t startingSeq)$/;"	f	class:ns3::BlockAckCache
UpdateWithMpdu	block-ack-cache.cc	/^BlockAckCache::UpdateWithMpdu (const WifiMacHeader *hdr)$/;"	f	class:ns3::BlockAckCache
UserPriority	qos-tag.h	/^enum UserPriority$/;"	g	namespace:ns3
VENDOR_SPECIFIC_ACTION	mgt-headers.h	/^    VENDOR_SPECIFIC_ACTION = 127,$/;"	e	enum:ns3::WifiActionHeader::CategoryValue
VHT_CAPABILITIES_H	vht-capabilities.h	23;"	d
VHT_PHY	yans-wifi-phy.h	44;"	d
VerifyBlockAck	edca-txop-n.cc	/^EdcaTxopN::VerifyBlockAck (void)$/;"	f	class:ns3::EdcaTxopN
VhtCapabilities	vht-capabilities.cc	/^VhtCapabilities::VhtCapabilities ()$/;"	f	class:ns3::VhtCapabilities
VhtCapabilities	vht-capabilities.h	/^class VhtCapabilities : public WifiInformationElement$/;"	c	namespace:ns3
WAIT_ASSOC_RESP	sta-wifi-mac.h	/^    WAIT_ASSOC_RESP,$/;"	e	enum:ns3::StaWifiMac::MacState
WAIT_ASSOC_TX_OK	wifi-remote-station-manager.h	/^    WAIT_ASSOC_TX_OK,$/;"	e	enum:ns3::WifiRemoteStationState::__anon9
WAIT_PROBE_RESP	sta-wifi-mac.h	/^    WAIT_PROBE_RESP,$/;"	e	enum:ns3::StaWifiMac::MacState
WIFI_CHANNEL_H	wifi-channel.h	22;"	d
WIFI_CODE_RATE_1_2	wifi-mode.h	/^  WIFI_CODE_RATE_1_2,$/;"	e	enum:ns3::WifiCodeRate
WIFI_CODE_RATE_2_3	wifi-mode.h	/^  WIFI_CODE_RATE_2_3,$/;"	e	enum:ns3::WifiCodeRate
WIFI_CODE_RATE_3_4	wifi-mode.h	/^  WIFI_CODE_RATE_3_4,$/;"	e	enum:ns3::WifiCodeRate
WIFI_CODE_RATE_5_6	wifi-mode.h	/^  WIFI_CODE_RATE_5_6$/;"	e	enum:ns3::WifiCodeRate
WIFI_CODE_RATE_UNDEFINED	wifi-mode.h	/^  WIFI_CODE_RATE_UNDEFINED,$/;"	e	enum:ns3::WifiCodeRate
WIFI_INFORMATION_ELEMENT_H	wifi-information-element.h	22;"	d
WIFI_INFORMATION_ELEMENT_VECTOR_H	wifi-information-element-vector.h	23;"	d
WIFI_MAC_CTL_ACK	wifi-mac-header.h	/^  WIFI_MAC_CTL_ACK,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_CTL_BACKREQ	wifi-mac-header.h	/^  WIFI_MAC_CTL_BACKREQ,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_CTL_BACKRESP	wifi-mac-header.h	/^  WIFI_MAC_CTL_BACKRESP,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_CTL_CTLWRAPPER	wifi-mac-header.h	/^  WIFI_MAC_CTL_CTLWRAPPER = 0,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_CTL_CTS	wifi-mac-header.h	/^  WIFI_MAC_CTL_CTS,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_CTL_RTS	wifi-mac-header.h	/^  WIFI_MAC_CTL_RTS,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_DATA	wifi-mac-header.h	/^  WIFI_MAC_DATA,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_DATA_CFACK	wifi-mac-header.h	/^  WIFI_MAC_DATA_CFACK,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_DATA_CFACK_CFPOLL	wifi-mac-header.h	/^  WIFI_MAC_DATA_CFACK_CFPOLL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_DATA_CFPOLL	wifi-mac-header.h	/^  WIFI_MAC_DATA_CFPOLL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_DATA_NULL	wifi-mac-header.h	/^  WIFI_MAC_DATA_NULL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_DATA_NULL_CFACK	wifi-mac-header.h	/^  WIFI_MAC_DATA_NULL_CFACK,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_DATA_NULL_CFACK_CFPOLL	wifi-mac-header.h	/^  WIFI_MAC_DATA_NULL_CFACK_CFPOLL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_DATA_NULL_CFPOLL	wifi-mac-header.h	/^  WIFI_MAC_DATA_NULL_CFPOLL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_FCS_LENGTH	wifi-mac-trailer.h	/^static const uint16_t WIFI_MAC_FCS_LENGTH = 4;$/;"	m	namespace:ns3
WIFI_MAC_H	wifi-mac.h	22;"	d
WIFI_MAC_HEADER_H	wifi-mac-header.h	24;"	d
WIFI_MAC_MGT_ACTION	wifi-mac-header.h	/^  WIFI_MAC_MGT_ACTION,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_ACTION_NO_ACK	wifi-mac-header.h	/^  WIFI_MAC_MGT_ACTION_NO_ACK,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_ASSOCIATION_REQUEST	wifi-mac-header.h	/^  WIFI_MAC_MGT_ASSOCIATION_REQUEST,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_ASSOCIATION_RESPONSE	wifi-mac-header.h	/^  WIFI_MAC_MGT_ASSOCIATION_RESPONSE,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_AUTHENTICATION	wifi-mac-header.h	/^  WIFI_MAC_MGT_AUTHENTICATION,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_BEACON	wifi-mac-header.h	/^  WIFI_MAC_MGT_BEACON,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_DEAUTHENTICATION	wifi-mac-header.h	/^  WIFI_MAC_MGT_DEAUTHENTICATION,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_DISASSOCIATION	wifi-mac-header.h	/^  WIFI_MAC_MGT_DISASSOCIATION,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_MULTIHOP_ACTION	wifi-mac-header.h	/^  WIFI_MAC_MGT_MULTIHOP_ACTION,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_PROBE_REQUEST	wifi-mac-header.h	/^  WIFI_MAC_MGT_PROBE_REQUEST,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_PROBE_RESPONSE	wifi-mac-header.h	/^  WIFI_MAC_MGT_PROBE_RESPONSE,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_REASSOCIATION_REQUEST	wifi-mac-header.h	/^  WIFI_MAC_MGT_REASSOCIATION_REQUEST,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_REASSOCIATION_RESPONSE	wifi-mac-header.h	/^  WIFI_MAC_MGT_REASSOCIATION_RESPONSE,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_QOSDATA	wifi-mac-header.h	/^  WIFI_MAC_QOSDATA,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_QOSDATA_CFACK	wifi-mac-header.h	/^  WIFI_MAC_QOSDATA_CFACK,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_QOSDATA_CFACK_CFPOLL	wifi-mac-header.h	/^  WIFI_MAC_QOSDATA_CFACK_CFPOLL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_QOSDATA_CFPOLL	wifi-mac-header.h	/^  WIFI_MAC_QOSDATA_CFPOLL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_QOSDATA_NULL	wifi-mac-header.h	/^  WIFI_MAC_QOSDATA_NULL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_QOSDATA_NULL_CFACK_CFPOLL	wifi-mac-header.h	/^  WIFI_MAC_QOSDATA_NULL_CFACK_CFPOLL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_QOSDATA_NULL_CFPOLL	wifi-mac-header.h	/^  WIFI_MAC_QOSDATA_NULL_CFPOLL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_QUEUE_H	wifi-mac-queue.h	24;"	d
WIFI_MAC_TRAILER_H	wifi-mac-trailer.h	22;"	d
WIFI_MODE_H	wifi-mode.h	23;"	d
WIFI_MOD_CLASS_DSSS	wifi-mode.h	/^  WIFI_MOD_CLASS_DSSS,$/;"	e	enum:ns3::WifiModulationClass
WIFI_MOD_CLASS_DSSS_OFDM	wifi-mode.h	/^  WIFI_MOD_CLASS_DSSS_OFDM,$/;"	e	enum:ns3::WifiModulationClass
WIFI_MOD_CLASS_ERP_OFDM	wifi-mode.h	/^  WIFI_MOD_CLASS_ERP_OFDM,$/;"	e	enum:ns3::WifiModulationClass
WIFI_MOD_CLASS_ERP_PBCC	wifi-mode.h	/^  WIFI_MOD_CLASS_ERP_PBCC,$/;"	e	enum:ns3::WifiModulationClass
WIFI_MOD_CLASS_FHSS	wifi-mode.h	/^  WIFI_MOD_CLASS_FHSS,$/;"	e	enum:ns3::WifiModulationClass
WIFI_MOD_CLASS_HR_DSSS	wifi-mode.h	/^  WIFI_MOD_CLASS_HR_DSSS,$/;"	e	enum:ns3::WifiModulationClass
WIFI_MOD_CLASS_HT	wifi-mode.h	/^  WIFI_MOD_CLASS_HT,$/;"	e	enum:ns3::WifiModulationClass
WIFI_MOD_CLASS_IR	wifi-mode.h	/^  WIFI_MOD_CLASS_IR,$/;"	e	enum:ns3::WifiModulationClass
WIFI_MOD_CLASS_OFDM	wifi-mode.h	/^  WIFI_MOD_CLASS_OFDM,$/;"	e	enum:ns3::WifiModulationClass
WIFI_MOD_CLASS_UNKNOWN	wifi-mode.h	/^  WIFI_MOD_CLASS_UNKNOWN = 0,$/;"	e	enum:ns3::WifiModulationClass
WIFI_MOD_CLASS_VHT	wifi-mode.h	/^  WIFI_MOD_CLASS_VHT$/;"	e	enum:ns3::WifiModulationClass
WIFI_NET_DEVICE_H	wifi-net-device.h	22;"	d
WIFI_PHY_H	wifi-phy.h	23;"	d
WIFI_PHY_STANDARD_80211_10MHZ	wifi-phy-standard.h	/^  WIFI_PHY_STANDARD_80211_10MHZ,$/;"	e	enum:ns3::WifiPhyStandard
WIFI_PHY_STANDARD_80211_5MHZ	wifi-phy-standard.h	/^  WIFI_PHY_STANDARD_80211_5MHZ,$/;"	e	enum:ns3::WifiPhyStandard
WIFI_PHY_STANDARD_80211a	wifi-phy-standard.h	/^  WIFI_PHY_STANDARD_80211a,$/;"	e	enum:ns3::WifiPhyStandard
WIFI_PHY_STANDARD_80211ac	wifi-phy-standard.h	/^  WIFI_PHY_STANDARD_80211ac$/;"	e	enum:ns3::WifiPhyStandard
WIFI_PHY_STANDARD_80211b	wifi-phy-standard.h	/^  WIFI_PHY_STANDARD_80211b,$/;"	e	enum:ns3::WifiPhyStandard
WIFI_PHY_STANDARD_80211g	wifi-phy-standard.h	/^  WIFI_PHY_STANDARD_80211g,$/;"	e	enum:ns3::WifiPhyStandard
WIFI_PHY_STANDARD_80211n_2_4GHZ	wifi-phy-standard.h	/^  WIFI_PHY_STANDARD_80211n_2_4GHZ,$/;"	e	enum:ns3::WifiPhyStandard
WIFI_PHY_STANDARD_80211n_5GHZ	wifi-phy-standard.h	/^  WIFI_PHY_STANDARD_80211n_5GHZ,$/;"	e	enum:ns3::WifiPhyStandard
WIFI_PHY_STANDARD_H	wifi-phy-standard.h	22;"	d
WIFI_PHY_STANDARD_holland	wifi-phy-standard.h	/^  WIFI_PHY_STANDARD_holland,$/;"	e	enum:ns3::WifiPhyStandard
WIFI_PHY_STATE_HELPER_H	wifi-phy-state-helper.h	22;"	d
WIFI_PREAMBLE_H	wifi-preamble.h	22;"	d
WIFI_PREAMBLE_HT_GF	wifi-preamble.h	/^  WIFI_PREAMBLE_HT_GF,$/;"	e	enum:ns3::WifiPreamble
WIFI_PREAMBLE_HT_MF	wifi-preamble.h	/^  WIFI_PREAMBLE_HT_MF,$/;"	e	enum:ns3::WifiPreamble
WIFI_PREAMBLE_LONG	wifi-preamble.h	/^  WIFI_PREAMBLE_LONG,$/;"	e	enum:ns3::WifiPreamble
WIFI_PREAMBLE_NONE	wifi-preamble.h	/^  WIFI_PREAMBLE_NONE$/;"	e	enum:ns3::WifiPreamble
WIFI_PREAMBLE_SHORT	wifi-preamble.h	/^  WIFI_PREAMBLE_SHORT,$/;"	e	enum:ns3::WifiPreamble
WIFI_PREAMBLE_VHT	wifi-preamble.h	/^  WIFI_PREAMBLE_VHT,$/;"	e	enum:ns3::WifiPreamble
WIFI_RADIO_ENERGY_MODEL_H	wifi-radio-energy-model.h	22;"	d
WIFI_REMOTE_STATION_MANAGER_H	wifi-remote-station-manager.h	22;"	d
WIFI_TX_CURRENT_MODEL_H	wifi-tx-current-model.h	22;"	d
WIFI_TX_VECTOR_H	wifi-tx-vector.h	23;"	d
WINSIZE_ASSERT	block-ack-cache.cc	27;"	d	file:
WLAN_SIR_IMPOSSIBLE	dsss-error-rate-model.cc	/^const double DsssErrorRateModel::WLAN_SIR_IMPOSSIBLE = 0.1;$/;"	m	class:ns3::DsssErrorRateModel	file:
WLAN_SIR_IMPOSSIBLE	dsss-error-rate-model.h	/^  static const double WLAN_SIR_IMPOSSIBLE;$/;"	m	class:ns3::DsssErrorRateModel
WLAN_SIR_PERFECT	dsss-error-rate-model.cc	/^const double DsssErrorRateModel::WLAN_SIR_PERFECT = 10.0;$/;"	m	class:ns3::DsssErrorRateModel	file:
WLAN_SIR_PERFECT	dsss-error-rate-model.h	/^  static const double WLAN_SIR_PERFECT;$/;"	m	class:ns3::DsssErrorRateModel
WToDbm	yans-wifi-phy.cc	/^YansWifiPhy::WToDbm (double w) const$/;"	f	class:ns3::YansWifiPhy
WaitSifsAfterEndTx	mac-low.cc	/^MacLow::WaitSifsAfterEndTx (void)$/;"	f	class:ns3::MacLow
WifiActionHeader	mgt-headers.cc	/^WifiActionHeader::WifiActionHeader ()$/;"	f	class:ns3::WifiActionHeader
WifiActionHeader	mgt-headers.h	/^class WifiActionHeader : public Header$/;"	c	namespace:ns3
WifiChannel	wifi-channel.h	/^class WifiChannel : public Channel$/;"	c	namespace:ns3
WifiCodeRate	wifi-mode.h	/^enum WifiCodeRate$/;"	g	namespace:ns3
WifiInformationElement	wifi-information-element.h	/^class WifiInformationElement : public SimpleRefCount<WifiInformationElement>$/;"	c	namespace:ns3
WifiInformationElementId	wifi-information-element.h	/^typedef uint8_t WifiInformationElementId;$/;"	t	namespace:ns3
WifiInformationElementVector	wifi-information-element-vector.cc	/^WifiInformationElementVector::WifiInformationElementVector ()$/;"	f	class:ns3::WifiInformationElementVector
WifiInformationElementVector	wifi-information-element-vector.h	/^class WifiInformationElementVector : public Header$/;"	c	namespace:ns3
WifiMac	wifi-mac.h	/^class WifiMac : public Object$/;"	c	namespace:ns3
WifiMacHeader	wifi-mac-header.cc	/^WifiMacHeader::WifiMacHeader ()$/;"	f	class:ns3::WifiMacHeader
WifiMacHeader	wifi-mac-header.h	/^class WifiMacHeader : public Header$/;"	c	namespace:ns3
WifiMacQueue	wifi-mac-queue.cc	/^WifiMacQueue::WifiMacQueue ()$/;"	f	class:ns3::WifiMacQueue
WifiMacQueue	wifi-mac-queue.h	/^class WifiMacQueue : public Object$/;"	c	namespace:ns3
WifiMacTrailer	wifi-mac-trailer.cc	/^WifiMacTrailer::WifiMacTrailer ()$/;"	f	class:ns3::WifiMacTrailer
WifiMacTrailer	wifi-mac-trailer.h	/^class WifiMacTrailer : public Trailer$/;"	c	namespace:ns3
WifiMacType	wifi-mac-header.h	/^enum WifiMacType$/;"	g	namespace:ns3
WifiMode	wifi-mode.cc	/^WifiMode::WifiMode ()$/;"	f	class:ns3::WifiMode
WifiMode	wifi-mode.cc	/^WifiMode::WifiMode (std::string name)$/;"	f	class:ns3::WifiMode
WifiMode	wifi-mode.cc	/^WifiMode::WifiMode (uint32_t uid)$/;"	f	class:ns3::WifiMode
WifiMode	wifi-mode.h	/^class WifiMode$/;"	c	namespace:ns3
WifiModeFactory	wifi-mode.cc	/^WifiModeFactory::WifiModeFactory ()$/;"	f	class:ns3::WifiModeFactory
WifiModeFactory	wifi-mode.h	/^class WifiModeFactory$/;"	c	namespace:ns3
WifiModeItem	wifi-mode.h	/^  struct WifiModeItem$/;"	s	class:ns3::WifiModeFactory
WifiModeItemList	wifi-mode.h	/^  typedef std::vector<struct WifiModeItem> WifiModeItemList;$/;"	t	class:ns3::WifiModeFactory
WifiModeList	wifi-mode.h	/^typedef std::vector<WifiMode> WifiModeList;$/;"	t	namespace:ns3
WifiModeListIterator	wifi-mode.h	/^typedef WifiModeList::const_iterator WifiModeListIterator;$/;"	t	namespace:ns3
WifiModulationClass	wifi-mode.h	/^enum WifiModulationClass$/;"	g	namespace:ns3
WifiNetDevice	wifi-net-device.cc	/^WifiNetDevice::WifiNetDevice ()$/;"	f	class:ns3::WifiNetDevice
WifiNetDevice	wifi-net-device.h	/^class WifiNetDevice : public NetDevice$/;"	c	namespace:ns3
WifiPhy	wifi-phy.cc	/^WifiPhy::WifiPhy ()$/;"	f	class:ns3::WifiPhy
WifiPhy	wifi-phy.h	/^class WifiPhy : public Object$/;"	c	namespace:ns3
WifiPhyListener	wifi-phy.h	/^class WifiPhyListener$/;"	c	namespace:ns3
WifiPhyStandard	wifi-phy-standard.h	/^enum WifiPhyStandard$/;"	g	namespace:ns3
WifiPhyStateHelper	wifi-phy-state-helper.cc	/^WifiPhyStateHelper::WifiPhyStateHelper ()$/;"	f	class:ns3::WifiPhyStateHelper
WifiPhyStateHelper	wifi-phy-state-helper.h	/^class WifiPhyStateHelper : public Object$/;"	c	namespace:ns3
WifiPreamble	wifi-preamble.h	/^enum WifiPreamble$/;"	g	namespace:ns3
WifiRadioEnergyDepletionCallback	wifi-radio-energy-model.h	/^  typedef Callback<void> WifiRadioEnergyDepletionCallback;$/;"	t	class:ns3::WifiRadioEnergyModel
WifiRadioEnergyModel	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::WifiRadioEnergyModel ()$/;"	f	class:ns3::WifiRadioEnergyModel
WifiRadioEnergyModel	wifi-radio-energy-model.h	/^class WifiRadioEnergyModel : public DeviceEnergyModel$/;"	c	namespace:ns3
WifiRadioEnergyModelPhyListener	wifi-radio-energy-model.cc	/^WifiRadioEnergyModelPhyListener::WifiRadioEnergyModelPhyListener ()$/;"	f	class:ns3::WifiRadioEnergyModelPhyListener
WifiRadioEnergyModelPhyListener	wifi-radio-energy-model.h	/^class WifiRadioEnergyModelPhyListener : public WifiPhyListener$/;"	c	namespace:ns3
WifiRadioEnergyRechargedCallback	wifi-radio-energy-model.h	/^  typedef Callback<void> WifiRadioEnergyRechargedCallback;$/;"	t	class:ns3::WifiRadioEnergyModel
WifiRemoteStation	wifi-remote-station-manager.h	/^struct WifiRemoteStation$/;"	s	namespace:ns3
WifiRemoteStationInfo	wifi-remote-station-manager.cc	/^WifiRemoteStationInfo::WifiRemoteStationInfo ()$/;"	f	class:ns3::WifiRemoteStationInfo
WifiRemoteStationInfo	wifi-remote-station-manager.h	/^class WifiRemoteStationInfo$/;"	c	namespace:ns3
WifiRemoteStationManager	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::WifiRemoteStationManager ()$/;"	f	class:ns3::WifiRemoteStationManager
WifiRemoteStationManager	wifi-remote-station-manager.h	/^class WifiRemoteStationManager : public Object$/;"	c	namespace:ns3
WifiRemoteStationState	wifi-remote-station-manager.h	/^struct WifiRemoteStationState$/;"	s	namespace:ns3
WifiTxCurrentModel	wifi-tx-current-model.cc	/^WifiTxCurrentModel::WifiTxCurrentModel()$/;"	f	class:ns3::WifiTxCurrentModel
WifiTxCurrentModel	wifi-tx-current-model.h	/^class WifiTxCurrentModel : public Object$/;"	c	namespace:ns3
WifiTxVector	wifi-tx-vector.cc	/^WifiTxVector::WifiTxVector ()$/;"	f	class:ns3::WifiTxVector
WifiTxVector	wifi-tx-vector.cc	/^WifiTxVector::WifiTxVector (WifiMode mode, uint8_t powerLevel, uint8_t retries,$/;"	f	class:ns3::WifiTxVector
WifiTxVector	wifi-tx-vector.h	/^class WifiTxVector$/;"	c	namespace:ns3
YANS_ERROR_RATE_MODEL_H	yans-error-rate-model.h	22;"	d
YANS_WIFI_CHANNEL_H	yans-wifi-channel.h	22;"	d
YANS_WIFI_PHY_H	yans-wifi-phy.h	24;"	d
YansErrorRateModel	yans-error-rate-model.cc	/^YansErrorRateModel::YansErrorRateModel ()$/;"	f	class:ns3::YansErrorRateModel
YansErrorRateModel	yans-error-rate-model.h	/^class YansErrorRateModel : public ErrorRateModel$/;"	c	namespace:ns3
YansWifiChannel	yans-wifi-channel.cc	/^YansWifiChannel::YansWifiChannel ()$/;"	f	class:ns3::YansWifiChannel
YansWifiChannel	yans-wifi-channel.h	/^class YansWifiChannel : public WifiChannel$/;"	c	namespace:ns3
YansWifiPhy	yans-wifi-phy.cc	/^YansWifiPhy::YansWifiPhy ()$/;"	f	class:ns3::YansWifiPhy
YansWifiPhy	yans-wifi-phy.h	/^class YansWifiPhy : public WifiPhy$/;"	c	namespace:ns3
adjustedRetryCount	minstrel-ht-wifi-manager.h	/^  uint32_t adjustedRetryCount;  \/\/!< Adjust the retry limit for this rate.$/;"	m	struct:ns3::HtRateInfo
adjustedRetryCount	minstrel-wifi-manager.h	/^  uint32_t adjustedRetryCount;  \/\/\/< adjust the retry limit for this rate$/;"	m	struct:ns3::RateInfo
attemptHist	minstrel-ht-wifi-manager.h	/^  uint64_t attemptHist;         \/\/!< Aggregate of all transmission attempts.$/;"	m	struct:ns3::HtRateInfo
attemptHist	minstrel-wifi-manager.h	/^  uint64_t attemptHist;         \/\/!< Aggregate of all transmission attempts.$/;"	m	struct:ns3::RateInfo
bar	block-ack-manager.h	/^  Ptr<const Packet> bar;$/;"	m	struct:ns3::Bar
beta	dsss-error-rate-model.h	/^  double beta;$/;"	m	struct:ns3::FunctionParameterType
bitmap	ctrl-headers.h	/^  } bitmap;$/;"	m	class:ns3::CtrlBAckResponseHeader	typeref:union:ns3::CtrlBAckResponseHeader::__anon1
blockAck	mgt-headers.h	/^    enum BlockAckActionValue blockAck;$/;"	m	union:ns3::WifiActionHeader::__anon4	typeref:enum:ns3::WifiActionHeader::__anon4::BlockAckActionValue
chWidth	minstrel-ht-wifi-manager.h	/^  uint32_t chWidth;$/;"	m	struct:ns3::McsGroup
codingRate	wifi-mode.h	/^    enum WifiCodeRate codingRate;$/;"	m	struct:ns3::WifiModeFactory::WifiModeItem	typeref:enum:ns3::WifiModeFactory::WifiModeItem::WifiCodeRate
constellationSize	wifi-mode.h	/^    uint16_t constellationSize;$/;"	m	struct:ns3::WifiModeFactory::WifiModeItem
datarate	rraa-wifi-manager.h	/^    uint32_t datarate;$/;"	m	struct:ns3::RraaWifiManager::ThresholdsItem
duration	yans-wifi-channel.h	/^  Time duration;$/;"	m	struct:ns3::Parameters
ewmaProb	minstrel-ht-wifi-manager.h	/^  double ewmaProb;$/;"	m	struct:ns3::HtRateInfo
ewmaProb	minstrel-wifi-manager.h	/^  uint32_t ewmaProb;$/;"	m	struct:ns3::RateInfo
ewmsdProb	minstrel-ht-wifi-manager.h	/^  double ewmsdProb;             \/\/!< Exponential weighted moving standard deviation of probability.$/;"	m	struct:ns3::HtRateInfo
ewnd	rraa-wifi-manager.h	/^    uint32_t ewnd;$/;"	m	struct:ns3::RraaWifiManager::ThresholdsItem
extended	supported-rates.h	/^  ExtendedSupportedRatesIE extended;$/;"	m	class:ns3::SupportedRates
g_constructor	wifi-phy.cc	/^} g_constructor;$/;"	m	namespace:__anon8	typeref:class:__anon8::Constructor	file:
hdr	block-ack-manager.h	/^    WifiMacHeader hdr;$/;"	m	struct:ns3::BlockAckManager::Item
hdr	mac-low.h	/^    WifiMacHeader hdr;$/;"	m	struct:ns3::MacLow::__anon3
hdr	wifi-mac-queue.h	/^    WifiMacHeader hdr;        \/\/!< Wifi MAC header associated with the packet$/;"	m	struct:ns3::WifiMacQueue::Item
immediate	block-ack-manager.h	/^  bool immediate;$/;"	m	struct:ns3::Bar
isMandatory	wifi-mode.h	/^    bool isMandatory;$/;"	m	struct:ns3::WifiModeFactory::WifiModeItem
isSupported	minstrel-ht-wifi-manager.h	/^  bool isSupported;$/;"	m	struct:ns3::McsGroup
isVht	minstrel-ht-wifi-manager.h	/^  bool isVht;$/;"	m	struct:ns3::McsGroup
m_aMpduEnabled	edca-txop-n.h	/^  std::map<Mac48Address, bool> m_aMpduEnabled;$/;"	m	class:ns3::EdcaTxopN
m_ac	edca-txop-n.h	/^  AcIndex m_ac;$/;"	m	class:ns3::EdcaTxopN
m_accessOngoing	dca-txop.h	/^  bool m_accessOngoing;$/;"	m	class:ns3::DcaTxop
m_accessRequested	dcf-manager.h	/^  bool m_accessRequested;$/;"	m	class:ns3::DcfState
m_accessTimeout	dcf-manager.h	/^  EventId m_accessTimeout;$/;"	m	class:ns3::DcfManager
m_ackTimeout	mac-low.h	/^  Time m_ackTimeout;                        \/\/!< ACK timeout duration$/;"	m	class:ns3::MacLow
m_actionValue	mgt-headers.h	/^  uint8_t m_actionValue; \/\/!< Action value$/;"	m	class:ns3::WifiActionHeader
m_activeProbing	sta-wifi-mac.h	/^  bool m_activeProbing;$/;"	m	class:ns3::StaWifiMac
m_addCreditThreshold	onoe-wifi-manager.h	/^  uint32_t m_addCreditThreshold;$/;"	m	class:ns3::OnoeWifiManager
m_addr1	wifi-mac-header.h	/^  Mac48Address m_addr1;$/;"	m	class:ns3::WifiMacHeader
m_addr2	wifi-mac-header.h	/^  Mac48Address m_addr2;$/;"	m	class:ns3::WifiMacHeader
m_addr3	wifi-mac-header.h	/^  Mac48Address m_addr3;$/;"	m	class:ns3::WifiMacHeader
m_addr4	wifi-mac-header.h	/^  Mac48Address m_addr4;$/;"	m	class:ns3::WifiMacHeader
m_address	block-ack-manager.h	/^  Mac48Address m_address;$/;"	m	class:ns3::BlockAckManager
m_address	wifi-remote-station-manager.h	/^  Mac48Address m_address;  \/\/!< Mac48Address of the remote station$/;"	m	struct:ns3::WifiRemoteStationState
m_aggregateQueue	mac-low.h	/^  Ptr<WifiMacQueue> m_aggregateQueue; \/\/!< Queue used for MPDU aggregation$/;"	m	class:ns3::MacLow
m_aggregation	wifi-remote-station-manager.h	/^  bool m_aggregation;         \/\/!< Flag if MPDU aggregation is used by the remote station$/;"	m	struct:ns3::WifiRemoteStationState
m_aggregation	wifi-tx-vector.h	/^  bool     m_aggregation;        \/** Flag whether the PSDU contains A-MPDU. *\/$/;"	m	class:ns3::WifiTxVector
m_agreements	block-ack-manager.h	/^  Agreements m_agreements;$/;"	m	class:ns3::BlockAckManager
m_aid	mgt-headers.h	/^  uint16_t m_aid;$/;"	m	class:ns3::MgtAssocResponseHeader
m_aifsn	dcf-manager.h	/^  uint32_t m_aifsn;$/;"	m	class:ns3::DcfState
m_ampdu	ampdu-tag.h	/^  uint8_t m_ampdu;     \/\/!< Flag whether it is an A-MPDU$/;"	m	class:ns3::AmpduTag
m_ampdu	mac-low.h	/^  bool m_ampdu;    \/\/!< Flag if the current transmission involves an A-MPDU$/;"	m	class:ns3::MacLow
m_ampduLen	minstrel-ht-wifi-manager.cc	/^  double m_ampduLen;          \/\/!< Number of MPDUs in an A-MPDU.$/;"	m	struct:ns3::MinstrelHtWifiRemoteStation	file:
m_ampduPacketCount	minstrel-ht-wifi-manager.cc	/^  uint32_t m_ampduPacketCount; \/\/!< Number of A-MPDUs transmitted.$/;"	m	struct:ns3::MinstrelHtWifiRemoteStation	file:
m_ampduReserved	ht-capabilities.h	/^  uint8_t m_ampduReserved;$/;"	m	class:ns3::HtCapabilities
m_amsduPresent	wifi-mac-header.h	/^  uint8_t m_amsduPresent;$/;"	m	class:ns3::WifiMacHeader
m_amsduSupport	mgt-headers.h	/^  uint8_t m_amsduSupport;  \/\/!< Flag if A-MSDU is supported$/;"	m	class:ns3::MgtAddBaRequestHeader
m_amsduSupport	mgt-headers.h	/^  uint8_t m_amsduSupport;  \/\/!< Flag if A-MSDU is supported$/;"	m	class:ns3::MgtAddBaResponseHeader
m_amsduSupported	block-ack-agreement.h	/^  uint8_t m_amsduSupported;  \/\/!< Flag whether MSDU aggregation is supported$/;"	m	class:ns3::BlockAckAgreement
m_antennaIndicesFeedbackBasedTxASelCapable	ht-capabilities.h	/^  uint8_t m_antennaIndicesFeedbackBasedTxASelCapable;$/;"	m	class:ns3::HtCapabilities
m_antennaIndicesFeedbackCapable	ht-capabilities.h	/^  uint8_t m_antennaIndicesFeedbackCapable;$/;"	m	class:ns3::HtCapabilities
m_antennaSelectionCapability	ht-capabilities.h	/^  uint8_t m_antennaSelectionCapability;$/;"	m	class:ns3::HtCapabilities
m_aparfState	aparf-wifi-manager.cc	/^  AparfWifiManager::State m_aparfState; \/\/!< The estimated state of the channel.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_assocLogger	sta-wifi-mac.h	/^  TracedCallback<Mac48Address> m_assocLogger;$/;"	m	class:ns3::StaWifiMac
m_assocRequestEvent	sta-wifi-mac.h	/^  EventId m_assocRequestEvent;$/;"	m	class:ns3::StaWifiMac
m_assocRequestTimeout	sta-wifi-mac.h	/^  Time m_assocRequestTimeout;$/;"	m	class:ns3::StaWifiMac
m_attemptThreshold	parf-wifi-manager.h	/^  uint32_t m_attemptThreshold; \/\/!< The minimum number of transmission attempts to try a new power or rate. The 'timer' threshold in the ARF algorithm.$/;"	m	class:ns3::ParfWifiManager
m_avgAmpduLen	minstrel-ht-wifi-manager.cc	/^  double m_avgAmpduLen;       \/\/!< Average number of MPDUs in an A-MPDU.$/;"	m	struct:ns3::MinstrelHtWifiRemoteStation	file:
m_bAckAgreements	mac-low.h	/^  Agreements m_bAckAgreements;$/;"	m	class:ns3::MacLow
m_bAckCaches	mac-low.h	/^  BlockAckCaches m_bAckCaches;$/;"	m	class:ns3::MacLow
m_baAckPolicy	ctrl-headers.h	/^  bool m_baAckPolicy;$/;"	m	class:ns3::CtrlBAckResponseHeader
m_baManager	edca-txop-n.h	/^  BlockAckManager *m_baManager;$/;"	m	class:ns3::EdcaTxopN
m_backoffSlots	dcf-manager.h	/^  uint32_t m_backoffSlots;$/;"	m	class:ns3::DcfState
m_backoffStart	dcf-manager.h	/^  Time m_backoffStart;$/;"	m	class:ns3::DcfState
m_barAckPolicy	ctrl-headers.h	/^  bool m_barAckPolicy;$/;"	m	class:ns3::CtrlBAckRequestHeader
m_bars	block-ack-manager.h	/^  std::list<Bar> m_bars;$/;"	m	class:ns3::BlockAckManager
m_basic	rraa-wifi-manager.h	/^  bool m_basic;$/;"	m	class:ns3::RraaWifiManager
m_basicBlockAckTimeout	mac-low.h	/^  Time m_basicBlockAckTimeout;              \/\/!< Basic block ACK timeout duration$/;"	m	class:ns3::MacLow
m_beMaxAmpduSize	regular-wifi-mac.h	/^  uint32_t m_beMaxAmpduSize;$/;"	m	class:ns3::RegularWifiMac
m_beMaxAmsduSize	regular-wifi-mac.h	/^  uint32_t m_beMaxAmsduSize;$/;"	m	class:ns3::RegularWifiMac
m_beaconDca	ap-wifi-mac.h	/^  Ptr<DcaTxop> m_beaconDca;                  \/\/!< Dedicated DcaTxop for beacons$/;"	m	class:ns3::ApWifiMac
m_beaconEvent	ap-wifi-mac.h	/^  EventId m_beaconEvent;                     \/\/!< Event to generate one beacon$/;"	m	class:ns3::ApWifiMac
m_beaconInterval	ap-wifi-mac.h	/^  Time m_beaconInterval;                     \/\/!< Interval between beacons$/;"	m	class:ns3::ApWifiMac
m_beaconInterval	mgt-headers.h	/^  uint64_t m_beaconInterval;          \/\/!< Beacon interval$/;"	m	class:ns3::MgtProbeResponseHeader
m_beaconJitter	ap-wifi-mac.h	/^  Ptr<UniformRandomVariable> m_beaconJitter; \/\/!< UniformRandomVariable used to randomize the time of the first beacon$/;"	m	class:ns3::ApWifiMac
m_beaconWatchdog	sta-wifi-mac.h	/^  EventId m_beaconWatchdog;$/;"	m	class:ns3::StaWifiMac
m_beaconWatchdogEnd	sta-wifi-mac.h	/^  Time m_beaconWatchdogEnd;$/;"	m	class:ns3::StaWifiMac
m_beamformeeStsCapable	vht-capabilities.h	/^  uint8_t m_beamformeeStsCapable;$/;"	m	class:ns3::VhtCapabilities
m_ber	ideal-wifi-manager.h	/^  double m_ber;             \/\/!< The maximum Bit Error Rate acceptable at any transmission mode$/;"	m	class:ns3::IdealWifiManager
m_bitmap	block-ack-cache.h	/^  uint16_t m_bitmap[4096];$/;"	m	class:ns3::BlockAckCache
m_bitmap	ctrl-headers.h	/^    uint16_t m_bitmap[64];$/;"	m	union:ns3::CtrlBAckResponseHeader::__anon1
m_bkMaxAmpduSize	regular-wifi-mac.h	/^  uint32_t m_bkMaxAmpduSize;$/;"	m	class:ns3::RegularWifiMac
m_bkMaxAmsduSize	regular-wifi-mac.h	/^  uint32_t m_bkMaxAmsduSize;$/;"	m	class:ns3::RegularWifiMac
m_blockAckInactivityTimeout	block-ack-manager.h	/^  Callback<void, Mac48Address, uint8_t, bool> m_blockAckInactivityTimeout;$/;"	m	class:ns3::BlockAckManager
m_blockAckInactivityTimeout	edca-txop-n.h	/^  uint16_t m_blockAckInactivityTimeout;$/;"	m	class:ns3::EdcaTxopN
m_blockAckListener	edca-txop-n.h	/^  AggregationCapableTransmissionListener *m_blockAckListener;$/;"	m	class:ns3::EdcaTxopN
m_blockAckPolicy	block-ack-agreement.h	/^  uint8_t m_blockAckPolicy;  \/\/!< Type of block ack: immediate or delayed$/;"	m	class:ns3::BlockAckAgreement
m_blockAckThreshold	block-ack-manager.h	/^  uint8_t m_blockAckThreshold;$/;"	m	class:ns3::BlockAckManager
m_blockAckThreshold	edca-txop-n.h	/^  uint8_t m_blockAckThreshold;$/;"	m	class:ns3::EdcaTxopN
m_blockAckTimeoutEvent	mac-low.h	/^  EventId m_blockAckTimeoutEvent;       \/\/!< Block ACK timeout event$/;"	m	class:ns3::MacLow
m_blockAckType	block-ack-manager.h	/^  enum BlockAckType m_blockAckType;$/;"	m	class:ns3::BlockAckManager	typeref:enum:ns3::BlockAckManager::BlockAckType
m_blockAckType	edca-txop-n.h	/^  enum BlockAckType m_blockAckType;$/;"	m	class:ns3::EdcaTxopN	typeref:enum:ns3::EdcaTxopN::BlockAckType
m_blockPackets	block-ack-manager.h	/^  Callback<void, Mac48Address, uint8_t> m_blockPackets;$/;"	m	class:ns3::BlockAckManager
m_blockedQosPackets	qos-blocked-destinations.h	/^  BlockedPackets m_blockedQosPackets;$/;"	m	class:ns3::QosBlockedDestinations
m_bssBasicMcsSet	wifi-remote-station-manager.h	/^  WifiModeList m_bssBasicMcsSet;$/;"	m	class:ns3::WifiRemoteStationManager
m_bssBasicRateSet	wifi-remote-station-manager.h	/^  WifiModeList m_bssBasicRateSet;$/;"	m	class:ns3::WifiRemoteStationManager
m_bssMembershipSelectorSet	yans-wifi-phy.h	/^  std::vector<uint32_t> m_bssMembershipSelectorSet;$/;"	m	class:ns3::YansWifiPhy
m_bssid	mac-low.h	/^  Mac48Address m_bssid;                     \/\/!< BSSID address (Mac48Address)$/;"	m	class:ns3::MacLow
m_bufferSize	block-ack-agreement.h	/^  uint16_t m_bufferSize;     \/\/!< Buffer size$/;"	m	class:ns3::BlockAckAgreement
m_bufferSize	mgt-headers.h	/^  uint16_t m_bufferSize;   \/\/!< Buffer size$/;"	m	class:ns3::MgtAddBaRequestHeader
m_bufferSize	mgt-headers.h	/^  uint16_t m_bufferSize;   \/\/!< Buffer size$/;"	m	class:ns3::MgtAddBaResponseHeader
m_calcTxTime	minstrel-wifi-manager.h	/^  TxTime m_calcTxTime;      \/\/\/< to hold all the calculated TxTime for all modes$/;"	m	class:ns3::MinstrelWifiManager
m_calibration	ht-capabilities.h	/^  uint8_t m_calibration;$/;"	m	class:ns3::HtCapabilities
m_callback	mac-rx-middle.h	/^  ForwardUpCallback m_callback;$/;"	m	class:ns3::MacRxMiddle
m_capability	capability-information.h	/^  uint16_t m_capability;$/;"	m	class:ns3::CapabilityInformation
m_capability	mgt-headers.h	/^  CapabilityInformation m_capability; \/\/!< Capability information$/;"	m	class:ns3::MgtAssocRequestHeader
m_capability	mgt-headers.h	/^  CapabilityInformation m_capability; \/\/!< Capability information$/;"	m	class:ns3::MgtAssocResponseHeader
m_capability	mgt-headers.h	/^  CapabilityInformation m_capability; \/\/!< Capability information$/;"	m	class:ns3::MgtProbeResponseHeader
m_category	mgt-headers.h	/^  uint8_t m_category; \/\/!< Category of the action$/;"	m	class:ns3::WifiActionHeader
m_ccaBusyCurrentA	wifi-radio-energy-model.h	/^  double m_ccaBusyCurrentA;$/;"	m	class:ns3::WifiRadioEnergyModel
m_ccaMode1ThresholdW	yans-wifi-phy.h	/^  double   m_ccaMode1ThresholdW;  \/\/!< Clear channel assessment (CCA) threshold in watts$/;"	m	class:ns3::YansWifiPhy
m_changeStateCallback	wifi-radio-energy-model.h	/^  DeviceEnergyModel::ChangeStateCallback m_changeStateCallback;$/;"	m	class:ns3::WifiRadioEnergyModelPhyListener
m_channel	yans-wifi-phy.h	/^  Ptr<YansWifiChannel> m_channel;        \/\/!< YansWifiChannel that this YansWifiPhy is connected to$/;"	m	class:ns3::YansWifiPhy
m_channelEstimationCapability	ht-capabilities.h	/^  uint8_t m_channelEstimationCapability;$/;"	m	class:ns3::HtCapabilities
m_channelNumber	yans-wifi-phy.h	/^  uint16_t             m_channelNumber;  \/\/!< Operating channel number$/;"	m	class:ns3::YansWifiPhy
m_channelStartingFrequency	yans-wifi-phy.h	/^  double m_channelStartingFrequency;    \/\/!< Standard-dependent center frequency of 0-th channel in MHz$/;"	m	class:ns3::YansWifiPhy
m_channelSwitchDelay	yans-wifi-phy.h	/^  Time m_channelSwitchDelay;            \/\/!< Time required to switch between channel$/;"	m	class:ns3::YansWifiPhy
m_channelWidth	wifi-remote-station-manager.h	/^  uint32_t m_channelWidth;    \/\/!< Channel width (in MHz) supported by the remote station$/;"	m	struct:ns3::WifiRemoteStationState
m_channelWidth	wifi-tx-vector.h	/^  uint32_t m_channelWidth;       \/**< channel width in MHz *\/$/;"	m	class:ns3::WifiTxVector
m_channelWidth	yans-wifi-phy.h	/^  uint32_t m_channelWidth;          \/\/!< Channel width$/;"	m	class:ns3::YansWifiPhy
m_code	mgt-headers.h	/^  StatusCode m_code;       \/\/!< Status code$/;"	m	class:ns3::MgtAddBaResponseHeader
m_code	mgt-headers.h	/^  StatusCode m_code; \/\/!< Status code$/;"	m	class:ns3::MgtAssocResponseHeader
m_code	status-code.h	/^  uint16_t m_code;$/;"	m	class:ns3::StatusCode
m_col	minstrel-ht-wifi-manager.h	/^  uint8_t m_col;                  \/\/!< Sample table column.$/;"	m	struct:ns3::GroupInfo
m_col	minstrel-wifi-manager.h	/^  uint32_t m_col, m_index;$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_compressed	ctrl-headers.h	/^  bool m_compressed;$/;"	m	class:ns3::CtrlBAckRequestHeader
m_compressed	ctrl-headers.h	/^  bool m_compressed;$/;"	m	class:ns3::CtrlBAckResponseHeader
m_compressedBitmap	ctrl-headers.h	/^    uint64_t m_compressedBitmap;$/;"	m	union:ns3::CtrlBAckResponseHeader::__anon1
m_compressedBlockAckTimeout	mac-low.h	/^  Time m_compressedBlockAckTimeout;         \/\/!< Compressed block ACK timeout duration$/;"	m	class:ns3::MacLow
m_compressedSteeringNBfAntennasSupported	ht-capabilities.h	/^  uint8_t m_compressedSteeringNBfAntennasSupported;$/;"	m	class:ns3::HtCapabilities
m_configComplete	wifi-net-device.h	/^  bool m_configComplete;$/;"	m	class:ns3::WifiNetDevice
m_counter	rraa-wifi-manager.cc	/^  uint32_t m_counter;$/;"	m	struct:ns3::RraaWifiRemoteStation	file:
m_crc	ampdu-subframe-header.h	/^  uint8_t m_crc;     \/\/!< CRC field$/;"	m	class:ns3::AmpduSubframeHeader
m_csiMaxNRowsBfSupported	ht-capabilities.h	/^  uint8_t m_csiMaxNRowsBfSupported;$/;"	m	class:ns3::HtCapabilities
m_csiNBfAntennasSupported	ht-capabilities.h	/^  uint8_t m_csiNBfAntennasSupported;$/;"	m	class:ns3::HtCapabilities
m_ctlMode	constant-rate-wifi-manager.h	/^  WifiMode m_ctlMode;  \/\/!< Wifi mode for RTS frames$/;"	m	class:ns3::ConstantRateWifiManager
m_ctrlFromDs	wifi-mac-header.h	/^  uint8_t m_ctrlFromDs;$/;"	m	class:ns3::WifiMacHeader
m_ctrlMoreData	wifi-mac-header.h	/^  uint8_t m_ctrlMoreData;$/;"	m	class:ns3::WifiMacHeader
m_ctrlMoreFrag	wifi-mac-header.h	/^  uint8_t m_ctrlMoreFrag;$/;"	m	class:ns3::WifiMacHeader
m_ctrlOrder	wifi-mac-header.h	/^  uint8_t m_ctrlOrder;$/;"	m	class:ns3::WifiMacHeader
m_ctrlRetry	wifi-mac-header.h	/^  uint8_t m_ctrlRetry;$/;"	m	class:ns3::WifiMacHeader
m_ctrlSubtype	wifi-mac-header.h	/^  uint8_t m_ctrlSubtype;$/;"	m	class:ns3::WifiMacHeader
m_ctrlToDs	wifi-mac-header.h	/^  uint8_t m_ctrlToDs;$/;"	m	class:ns3::WifiMacHeader
m_ctrlType	wifi-mac-header.h	/^  uint8_t m_ctrlType;$/;"	m	class:ns3::WifiMacHeader
m_ctrlWep	wifi-mac-header.h	/^  uint8_t m_ctrlWep;$/;"	m	class:ns3::WifiMacHeader
m_ctsTimeout	mac-low.h	/^  Time m_ctsTimeout;                        \/\/!< CTS timeout duration$/;"	m	class:ns3::MacLow
m_ctsTimeoutEvent	mac-low.h	/^  EventId m_ctsTimeoutEvent;            \/\/!< CTS timeout event$/;"	m	class:ns3::MacLow
m_ctsToSelfSupported	mac-low.h	/^  bool m_ctsToSelfSupported;          \/\/!< Flag whether CTS-to-self is supported$/;"	m	class:ns3::MacLow
m_ctsToSelfTxVector	wifi-remote-station-manager.cc	/^  WifiTxVector m_ctsToSelfTxVector;$/;"	m	class:ns3::HighLatencyCtsToSelfTxVectorTag	file:
m_currentBar	edca-txop-n.h	/^  struct Bar m_currentBar;$/;"	m	class:ns3::EdcaTxopN	typeref:struct:ns3::EdcaTxopN::Bar
m_currentHdr	dca-txop.h	/^  WifiMacHeader m_currentHdr;$/;"	m	class:ns3::DcaTxop
m_currentHdr	edca-txop-n.h	/^  WifiMacHeader m_currentHdr;$/;"	m	class:ns3::EdcaTxopN
m_currentHdr	mac-low.h	/^  WifiMacHeader m_currentHdr;               \/\/!< Header of the current transmitted packet$/;"	m	class:ns3::MacLow
m_currentPacket	dca-txop.h	/^  Ptr<const Packet> m_currentPacket;$/;"	m	class:ns3::DcaTxop
m_currentPacket	edca-txop-n.h	/^  Ptr<const Packet> m_currentPacket;$/;"	m	class:ns3::EdcaTxopN
m_currentPacket	mac-low.h	/^  Ptr<Packet> m_currentPacket;              \/\/!< Current packet transmitted\/to be transmitted$/;"	m	class:ns3::MacLow
m_currentPacketTimestamp	edca-txop-n.h	/^  Time m_currentPacketTimestamp;$/;"	m	class:ns3::EdcaTxopN
m_currentPower	parf-wifi-manager.cc	/^  uint8_t m_currentPower;    \/\/!< Current power used by the remote station.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_currentRate	ideal-wifi-manager.h	/^  TracedValue<uint64_t> m_currentRate; \/\/!< Trace rate changes$/;"	m	class:ns3::IdealWifiManager
m_currentRate	parf-wifi-manager.cc	/^  uint32_t m_currentRate;    \/\/!< Current rate used by the remote station.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_currentState	wifi-radio-energy-model.h	/^  WifiPhy::State m_currentState;  \/\/ current state the radio is in$/;"	m	class:ns3::WifiRadioEnergyModel
m_currentTxVector	mac-low.h	/^  WifiTxVector m_currentTxVector;     \/\/!< TXVECTOR used for the current packet transmission$/;"	m	class:ns3::MacLow
m_cw	dcf-manager.h	/^  uint32_t m_cw;$/;"	m	class:ns3::DcfState
m_cwMax	dcf-manager.h	/^  uint32_t m_cwMax;$/;"	m	class:ns3::DcfState
m_cwMin	dcf-manager.h	/^  uint32_t m_cwMin;$/;"	m	class:ns3::DcfState
m_da	amsdu-subframe-header.h	/^  Mac48Address m_da;$/;"	m	class:ns3::AmsduSubframeHeader
m_dataMode	constant-rate-wifi-manager.h	/^  WifiMode m_dataMode; \/\/!< Wifi mode for unicast DATA frames$/;"	m	class:ns3::ConstantRateWifiManager
m_dataTxVector	wifi-remote-station-manager.cc	/^  WifiTxVector m_dataTxVector;$/;"	m	class:ns3::HighLatencyDataTxVectorTag	file:
m_dca	regular-wifi-mac.h	/^  Ptr<DcaTxop> m_dca;$/;"	m	class:ns3::RegularWifiMac
m_dcf	dca-txop.h	/^  Dcf *m_dcf;$/;"	m	class:ns3::DcaTxop
m_dcf	dcf-manager.cc	/^  ns3::DcfManager *m_dcf;  \/\/!< DcfManager to forward events to$/;"	m	class:ns3::LowDcfListener	file:
m_dcf	dcf-manager.cc	/^  ns3::DcfManager *m_dcf;  \/\/!< DcfManager to forward events to$/;"	m	class:ns3::PhyListener	file:
m_dcf	edca-txop-n.h	/^  Dcf *m_dcf;$/;"	m	class:ns3::EdcaTxopN
m_dcfListeners	mac-low.h	/^  DcfListeners m_dcfListeners; \/\/!< List of MacLowDcfListener (pass events to Dcf)$/;"	m	class:ns3::MacLow
m_dcfManager	regular-wifi-mac.h	/^  DcfManager *m_dcfManager; \/\/!< DCF manager (access to channel)$/;"	m	class:ns3::RegularWifiMac
m_deAssocLogger	sta-wifi-mac.h	/^  TracedCallback<Mac48Address> m_deAssocLogger;$/;"	m	class:ns3::StaWifiMac
m_defaultTxMcs	wifi-remote-station-manager.h	/^  WifiMode m_defaultTxMcs;   \/\/!< The default transmission modulation-coding scheme (MCS)$/;"	m	class:ns3::WifiRemoteStationManager
m_defaultTxMode	wifi-remote-station-manager.h	/^  WifiMode m_defaultTxMode; \/\/!< The default transmission mode$/;"	m	class:ns3::WifiRemoteStationManager
m_defaultTxPowerLevel	wifi-remote-station-manager.h	/^  uint8_t m_defaultTxPowerLevel;  \/\/!< Default tranmission power level$/;"	m	class:ns3::WifiRemoteStationManager
m_defragmenting	mac-rx-middle.cc	/^  bool m_defragmenting;$/;"	m	class:ns3::OriginatorRxStatus	file:
m_delay	yans-wifi-channel.h	/^  Ptr<PropagationDelayModel> m_delay;  \/\/!< Propagation delay model$/;"	m	class:ns3::YansWifiChannel
m_delta	interference-helper.h	/^    double m_delta;$/;"	m	class:ns3::InterferenceHelper::NiChange
m_device	yans-wifi-phy.h	/^  Ptr<NetDevice>       m_device;         \/\/!< Pointer to the device$/;"	m	class:ns3::YansWifiPhy
m_deviceMcsSet	yans-wifi-phy.h	/^  WifiModeList m_deviceMcsSet;$/;"	m	class:ns3::YansWifiPhy
m_deviceRateSet	yans-wifi-phy.h	/^  WifiModeList m_deviceRateSet;$/;"	m	class:ns3::YansWifiPhy
m_dialogToken	mgt-headers.h	/^  uint8_t m_dialogToken;   \/* Not used for now *\/$/;"	m	class:ns3::MgtAddBaRequestHeader
m_dialogToken	mgt-headers.h	/^  uint8_t m_dialogToken;   \/* Not used for now *\/$/;"	m	class:ns3::MgtAddBaResponseHeader
m_dssMode40	ht-capabilities.h	/^  uint8_t m_dssMode40;$/;"	m	class:ns3::HtCapabilities
m_dualBeacon	ht-operations.h	/^  uint8_t m_dualBeacon;$/;"	m	class:ns3::HtOperations
m_dualCtsProtection	ht-operations.h	/^  uint8_t m_dualCtsProtection;$/;"	m	class:ns3::HtOperations
m_duration	wifi-mac-header.h	/^  uint16_t m_duration;$/;"	m	class:ns3::WifiMacHeader
m_edThresholdW	yans-wifi-phy.h	/^  double   m_edThresholdW;        \/\/!< Energy detection threshold in watts$/;"	m	class:ns3::YansWifiPhy
m_edca	regular-wifi-mac.h	/^  EdcaQueues m_edca;$/;"	m	class:ns3::RegularWifiMac
m_edcaListeners	mac-low.h	/^  QueueListeners m_edcaListeners;$/;"	m	class:ns3::MacLow
m_eifsNoDifs	dcf-manager.h	/^  Time m_eifsNoDifs;$/;"	m	class:ns3::DcfManager
m_elements	wifi-information-element-vector.h	/^  IE_VECTOR m_elements; \/\/!< Information element vector$/;"	m	class:ns3::WifiInformationElementVector
m_enableBeaconGeneration	ap-wifi-mac.h	/^  bool m_enableBeaconGeneration;             \/\/!< Flag whether beacons are being generated$/;"	m	class:ns3::ApWifiMac
m_enableBeaconJitter	ap-wifi-mac.h	/^  bool m_enableBeaconJitter;                 \/\/!< Flag whether the first beacon should be generated at random time$/;"	m	class:ns3::ApWifiMac
m_enableNonErpProtection	ap-wifi-mac.h	/^  bool m_enableNonErpProtection;             \/\/!< Flag whether protection mechanism is used or not when non-ERP STAs are present within the BSS$/;"	m	class:ns3::ApWifiMac
m_endCcaBusy	wifi-phy-state-helper.h	/^  Time m_endCcaBusy;$/;"	m	class:ns3::WifiPhyStateHelper
m_endPlcpRxEvent	yans-wifi-phy.h	/^  EventId m_endPlcpRxEvent;$/;"	m	class:ns3::YansWifiPhy
m_endRx	wifi-phy-state-helper.h	/^  Time m_endRx;$/;"	m	class:ns3::WifiPhyStateHelper
m_endRxEvent	yans-wifi-phy.h	/^  EventId m_endRxEvent;$/;"	m	class:ns3::YansWifiPhy
m_endSwitching	wifi-phy-state-helper.h	/^  Time m_endSwitching;$/;"	m	class:ns3::WifiPhyStateHelper
m_endTime	interference-helper.h	/^    Time m_endTime;$/;"	m	class:ns3::InterferenceHelper::Event
m_endTx	wifi-phy-state-helper.h	/^  Time m_endTx;$/;"	m	class:ns3::WifiPhyStateHelper
m_endTxNoAckEvent	mac-low.h	/^  EventId m_endTxNoAckEvent;            \/\/!< Event for finishing transmission that does not require ACK$/;"	m	class:ns3::MacLow
m_energyDepletionCallback	wifi-radio-energy-model.h	/^  WifiRadioEnergyDepletionCallback m_energyDepletionCallback;$/;"	m	class:ns3::WifiRadioEnergyModel
m_energyRechargedCallback	wifi-radio-energy-model.h	/^  WifiRadioEnergyRechargedCallback m_energyRechargedCallback;$/;"	m	class:ns3::WifiRadioEnergyModel
m_eof	ampdu-subframe-header.h	/^  bool m_eof;        \/\/!< EOF field$/;"	m	class:ns3::AmpduSubframeHeader
m_erpInformation	erp-information.h	/^  uint8_t m_erpInformation;$/;"	m	class:ns3::ErpInformation
m_erpInformation	mgt-headers.h	/^  ErpInformation m_erpInformation;    \/\/!< ERP information$/;"	m	class:ns3::MgtAssocResponseHeader
m_erpInformation	mgt-headers.h	/^  ErpInformation m_erpInformation;    \/\/!< ERP information$/;"	m	class:ns3::MgtProbeResponseHeader
m_erpSupported	erp-information.h	/^  bool m_erpSupported;$/;"	m	class:ns3::ErpInformation
m_erpSupported	regular-wifi-mac.h	/^  bool m_erpSupported;$/;"	m	class:ns3::RegularWifiMac
m_errorRateModel	interference-helper.h	/^  Ptr<ErrorRateModel> m_errorRateModel;$/;"	m	class:ns3::InterferenceHelper
m_eta	wifi-tx-current-model.h	/^  double m_eta;$/;"	m	class:ns3::LinearWifiTxCurrentModel
m_ewmaLevel	minstrel-ht-wifi-manager.h	/^  double m_ewmaLevel;         \/\/!< Exponential weighted moving average level (or coefficient).$/;"	m	class:ns3::MinstrelHtWifiManager
m_ewmaLevel	minstrel-wifi-manager.h	/^  double m_ewmaLevel;       \/\/\/< exponential weighted moving average$/;"	m	class:ns3::MinstrelWifiManager
m_ewndfor12	rraa-wifi-manager.h	/^  uint32_t m_ewndfor12;$/;"	m	class:ns3::RraaWifiManager
m_ewndfor18	rraa-wifi-manager.h	/^  uint32_t m_ewndfor18;$/;"	m	class:ns3::RraaWifiManager
m_ewndfor24	rraa-wifi-manager.h	/^  uint32_t m_ewndfor24;$/;"	m	class:ns3::RraaWifiManager
m_ewndfor36	rraa-wifi-manager.h	/^  uint32_t m_ewndfor36;$/;"	m	class:ns3::RraaWifiManager
m_ewndfor48	rraa-wifi-manager.h	/^  uint32_t m_ewndfor48;$/;"	m	class:ns3::RraaWifiManager
m_ewndfor54	rraa-wifi-manager.h	/^  uint32_t m_ewndfor54;$/;"	m	class:ns3::RraaWifiManager
m_ewndfor6	rraa-wifi-manager.h	/^  uint32_t m_ewndfor6;$/;"	m	class:ns3::RraaWifiManager
m_ewndfor9	rraa-wifi-manager.h	/^  uint32_t m_ewndfor9;$/;"	m	class:ns3::RraaWifiManager
m_explicitCompressedBfFeedbackCapable	ht-capabilities.h	/^  uint8_t m_explicitCompressedBfFeedbackCapable;$/;"	m	class:ns3::HtCapabilities
m_explicitCompressedSteeringCapable	ht-capabilities.h	/^  uint8_t m_explicitCompressedSteeringCapable;$/;"	m	class:ns3::HtCapabilities
m_explicitCsiFeedbackBasedTxASelCapable	ht-capabilities.h	/^  uint8_t m_explicitCsiFeedbackBasedTxASelCapable;$/;"	m	class:ns3::HtCapabilities
m_explicitCsiFeedbackCapable	ht-capabilities.h	/^  uint8_t m_explicitCsiFeedbackCapable;$/;"	m	class:ns3::HtCapabilities
m_explicitCsiTxBfCapable	ht-capabilities.h	/^  uint8_t m_explicitCsiTxBfCapable;$/;"	m	class:ns3::HtCapabilities
m_explicitNoncompressedBfFeedbackCapable	ht-capabilities.h	/^  uint8_t m_explicitNoncompressedBfFeedbackCapable;$/;"	m	class:ns3::HtCapabilities
m_explicitNoncompressedSteeringCapable	ht-capabilities.h	/^  uint8_t m_explicitNoncompressedSteeringCapable;$/;"	m	class:ns3::HtCapabilities
m_explicitTxBfCsiFeedback	ht-capabilities.h	/^  uint8_t m_explicitTxBfCsiFeedback;$/;"	m	class:ns3::HtCapabilities
m_failAvg	wifi-remote-station-manager.h	/^  double m_failAvg;$/;"	m	class:ns3::WifiRemoteStationInfo
m_failMax	aparf-wifi-manager.h	/^  uint32_t m_failMax;    \/\/!< The minimum number of failed transmissions to try a new power or rate.$/;"	m	class:ns3::AparfWifiManager
m_failThreshold	aparf-wifi-manager.cc	/^  uint32_t m_failThreshold;             \/\/!< The minimum number of failed transmissions to try a new power or rate.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_failed	aarf-wifi-manager.cc	/^  uint32_t m_failed;$/;"	m	struct:ns3::AarfWifiRemoteStation	file:
m_failed	aarfcd-wifi-manager.cc	/^  uint32_t m_failed;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_failed	arf-wifi-manager.cc	/^  uint32_t m_failed;$/;"	m	struct:ns3::ArfWifiRemoteStation	file:
m_failed	cara-wifi-manager.cc	/^  uint32_t m_failed;$/;"	m	struct:ns3::CaraWifiRemoteStation	file:
m_failed	rraa-wifi-manager.cc	/^  uint32_t m_failed;$/;"	m	struct:ns3::RraaWifiRemoteStation	file:
m_failureRatio	amrr-wifi-manager.h	/^  double m_failureRatio;$/;"	m	class:ns3::AmrrWifiManager
m_failureThreshold	cara-wifi-manager.h	/^  uint32_t m_failureThreshold;$/;"	m	class:ns3::CaraWifiManager
m_fastAckFailedTimeoutEvent	mac-low.h	/^  EventId m_fastAckFailedTimeoutEvent;  \/\/!< Fast ACK failed timeout event$/;"	m	class:ns3::MacLow
m_fastAckTimeoutEvent	mac-low.h	/^  EventId m_fastAckTimeoutEvent;        \/\/!< Fast ACK timeout event$/;"	m	class:ns3::MacLow
m_firstPower	interference-helper.h	/^  double m_firstPower;$/;"	m	class:ns3::InterferenceHelper
m_fortyMhzIntolerant	ht-capabilities.h	/^  uint8_t m_fortyMhzIntolerant;$/;"	m	class:ns3::HtCapabilities
m_forwardUp	regular-wifi-mac.h	/^  ForwardUpCallback m_forwardUp; \/\/!< Callback to forward packet up the stack$/;"	m	class:ns3::RegularWifiMac
m_forwardUp	wifi-net-device.h	/^  NetDevice::ReceiveCallback m_forwardUp;$/;"	m	class:ns3::WifiNetDevice
m_fragmentNumber	dca-txop.h	/^  uint8_t m_fragmentNumber;$/;"	m	class:ns3::DcaTxop
m_fragmentNumber	edca-txop-n.h	/^  uint8_t m_fragmentNumber;$/;"	m	class:ns3::EdcaTxopN
m_fragmentationThreshold	wifi-remote-station-manager.h	/^  uint32_t m_fragmentationThreshold;  \/\/!< Current threshold for fragmentation$/;"	m	class:ns3::WifiRemoteStationManager
m_fragments	mac-rx-middle.cc	/^  Fragments m_fragments;$/;"	m	class:ns3::OriginatorRxStatus	file:
m_frameLength	minstrel-ht-wifi-manager.h	/^  uint32_t m_frameLength;     \/\/!< Frame length used for calculate modes TxTime.$/;"	m	class:ns3::MinstrelHtWifiManager
m_greenField	ht-capabilities.h	/^  uint8_t m_greenField;$/;"	m	class:ns3::HtCapabilities
m_greenfield	wifi-remote-station-manager.h	/^  bool m_greenfield;          \/\/!< Flag if greenfield is supported by the remote station$/;"	m	struct:ns3::WifiRemoteStationState
m_greenfield	yans-wifi-phy.h	/^  bool     m_greenfield;            \/\/!< Flag if GreenField format is supported$/;"	m	class:ns3::YansWifiPhy
m_groupsTable	minstrel-ht-wifi-manager.cc	/^  McsGroupData m_groupsTable;  \/\/!< Table of groups with stats.$/;"	m	struct:ns3::MinstrelHtWifiRemoteStation	file:
m_guardInterval	yans-wifi-phy.h	/^  bool     m_guardInterval;         \/\/!< Flag if short guard interval is used$/;"	m	class:ns3::YansWifiPhy
m_haveASuccess	aarfcd-wifi-manager.cc	/^  bool m_haveASuccess;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_htCapability	mgt-headers.h	/^  HtCapabilities m_htCapability;      \/\/!< HT capabilities$/;"	m	class:ns3::MgtAssocRequestHeader
m_htCapability	mgt-headers.h	/^  HtCapabilities m_htCapability;      \/\/!< HT capabilities$/;"	m	class:ns3::MgtProbeResponseHeader
m_htCapability	mgt-headers.h	/^  HtCapabilities m_htCapability;   \/\/!< HT capabilities$/;"	m	class:ns3::MgtProbeRequestHeader
m_htCapability	mgt-headers.h	/^  HtCapabilities m_htCapability; \/\/!< HT capabilities$/;"	m	class:ns3::MgtAssocResponseHeader
m_htDelayedBlockAck	ht-capabilities.h	/^  uint8_t m_htDelayedBlockAck;$/;"	m	class:ns3::HtCapabilities
m_htOperations	mgt-headers.h	/^  HtOperations m_htOperations;        \/\/!< HT operations$/;"	m	class:ns3::MgtProbeResponseHeader
m_htOperations	mgt-headers.h	/^  HtOperations m_htOperations; \/\/!< HT operations$/;"	m	class:ns3::MgtAssocResponseHeader
m_htProtection	ht-operations.h	/^  uint8_t m_htProtection;$/;"	m	class:ns3::HtOperations
m_htSupported	block-ack-agreement.h	/^  uint8_t m_htSupported;     \/\/!< Flag whether HT is supported$/;"	m	class:ns3::BlockAckAgreement
m_htSupported	ht-capabilities.h	/^  uint8_t m_htSupported;$/;"	m	class:ns3::HtCapabilities
m_htSupported	ht-operations.h	/^  uint8_t m_htSupported;$/;"	m	class:ns3::HtOperations
m_htSupported	regular-wifi-mac.h	/^  bool m_htSupported;$/;"	m	class:ns3::RegularWifiMac
m_htSupported	wifi-remote-station-manager.h	/^  bool m_htSupported;         \/\/!< Flag if HT is supported by the station$/;"	m	struct:ns3::WifiRemoteStationState
m_htSupported	wifi-remote-station-manager.h	/^  bool m_htSupported;  \/\/!< Flag if HT capability is supported$/;"	m	class:ns3::WifiRemoteStationManager
m_htcSupport	ht-capabilities.h	/^  uint8_t m_htcSupport;$/;"	m	class:ns3::HtCapabilities
m_htcVhtCapable	vht-capabilities.h	/^  uint8_t m_htcVhtCapable;$/;"	m	class:ns3::VhtCapabilities
m_idleCurrent	wifi-tx-current-model.h	/^  double m_idleCurrent;$/;"	m	class:ns3::LinearWifiTxCurrentModel
m_idleCurrentA	wifi-radio-energy-model.h	/^  double m_idleCurrentA;$/;"	m	class:ns3::WifiRadioEnergyModel
m_ifIndex	wifi-net-device.h	/^  uint32_t m_ifIndex;$/;"	m	class:ns3::WifiNetDevice
m_implicitRxBfCapable	ht-capabilities.h	/^  uint8_t m_implicitRxBfCapable;$/;"	m	class:ns3::HtCapabilities
m_implicitTxBfCapable	ht-capabilities.h	/^  uint8_t m_implicitTxBfCapable;$/;"	m	class:ns3::HtCapabilities
m_inactivityEvent	block-ack-agreement.h	/^  EventId m_inactivityEvent;$/;"	m	class:ns3::BlockAckAgreement
m_index	minstrel-ht-wifi-manager.h	/^  uint8_t m_index;                \/\/!< Sample table index.$/;"	m	struct:ns3::GroupInfo
m_index	minstrel-wifi-manager.h	/^  uint32_t m_col, m_index;$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_info	wifi-remote-station-manager.h	/^  WifiRemoteStationInfo m_info;$/;"	m	struct:ns3::WifiRemoteStationState
m_initialized	aparf-wifi-manager.cc	/^  bool m_initialized;                   \/\/!< For initializing variables.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_initialized	minstrel-wifi-manager.h	/^  bool m_initialized;            \/\/\/< for initializing tables$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_initialized	parf-wifi-manager.cc	/^  bool m_initialized;        \/\/!< For initializing variables.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_initialized	rraa-wifi-manager.cc	/^  bool m_initialized;$/;"	m	struct:ns3::RraaWifiRemoteStation	file:
m_initialized	yans-wifi-phy.h	/^  bool     m_initialized;         \/\/!< Flag for runtime initialization$/;"	m	class:ns3::YansWifiPhy
m_initiator	mgt-headers.h	/^  uint16_t m_initiator;$/;"	m	class:ns3::MgtDelBaHeader
m_interference	yans-wifi-phy.h	/^  InterferenceHelper m_interference;    \/\/!< Pointer to InterferenceHelper$/;"	m	class:ns3::YansWifiPhy
m_isHt	minstrel-ht-wifi-manager.cc	/^  bool m_isHt;                 \/\/!< If the station is HT capable.$/;"	m	struct:ns3::MinstrelHtWifiRemoteStation	file:
m_isSampling	minstrel-wifi-manager.h	/^  bool m_isSampling;             \/\/\/< a flag to indicate we are currently sampling$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_isSupersededChangeState	wifi-radio-energy-model.h	/^  bool m_isSupersededChangeState;$/;"	m	class:ns3::WifiRadioEnergyModel
m_itemList	wifi-mode.h	/^  WifiModeItemList m_itemList;$/;"	m	class:ns3::WifiModeFactory
m_justModifyRate	aarfcd-wifi-manager.cc	/^  bool m_justModifyRate;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_lSigTxopProtectionFullSupport	ht-operations.h	/^  uint8_t m_lSigTxopProtectionFullSupport;$/;"	m	class:ns3::HtOperations
m_lastAckTimeoutEnd	dcf-manager.h	/^  Time m_lastAckTimeoutEnd;$/;"	m	class:ns3::DcfManager
m_lastBusyDuration	dcf-manager.h	/^  Time m_lastBusyDuration;$/;"	m	class:ns3::DcfManager
m_lastBusyStart	dcf-manager.h	/^  Time m_lastBusyStart;$/;"	m	class:ns3::DcfManager
m_lastCtsTimeoutEnd	dcf-manager.h	/^  Time m_lastCtsTimeoutEnd;$/;"	m	class:ns3::DcfManager
m_lastFrameFail	rraa-wifi-manager.cc	/^  bool m_lastFrameFail;$/;"	m	struct:ns3::RraaWifiRemoteStation	file:
m_lastMode	ideal-wifi-manager.cc	/^  WifiMode m_lastMode;       \/\/!< Mode most recently used to the remote station$/;"	m	struct:ns3::IdealWifiRemoteStation	file:
m_lastNavDuration	dcf-manager.h	/^  Time m_lastNavDuration;$/;"	m	class:ns3::DcfManager
m_lastNavDuration	mac-low.h	/^  Time m_lastNavDuration;  \/\/!< The duration of the latest NAV$/;"	m	class:ns3::MacLow
m_lastNavStart	dcf-manager.h	/^  Time m_lastNavStart;$/;"	m	class:ns3::DcfManager
m_lastNavStart	mac-low.h	/^  Time m_lastNavStart;     \/\/!< The time when the latest NAV started$/;"	m	class:ns3::MacLow
m_lastReceivedHdr	mac-low.h	/^  WifiMacHeader m_lastReceivedHdr;          \/\/!< Header of the last received packet$/;"	m	class:ns3::MacLow
m_lastReset	rraa-wifi-manager.cc	/^  Time m_lastReset;$/;"	m	struct:ns3::RraaWifiRemoteStation	file:
m_lastRxDuration	dcf-manager.h	/^  Time m_lastRxDuration;$/;"	m	class:ns3::DcfManager
m_lastRxEnd	dcf-manager.h	/^  Time m_lastRxEnd;$/;"	m	class:ns3::DcfManager
m_lastRxReceivedOk	dcf-manager.h	/^  bool m_lastRxReceivedOk;$/;"	m	class:ns3::DcfManager
m_lastRxStart	dcf-manager.h	/^  Time m_lastRxStart;$/;"	m	class:ns3::DcfManager
m_lastSequenceControl	mac-rx-middle.cc	/^  uint16_t m_lastSequenceControl;$/;"	m	class:ns3::OriginatorRxStatus	file:
m_lastSnrCached	ideal-wifi-manager.cc	/^  double m_lastSnrCached;    \/\/!< SNR most recently used to select a rate$/;"	m	struct:ns3::IdealWifiRemoteStation	file:
m_lastSnrObserved	ideal-wifi-manager.cc	/^  double m_lastSnrObserved;  \/\/!< SNR of most recently reported packet sent to the remote station$/;"	m	struct:ns3::IdealWifiRemoteStation	file:
m_lastSwitchingDuration	dcf-manager.h	/^  Time m_lastSwitchingDuration;$/;"	m	class:ns3::DcfManager
m_lastSwitchingStart	dcf-manager.h	/^  Time m_lastSwitchingStart;$/;"	m	class:ns3::DcfManager
m_lastTxDuration	dcf-manager.h	/^  Time m_lastTxDuration;$/;"	m	class:ns3::DcfManager
m_lastTxStart	dcf-manager.h	/^  Time m_lastTxStart;$/;"	m	class:ns3::DcfManager
m_lastUpdate	wifi-remote-station-manager.h	/^  Time m_lastUpdate;$/;"	m	class:ns3::WifiRemoteStationInfo
m_lastUpdateTime	wifi-radio-energy-model.h	/^  Time m_lastUpdateTime;          \/\/ time stamp of previous energy update$/;"	m	class:ns3::WifiRadioEnergyModel
m_ldpc	ht-capabilities.h	/^  uint8_t m_ldpc;$/;"	m	class:ns3::HtCapabilities
m_ldpc	yans-wifi-phy.h	/^  bool     m_ldpc;                  \/\/!< Flag if LDPC is used$/;"	m	class:ns3::YansWifiPhy
m_legacyManager	minstrel-ht-wifi-manager.h	/^  Ptr<MinstrelWifiManager> m_legacyManager;           \/\/!< Pointer to an instance of MinstrelWifiManager. Used when 802.11n\/ac not supported.$/;"	m	class:ns3::MinstrelHtWifiManager
m_length	ampdu-subframe-header.h	/^  uint16_t m_length; \/\/!< length field$/;"	m	class:ns3::AmpduSubframeHeader
m_length	amsdu-subframe-header.h	/^  uint16_t m_length;$/;"	m	class:ns3::AmsduSubframeHeader
m_length	ssid.h	/^  uint8_t m_length;   \/\/!< Length of the SSID$/;"	m	class:ns3::Ssid
m_linkChanges	wifi-net-device.h	/^  TracedCallback<> m_linkChanges;$/;"	m	class:ns3::WifiNetDevice
m_linkDown	regular-wifi-mac.h	/^  Callback<void> m_linkDown;     \/\/!< Callback when a link is down$/;"	m	class:ns3::RegularWifiMac
m_linkUp	regular-wifi-mac.h	/^  Callback<void> m_linkUp;       \/\/!< Callback when a link is up$/;"	m	class:ns3::RegularWifiMac
m_linkUp	wifi-net-device.h	/^  bool m_linkUp;$/;"	m	class:ns3::WifiNetDevice
m_listenInterval	mgt-headers.h	/^  uint16_t m_listenInterval;$/;"	m	class:ns3::MgtAssocRequestHeader
m_listener	mac-low.h	/^  MacLowTransmissionListener *m_listener;   \/\/!< Transmission listener for the current packet$/;"	m	class:ns3::MacLow
m_listener	wifi-radio-energy-model.h	/^  WifiRadioEnergyModelPhyListener *m_listener;$/;"	m	class:ns3::WifiRadioEnergyModel
m_listeners	wifi-phy-state-helper.h	/^  Listeners m_listeners;$/;"	m	class:ns3::WifiPhyStateHelper
m_longRetry	minstrel-wifi-manager.h	/^  uint32_t m_longRetry;          \/\/\/< long retries such as data packets$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_longRetry	onoe-wifi-manager.cc	/^  uint32_t m_longRetry;$/;"	m	struct:ns3::OnoeWifiRemoteStation	file:
m_lookAroundRate	minstrel-ht-wifi-manager.h	/^  double m_lookAroundRate;    \/\/!< The % to try other rates than our current rate.$/;"	m	class:ns3::MinstrelHtWifiManager
m_lookAroundRate	minstrel-wifi-manager.h	/^  double m_lookAroundRate;  \/\/\/< the % to try other rates than our current rate$/;"	m	class:ns3::MinstrelWifiManager
m_loss	yans-wifi-channel.h	/^  Ptr<PropagationLossModel> m_loss;    \/\/!< Propagation loss model$/;"	m	class:ns3::YansWifiChannel
m_low	dca-txop.h	/^  Ptr <MacLow> m_low;$/;"	m	class:ns3::DcaTxop
m_low	edca-txop-n.h	/^  Ptr<MacLow> m_low;$/;"	m	class:ns3::EdcaTxopN
m_low	regular-wifi-mac.h	/^  Ptr<MacLow> m_low;        \/\/!< MacLow (RTS, CTS, DATA, ACK etc.)$/;"	m	class:ns3::RegularWifiMac
m_lowListener	dcf-manager.h	/^  LowDcfListener* m_lowListener;$/;"	m	class:ns3::DcfManager
m_lsigProtectionSupport	ht-capabilities.h	/^  uint8_t m_lsigProtectionSupport;$/;"	m	class:ns3::HtCapabilities
m_mac	wifi-net-device.h	/^  Ptr<WifiMac> m_mac;$/;"	m	class:ns3::WifiNetDevice
m_macLow	mac-low.cc	/^  ns3::MacLow *m_macLow;$/;"	m	class:ns3::PhyMacLowListener	file:
m_macPromiscRxTrace	wifi-mac.h	/^  TracedCallback<Ptr<const Packet> > m_macPromiscRxTrace;$/;"	m	class:ns3::WifiMac
m_macRxDropTrace	wifi-mac.h	/^  TracedCallback<Ptr<const Packet> > m_macRxDropTrace;$/;"	m	class:ns3::WifiMac
m_macRxTrace	wifi-mac.h	/^  TracedCallback<Ptr<const Packet> > m_macRxTrace;$/;"	m	class:ns3::WifiMac
m_macTxDataFailed	wifi-remote-station-manager.h	/^  TracedCallback<Mac48Address> m_macTxDataFailed;$/;"	m	class:ns3::WifiRemoteStationManager
m_macTxDropTrace	wifi-mac.h	/^  TracedCallback<Ptr<const Packet> > m_macTxDropTrace;$/;"	m	class:ns3::WifiMac
m_macTxFinalDataFailed	wifi-remote-station-manager.h	/^  TracedCallback<Mac48Address> m_macTxFinalDataFailed;$/;"	m	class:ns3::WifiRemoteStationManager
m_macTxFinalRtsFailed	wifi-remote-station-manager.h	/^  TracedCallback<Mac48Address> m_macTxFinalRtsFailed;$/;"	m	class:ns3::WifiRemoteStationManager
m_macTxRtsFailed	wifi-remote-station-manager.h	/^  TracedCallback<Mac48Address> m_macTxRtsFailed;$/;"	m	class:ns3::WifiRemoteStationManager
m_macTxTrace	wifi-mac.h	/^  TracedCallback<Ptr<const Packet> > m_macTxTrace;$/;"	m	class:ns3::WifiMac
m_manager	dca-txop.h	/^  DcfManager *m_manager;$/;"	m	class:ns3::DcaTxop
m_manager	edca-txop-n.h	/^  DcfManager *m_manager;$/;"	m	class:ns3::EdcaTxopN
m_maxAmpduLength	ht-capabilities.h	/^  uint8_t m_maxAmpduLength;$/;"	m	class:ns3::HtCapabilities
m_maxAmpduLength	mpdu-standard-aggregator.h	/^  uint32_t m_maxAmpduLength; \/\/!< Maximum length in bytes of A-MPDUs$/;"	m	class:ns3::MpduStandardAggregator
m_maxAmpduLengthExponent	vht-capabilities.h	/^  uint8_t m_maxAmpduLengthExponent;$/;"	m	class:ns3::VhtCapabilities
m_maxAmsduLength	ht-capabilities.h	/^  uint8_t m_maxAmsduLength;$/;"	m	class:ns3::HtCapabilities
m_maxAmsduLength	msdu-standard-aggregator.h	/^  uint32_t m_maxAmsduLength;$/;"	m	class:ns3::MsduStandardAggregator
m_maxDelay	block-ack-manager.h	/^  Time m_maxDelay;$/;"	m	class:ns3::BlockAckManager
m_maxDelay	wifi-mac-queue.h	/^  Time m_maxDelay;     \/\/!< Time to live for packets in the queue$/;"	m	class:ns3::WifiMacQueue
m_maxMissedBeacons	sta-wifi-mac.h	/^  uint32_t m_maxMissedBeacons;$/;"	m	class:ns3::StaWifiMac
m_maxMpduLength	vht-capabilities.h	/^  uint16_t m_maxMpduLength;$/;"	m	class:ns3::VhtCapabilities
m_maxPower	aparf-wifi-manager.h	/^  uint32_t m_maxPower;$/;"	m	class:ns3::AparfWifiManager
m_maxPower	parf-wifi-manager.h	/^  uint32_t m_maxPower;$/;"	m	class:ns3::ParfWifiManager
m_maxProbRate	minstrel-ht-wifi-manager.h	/^  uint32_t m_maxProbRate;         \/\/!< The highest success probability rate of this group.$/;"	m	struct:ns3::GroupInfo
m_maxProbRate	minstrel-wifi-manager.h	/^  uint32_t m_maxProbRate;        \/\/\/< rate with highest prob of success$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_maxPropagationDelay	wifi-mac.h	/^  Time m_maxPropagationDelay;$/;"	m	class:ns3::WifiMac
m_maxRtsWnd	aarfcd-wifi-manager.h	/^  uint32_t m_maxRtsWnd;$/;"	m	class:ns3::AarfcdWifiManager
m_maxSize	wifi-information-element-vector.h	/^  uint16_t m_maxSize;$/;"	m	class:ns3::WifiInformationElementVector
m_maxSize	wifi-mac-queue.h	/^  uint32_t m_maxSize;  \/\/!< Queue capacity$/;"	m	class:ns3::WifiMacQueue
m_maxSlrc	wifi-remote-station-manager.h	/^  uint32_t m_maxSlrc;  \/\/!< Maximum STA long retry count (SLRC)$/;"	m	class:ns3::WifiRemoteStationManager
m_maxSsrc	wifi-remote-station-manager.h	/^  uint32_t m_maxSsrc;  \/\/!< Maximum STA short retry count (SSRC)$/;"	m	class:ns3::WifiRemoteStationManager
m_maxSuccessThreshold	aarf-wifi-manager.h	/^  uint32_t m_maxSuccessThreshold;$/;"	m	class:ns3::AarfWifiManager
m_maxSuccessThreshold	aarfcd-wifi-manager.h	/^  uint32_t m_maxSuccessThreshold;$/;"	m	class:ns3::AarfcdWifiManager
m_maxSuccessThreshold	amrr-wifi-manager.h	/^  uint32_t m_maxSuccessThreshold;$/;"	m	class:ns3::AmrrWifiManager
m_maxTpRate	minstrel-ht-wifi-manager.h	/^  uint32_t m_maxTpRate;           \/\/!< The max throughput rate of this group.$/;"	m	struct:ns3::GroupInfo
m_maxTpRate	minstrel-wifi-manager.h	/^  uint32_t m_maxTpRate;          \/\/\/< the current throughput rate$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_maxTpRate2	minstrel-ht-wifi-manager.h	/^  uint32_t m_maxTpRate2;          \/\/!< The second max throughput rate of this group.$/;"	m	struct:ns3::GroupInfo
m_maxTpRate2	minstrel-wifi-manager.h	/^  uint32_t m_maxTpRate2;         \/\/\/< second highest throughput rate$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_mcsFeedback	ht-capabilities.h	/^  uint8_t m_mcsFeedback;$/;"	m	class:ns3::HtCapabilities
m_memoryTime	wifi-remote-station-manager.h	/^  Time m_memoryTime;$/;"	m	class:ns3::WifiRemoteStationInfo
m_minMpduStartSpace	ht-capabilities.h	/^  uint8_t m_minMpduStartSpace;$/;"	m	class:ns3::HtCapabilities
m_minPower	aparf-wifi-manager.h	/^  uint32_t m_minPower;  $/;"	m	class:ns3::AparfWifiManager
m_minPower	parf-wifi-manager.h	/^  uint32_t m_minPower;$/;"	m	class:ns3::ParfWifiManager
m_minRtsWnd	aarfcd-wifi-manager.h	/^  uint32_t m_minRtsWnd;$/;"	m	class:ns3::AarfcdWifiManager
m_minSuccessThreshold	aarf-wifi-manager.h	/^  uint32_t m_minSuccessThreshold;$/;"	m	class:ns3::AarfWifiManager
m_minSuccessThreshold	aarfcd-wifi-manager.h	/^  uint32_t m_minSuccessThreshold;$/;"	m	class:ns3::AarfcdWifiManager
m_minSuccessThreshold	amrr-wifi-manager.h	/^  uint32_t m_minSuccessThreshold;$/;"	m	class:ns3::AmrrWifiManager
m_minTimerThreshold	aarf-wifi-manager.h	/^  uint32_t m_minTimerThreshold;$/;"	m	class:ns3::AarfWifiManager
m_minTimerThreshold	aarfcd-wifi-manager.h	/^  uint32_t m_minTimerThreshold;$/;"	m	class:ns3::AarfcdWifiManager
m_minimalGrouping	ht-capabilities.h	/^  uint8_t m_minimalGrouping;$/;"	m	class:ns3::HtCapabilities
m_minstrelGroups	minstrel-ht-wifi-manager.h	/^  MinstrelMcsGroups m_minstrelGroups;                 \/\/!< Global array for groups information.$/;"	m	class:ns3::MinstrelHtWifiManager
m_minstrelTable	minstrel-wifi-manager.h	/^  MinstrelRate m_minstrelTable;  \/\/\/< minstrel table$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_mobility	yans-wifi-phy.h	/^  Ptr<MobilityModel>   m_mobility;       \/\/!< Pointer to the mobility model$/;"	m	class:ns3::YansWifiPhy
m_mode	wifi-tx-vector.h	/^  WifiMode m_mode;               \/**< The DATARATE parameter in Table 15-4.$/;"	m	class:ns3::WifiTxVector
m_modeInitialized	wifi-tx-vector.h	/^  bool     m_modeInitialized;         \/\/*< Internal initialization flag *\/$/;"	m	class:ns3::WifiTxVector
m_mpduAggregator	edca-txop-n.h	/^  Ptr<MpduAggregator> m_mpduAggregator;$/;"	m	class:ns3::EdcaTxopN
m_mpdusNum	yans-wifi-phy.h	/^  uint16_t m_mpdusNum;                  \/\/!< carries the number of expected mpdus that are part of an A-MPDU$/;"	m	class:ns3::YansWifiPhy
m_msduAggregator	edca-txop-n.h	/^  Ptr<MsduAggregator> m_msduAggregator;$/;"	m	class:ns3::EdcaTxopN
m_mtu	wifi-net-device.h	/^  mutable uint16_t m_mtu;$/;"	m	class:ns3::WifiNetDevice
m_muBeamformeeCapable	vht-capabilities.h	/^  uint8_t m_muBeamformeeCapable;$/;"	m	class:ns3::VhtCapabilities
m_muBeamformerCapable	vht-capabilities.h	/^  uint8_t m_muBeamformerCapable;$/;"	m	class:ns3::VhtCapabilities
m_multiTid	ctrl-headers.h	/^  bool m_multiTid;$/;"	m	class:ns3::CtrlBAckRequestHeader
m_multiTid	ctrl-headers.h	/^  bool m_multiTid;$/;"	m	class:ns3::CtrlBAckResponseHeader
m_nAttempt	parf-wifi-manager.cc	/^  uint32_t m_nAttempt;       \/\/!< Number of transmission attempts.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_nFail	parf-wifi-manager.cc	/^  uint32_t m_nFail;          \/\/!< Number of failed transmission attempts.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_nFailed	aparf-wifi-manager.cc	/^  uint32_t m_nFailed;                   \/\/!< Number of failed transmission attempts.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_nModes	minstrel-wifi-manager.h	/^  uint32_t m_nModes;             \/\/\/< number of modes supported$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_nPendingChangeState	wifi-radio-energy-model.h	/^  uint8_t m_nPendingChangeState;$/;"	m	class:ns3::WifiRadioEnergyModel
m_nRates	supported-rates.h	/^  uint8_t m_nRates;                      \/\/!< Number of supported rates$/;"	m	class:ns3::SupportedRates
m_nRetry	parf-wifi-manager.cc	/^  uint32_t m_nRetry;         \/\/!< Number of transmission retries.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_nSampleCol	minstrel-ht-wifi-manager.h	/^  uint32_t m_nSampleCol;      \/\/!< Number of sample columns.$/;"	m	class:ns3::MinstrelHtWifiManager
m_nSuccess	aparf-wifi-manager.cc	/^  uint32_t m_nSuccess;                  \/\/!< Number of successful transmission attempts.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_nSuccess	parf-wifi-manager.cc	/^  uint32_t m_nSuccess;       \/\/!< Number of successful transmission attempts.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_nSupported	aparf-wifi-manager.cc	/^  uint32_t m_nSupported;                \/\/!< Number of supported rates by the remote station.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_nSupported	parf-wifi-manager.cc	/^  uint32_t m_nSupported;     \/\/!< Number of supported rates by the remote station.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_nTxMpdus	mac-low.h	/^  uint32_t m_nTxMpdus;                \/\/!<Holds the number of transmitted MPDUs in the last A-MPDU transmission$/;"	m	class:ns3::MacLow
m_nTxPower	yans-wifi-phy.h	/^  uint32_t m_nTxPower;            \/\/!< Number of available transmission power levels$/;"	m	class:ns3::YansWifiPhy
m_navCounterResetCtsMissed	mac-low.h	/^  EventId m_navCounterResetCtsMissed;   \/\/!< Event to reset NAV when CTS is not received$/;"	m	class:ns3::MacLow
m_needBlockAckReq	originator-block-ack-agreement.h	/^  bool m_needBlockAckReq;$/;"	m	class:ns3::OriginatorBlockAckAgreement
m_ness	wifi-remote-station-manager.h	/^  uint32_t m_ness;            \/\/!< Number of streams in beamforming of the remote station$/;"	m	struct:ns3::WifiRemoteStationState
m_ness	wifi-tx-vector.h	/^  uint8_t  m_ness;               \/**< number of streams in beamforming *\/$/;"	m	class:ns3::WifiTxVector
m_nextFragmentationThreshold	wifi-remote-station-manager.h	/^  uint32_t m_nextFragmentationThreshold;  \/\/!< Threshold for fragmentation that will be used for the next transmission$/;"	m	class:ns3::WifiRemoteStationManager
m_nextModeUpdate	amrr-wifi-manager.cc	/^  Time m_nextModeUpdate;$/;"	m	struct:ns3::AmrrWifiRemoteStation	file:
m_nextModeUpdate	onoe-wifi-manager.cc	/^  Time m_nextModeUpdate;$/;"	m	struct:ns3::OnoeWifiRemoteStation	file:
m_nextSize	mac-low.h	/^  uint32_t m_nextSize;$/;"	m	class:ns3::MacLowTransmissionParameters
m_nextStatsUpdate	minstrel-wifi-manager.h	/^  Time m_nextStatsUpdate;  \/\/\/< 10 times every second$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_nexts	random-stream.h	/^  std::list<uint32_t> m_nexts;$/;"	m	class:ns3::TestRandomStream
m_niChanges	interference-helper.h	/^  NiChanges m_niChanges;$/;"	m	class:ns3::InterferenceHelper
m_noOfMpdus	ampdu-tag.h	/^  uint8_t m_noOfMpdus; \/\/!< number of MPDUs in the A-MPDU$/;"	m	class:ns3::AmpduTag
m_node	wifi-net-device.h	/^  Ptr<Node> m_node;$/;"	m	class:ns3::WifiNetDevice
m_noiseFigure	interference-helper.h	/^  double m_noiseFigure; \/**< noise figure (linear) *\/$/;"	m	class:ns3::InterferenceHelper
m_nonErpStations	ap-wifi-mac.h	/^  std::list<Mac48Address> m_nonErpStations;  \/\/!< List of all non-ERP stations currently associated to the AP$/;"	m	class:ns3::ApWifiMac
m_nonGfHtStasPresent	ht-operations.h	/^  uint8_t m_nonGfHtStasPresent;$/;"	m	class:ns3::HtOperations
m_nonHtStations	ap-wifi-mac.h	/^  std::list<Mac48Address> m_nonHtStations;   \/\/!< List of all non-HT stations currently associated to the AP$/;"	m	class:ns3::ApWifiMac
m_nonUnicastMode	wifi-remote-station-manager.h	/^  WifiMode m_nonUnicastMode;  \/\/!< Transmission mode for non-unicast DATA frames$/;"	m	class:ns3::WifiRemoteStationManager
m_noncompressedSteeringNBfAntennasSupported	ht-capabilities.h	/^  uint8_t m_noncompressedSteeringNBfAntennasSupported;$/;"	m	class:ns3::HtCapabilities
m_normalAckTimeoutEvent	mac-low.h	/^  EventId m_normalAckTimeoutEvent;      \/\/!< Normal ACK timeout event$/;"	m	class:ns3::MacLow
m_nss	ideal-wifi-manager.cc	/^  double m_nss;          \/\/!< SNR most recently used to select a rate$/;"	m	struct:ns3::IdealWifiRemoteStation	file:
m_nss	wifi-tx-vector.h	/^  uint8_t  m_nss;                \/**< number of streams *\/$/;"	m	class:ns3::WifiTxVector
m_numGroups	minstrel-ht-wifi-manager.h	/^  uint8_t m_numGroups;         \/\/!< Number of groups Minstrel should consider.$/;"	m	class:ns3::MinstrelHtWifiManager
m_numRates	minstrel-ht-wifi-manager.h	/^  uint8_t m_numRates;          \/\/!< Number of rates per group Minstrel should consider.$/;"	m	class:ns3::MinstrelHtWifiManager
m_numSamplesDeferred	minstrel-wifi-manager.h	/^  int m_numSamplesDeferred;$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_numSamplesSlow	minstrel-ht-wifi-manager.cc	/^  uint32_t m_numSamplesSlow;  \/\/!< Number of times a slow rate was sampled.$/;"	m	struct:ns3::MinstrelHtWifiRemoteStation	file:
m_numberOfReceivers	yans-wifi-phy.h	/^  uint32_t m_numberOfReceivers;     \/\/!< Number of receivers$/;"	m	class:ns3::YansWifiPhy
m_numberOfSoundingDimensions	vht-capabilities.h	/^  uint8_t m_numberOfSoundingDimensions;$/;"	m	class:ns3::VhtCapabilities
m_numberOfTransmitters	yans-wifi-phy.h	/^  uint32_t m_numberOfTransmitters;  \/\/!< Number of transmitters$/;"	m	class:ns3::YansWifiPhy
m_obssNonHtStasPresent	ht-operations.h	/^  uint8_t m_obssNonHtStasPresent;$/;"	m	class:ns3::HtOperations
m_operationalMcsSet	wifi-remote-station-manager.h	/^  WifiModeList m_operationalMcsSet;$/;"	m	struct:ns3::WifiRemoteStationState
m_operationalRateSet	wifi-remote-station-manager.h	/^  WifiModeList m_operationalRateSet;$/;"	m	struct:ns3::WifiRemoteStationState
m_originatorStatus	mac-rx-middle.h	/^  Originators m_originatorStatus;$/;"	m	class:ns3::MacRxMiddle
m_overrideDurationId	mac-low.h	/^  Time m_overrideDurationId;$/;"	m	class:ns3::MacLowTransmissionParameters
m_pCount	aparf-wifi-manager.cc	/^  uint32_t m_pCount;                    \/\/!< Number of power changes.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_pco	ht-capabilities.h	/^  uint8_t m_pco;$/;"	m	class:ns3::HtCapabilities
m_pcoActive	ht-operations.h	/^  uint8_t m_pcoActive;$/;"	m	class:ns3::HtOperations
m_pcoPhase	ht-operations.h	/^  uint8_t m_pcoPhase;$/;"	m	class:ns3::HtOperations
m_pcoTransitionTime	ht-capabilities.h	/^  uint8_t m_pcoTransitionTime;$/;"	m	class:ns3::HtCapabilities
m_peer	block-ack-agreement.h	/^  Mac48Address m_peer;       \/\/!< Peer address$/;"	m	class:ns3::BlockAckAgreement
m_phy	mac-low.h	/^  Ptr<WifiPhy> m_phy; \/\/!< Pointer to WifiPhy (actually send\/receives frames)$/;"	m	class:ns3::MacLow
m_phy	regular-wifi-mac.h	/^  Ptr<WifiPhy> m_phy;       \/\/!< Wifi PHY$/;"	m	class:ns3::RegularWifiMac
m_phy	wifi-net-device.h	/^  Ptr<WifiPhy> m_phy;$/;"	m	class:ns3::WifiNetDevice
m_phyList	yans-wifi-channel.h	/^  PhyList m_phyList;                   \/\/!< List of YansWifiPhys connected to this YansWifiChannel$/;"	m	class:ns3::YansWifiChannel
m_phyListener	dcf-manager.h	/^  PhyListener* m_phyListener;$/;"	m	class:ns3::DcfManager
m_phyMacLowListener	mac-low.h	/^  class PhyMacLowListener * m_phyMacLowListener; \/\/!< Listener needed to monitor when a channel switching occurs.$/;"	m	class:ns3::MacLow	typeref:class:ns3::MacLow::PhyMacLowListener
m_phyMonitorSniffRxTrace	wifi-phy.h	/^                 WifiPreamble, WifiTxVector, struct mpduInfo, struct signalNoiseDbm> m_phyMonitorSniffRxTrace;$/;"	m	class:ns3::WifiPhy
m_phyMonitorSniffTxTrace	wifi-phy.h	/^                 WifiPreamble, WifiTxVector, struct mpduInfo> m_phyMonitorSniffTxTrace;$/;"	m	class:ns3::WifiPhy
m_phyRxBeginTrace	wifi-phy.h	/^  TracedCallback<Ptr<const Packet> > m_phyRxBeginTrace;$/;"	m	class:ns3::WifiPhy
m_phyRxDropTrace	wifi-phy.h	/^  TracedCallback<Ptr<const Packet> > m_phyRxDropTrace;$/;"	m	class:ns3::WifiPhy
m_phyRxEndTrace	wifi-phy.h	/^  TracedCallback<Ptr<const Packet> > m_phyRxEndTrace;$/;"	m	class:ns3::WifiPhy
m_phyTxBeginTrace	wifi-phy.h	/^  TracedCallback<Ptr<const Packet> > m_phyTxBeginTrace;$/;"	m	class:ns3::WifiPhy
m_phyTxDropTrace	wifi-phy.h	/^  TracedCallback<Ptr<const Packet> > m_phyTxDropTrace;$/;"	m	class:ns3::WifiPhy
m_phyTxEndTrace	wifi-phy.h	/^  TracedCallback<Ptr<const Packet> > m_phyTxEndTrace;$/;"	m	class:ns3::WifiPhy
m_pifs	mac-low.h	/^  Time m_pifs;                              \/\/!< PCF Interframe Space (PIFS) duration$/;"	m	class:ns3::MacLow
m_pktLen	minstrel-wifi-manager.h	/^  uint32_t m_pktLen;        \/\/\/< packet length used for calculate mode TxTime$/;"	m	class:ns3::MinstrelWifiManager
m_plcpSuccess	yans-wifi-phy.h	/^  bool m_plcpSuccess;                   \/\/!< Flag if the PLCP of the packet or the first MPDU in an A-MPDU has been received$/;"	m	class:ns3::YansWifiPhy
m_pmtlfor12	rraa-wifi-manager.h	/^  double m_pmtlfor12;$/;"	m	class:ns3::RraaWifiManager
m_pmtlfor18	rraa-wifi-manager.h	/^  double m_pmtlfor18;$/;"	m	class:ns3::RraaWifiManager
m_pmtlfor24	rraa-wifi-manager.h	/^  double m_pmtlfor24;$/;"	m	class:ns3::RraaWifiManager
m_pmtlfor36	rraa-wifi-manager.h	/^  double m_pmtlfor36;$/;"	m	class:ns3::RraaWifiManager
m_pmtlfor48	rraa-wifi-manager.h	/^  double m_pmtlfor48;$/;"	m	class:ns3::RraaWifiManager
m_pmtlfor54	rraa-wifi-manager.h	/^  double m_pmtlfor54;$/;"	m	class:ns3::RraaWifiManager
m_pmtlfor9	rraa-wifi-manager.h	/^  double m_pmtlfor9;$/;"	m	class:ns3::RraaWifiManager
m_policy	mgt-headers.h	/^  uint8_t m_policy;        \/\/!< Block ACK policy$/;"	m	class:ns3::MgtAddBaRequestHeader
m_policy	mgt-headers.h	/^  uint8_t m_policy;        \/\/!< Block ACK policy$/;"	m	class:ns3::MgtAddBaResponseHeader
m_porifor12	rraa-wifi-manager.h	/^  double m_porifor12;$/;"	m	class:ns3::RraaWifiManager
m_porifor18	rraa-wifi-manager.h	/^  double m_porifor18;$/;"	m	class:ns3::RraaWifiManager
m_porifor24	rraa-wifi-manager.h	/^  double m_porifor24;$/;"	m	class:ns3::RraaWifiManager
m_porifor36	rraa-wifi-manager.h	/^  double m_porifor36;$/;"	m	class:ns3::RraaWifiManager
m_porifor48	rraa-wifi-manager.h	/^  double m_porifor48;$/;"	m	class:ns3::RraaWifiManager
m_porifor6	rraa-wifi-manager.h	/^  double m_porifor6;$/;"	m	class:ns3::RraaWifiManager
m_porifor9	rraa-wifi-manager.h	/^  double m_porifor9;$/;"	m	class:ns3::RraaWifiManager
m_power	aparf-wifi-manager.cc	/^  uint8_t m_power;                      \/\/!< Current power.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_powerChange	aparf-wifi-manager.h	/^  TracedCallback<uint8_t, Mac48Address> m_powerChange;$/;"	m	class:ns3::AparfWifiManager
m_powerChange	parf-wifi-manager.h	/^  TracedCallback<uint8_t, Mac48Address> m_powerChange;$/;"	m	class:ns3::ParfWifiManager
m_powerDec	aparf-wifi-manager.h	/^  uint32_t m_powerDec;   \/\/!< Step size for decrement the power.$/;"	m	class:ns3::AparfWifiManager
m_powerInc	aparf-wifi-manager.h	/^  uint32_t m_powerInc;   \/\/!< Step size for increment the power.$/;"	m	class:ns3::AparfWifiManager
m_powerMax	aparf-wifi-manager.h	/^  uint32_t m_powerMax;   \/\/!< The maximum number of power changes.$/;"	m	class:ns3::AparfWifiManager
m_preamble	interference-helper.h	/^    enum WifiPreamble m_preamble;$/;"	m	class:ns3::InterferenceHelper::Event	typeref:enum:ns3::InterferenceHelper::Event::WifiPreamble
m_previousStateChangeTime	wifi-phy-state-helper.h	/^  Time m_previousStateChangeTime;$/;"	m	class:ns3::WifiPhyStateHelper
m_primaryChannel	ht-operations.h	/^  uint8_t m_primaryChannel;$/;"	m	class:ns3::HtOperations
m_printStats	minstrel-ht-wifi-manager.h	/^  bool m_printStats;           \/\/!< If statistics table should be printed.$/;"	m	class:ns3::MinstrelHtWifiManager
m_printStats	minstrel-wifi-manager.h	/^  bool m_printStats;        \/\/\/< If statistics table should be printed.$/;"	m	class:ns3::MinstrelWifiManager
m_probeRequestEvent	sta-wifi-mac.h	/^  EventId m_probeRequestEvent;$/;"	m	class:ns3::StaWifiMac
m_probeRequestTimeout	sta-wifi-mac.h	/^  Time m_probeRequestTimeout;$/;"	m	class:ns3::StaWifiMac
m_probeThreshold	cara-wifi-manager.h	/^  uint32_t m_probeThreshold;$/;"	m	class:ns3::CaraWifiManager
m_promisc	mac-low.h	/^  bool m_promisc;  \/\/!< Flag if the device is operating in promiscuous mode$/;"	m	class:ns3::MacLow
m_promiscRx	wifi-net-device.h	/^  NetDevice::PromiscReceiveCallback m_promiscRx;$/;"	m	class:ns3::WifiNetDevice
m_protectionMode	wifi-remote-station-manager.h	/^  ProtectionMode m_protectionMode; \/\/!< Protection mode for ERP stations when non-ERP stations are detected$/;"	m	class:ns3::WifiRemoteStationManager
m_psmpSupport	ht-capabilities.h	/^  uint8_t m_psmpSupport;$/;"	m	class:ns3::HtCapabilities
m_qosAckPolicy	wifi-mac-header.h	/^  uint8_t m_qosAckPolicy;$/;"	m	class:ns3::WifiMacHeader
m_qosBlockedDestinations	edca-txop-n.h	/^  QosBlockedDestinations *m_qosBlockedDestinations;$/;"	m	class:ns3::EdcaTxopN
m_qosEosp	wifi-mac-header.h	/^  uint8_t m_qosEosp;$/;"	m	class:ns3::WifiMacHeader
m_qosOriginatorStatus	mac-rx-middle.h	/^  QosOriginators m_qosOriginatorStatus;$/;"	m	class:ns3::MacRxMiddle
m_qosSequences	mac-tx-middle.h	/^  std::map <Mac48Address,uint16_t*> m_qosSequences;$/;"	m	class:ns3::MacTxMiddle
m_qosStuff	wifi-mac-header.h	/^  uint16_t m_qosStuff;$/;"	m	class:ns3::WifiMacHeader
m_qosSupported	regular-wifi-mac.h	/^  bool m_qosSupported;$/;"	m	class:ns3::RegularWifiMac
m_qosTid	wifi-mac-header.h	/^  uint8_t m_qosTid;$/;"	m	class:ns3::WifiMacHeader
m_queue	block-ack-manager.h	/^  Ptr<WifiMacQueue> m_queue;$/;"	m	class:ns3::BlockAckManager
m_queue	dca-txop.h	/^  Ptr<WifiMacQueue> m_queue;$/;"	m	class:ns3::DcaTxop
m_queue	edca-txop-n.h	/^  Ptr<WifiMacQueue> m_queue;$/;"	m	class:ns3::EdcaTxopN
m_queue	wifi-mac-queue.h	/^  PacketQueue m_queue; \/\/!< Packet (struct Item) queue$/;"	m	class:ns3::WifiMacQueue
m_raiseThreshold	onoe-wifi-manager.h	/^  uint32_t m_raiseThreshold;$/;"	m	class:ns3::OnoeWifiManager
m_random	yans-wifi-phy.h	/^  Ptr<UniformRandomVariable> m_random;  \/\/!< Provides uniform random variables.$/;"	m	class:ns3::YansWifiPhy
m_rate	aarf-wifi-manager.cc	/^  uint32_t m_rate;$/;"	m	struct:ns3::AarfWifiRemoteStation	file:
m_rate	aarfcd-wifi-manager.cc	/^  uint32_t m_rate;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_rate	aparf-wifi-manager.cc	/^  uint32_t m_rate;                      \/\/!< Current rate.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_rate	arf-wifi-manager.cc	/^  uint32_t m_rate;$/;"	m	struct:ns3::ArfWifiRemoteStation	file:
m_rate	cara-wifi-manager.cc	/^  uint32_t m_rate;$/;"	m	struct:ns3::CaraWifiRemoteStation	file:
m_rate	rraa-wifi-manager.cc	/^  uint32_t m_rate;$/;"	m	struct:ns3::RraaWifiRemoteStation	file:
m_rateChange	aparf-wifi-manager.h	/^  TracedCallback<uint32_t, Mac48Address> m_rateChange;$/;"	m	class:ns3::AparfWifiManager
m_rateChange	minstrel-ht-wifi-manager.h	/^  TracedCallback<uint64_t, Mac48Address> m_rateChange;$/;"	m	class:ns3::MinstrelHtWifiManager
m_rateChange	parf-wifi-manager.h	/^  TracedCallback<uint32_t, Mac48Address> m_rateChange;$/;"	m	class:ns3::ParfWifiManager
m_rateCrit	aparf-wifi-manager.cc	/^  uint32_t m_rateCrit;                  \/\/!< Critical rate.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_rateDec	aparf-wifi-manager.h	/^  uint32_t m_rateDec;    \/\/!< Step size for decrement the rate.$/;"	m	class:ns3::AparfWifiManager
m_rateInc	aparf-wifi-manager.h	/^  uint32_t m_rateInc;    \/\/!< Step size for increment the rate.$/;"	m	class:ns3::AparfWifiManager
m_rates	mgt-headers.h	/^  SupportedRates m_rates;             \/\/!< List of supported rates$/;"	m	class:ns3::MgtAssocRequestHeader
m_rates	mgt-headers.h	/^  SupportedRates m_rates;             \/\/!< List of supported rates$/;"	m	class:ns3::MgtProbeResponseHeader
m_rates	mgt-headers.h	/^  SupportedRates m_rates;          \/\/!< List of supported rates$/;"	m	class:ns3::MgtProbeRequestHeader
m_rates	mgt-headers.h	/^  SupportedRates m_rates; \/\/!< List of supported rates$/;"	m	class:ns3::MgtAssocResponseHeader
m_rates	supported-rates.h	/^  uint8_t m_rates[MAX_SUPPORTED_RATES];  \/\/!< List of supported bitrate (divided by 500000)$/;"	m	class:ns3::SupportedRates
m_ratesTable	minstrel-ht-wifi-manager.h	/^  HtMinstrelRate m_ratesTable;    \/\/!< Information about rates of this group.$/;"	m	struct:ns3::GroupInfo
m_reasonCode	mgt-headers.h	/^  uint16_t m_reasonCode; \/* Not used for now. Always set to 1: "Unspecified reason" *\/$/;"	m	class:ns3::MgtDelBaHeader
m_receivedAtLeastOneMpdu	mac-low.h	/^  bool m_receivedAtLeastOneMpdu;      \/\/!< Flag whether an MPDU has already been successfully received while receiving an A-MPDU$/;"	m	class:ns3::MacLow
m_recovery	aarf-wifi-manager.cc	/^  bool m_recovery;$/;"	m	struct:ns3::AarfWifiRemoteStation	file:
m_recovery	aarfcd-wifi-manager.cc	/^  bool m_recovery;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_recovery	amrr-wifi-manager.cc	/^  bool m_recovery;$/;"	m	struct:ns3::AmrrWifiRemoteStation	file:
m_recovery	arf-wifi-manager.cc	/^  bool m_recovery;$/;"	m	struct:ns3::ArfWifiRemoteStation	file:
m_reservedASel	ht-capabilities.h	/^  uint8_t m_reservedASel;$/;"	m	class:ns3::HtCapabilities
m_reservedExtendedCapabilities	ht-capabilities.h	/^  uint8_t m_reservedExtendedCapabilities;$/;"	m	class:ns3::HtCapabilities
m_reservedExtendedCapabilities2	ht-capabilities.h	/^  uint8_t m_reservedExtendedCapabilities2;$/;"	m	class:ns3::HtCapabilities
m_reservedInformationSubset1	ht-operations.h	/^  uint8_t m_reservedInformationSubset1;$/;"	m	class:ns3::HtOperations
m_reservedInformationSubset2_1	ht-operations.h	/^  uint8_t m_reservedInformationSubset2_1;$/;"	m	class:ns3::HtOperations
m_reservedInformationSubset2_2	ht-operations.h	/^  uint8_t m_reservedInformationSubset2_2;$/;"	m	class:ns3::HtOperations
m_reservedInformationSubset3_1	ht-operations.h	/^  uint8_t m_reservedInformationSubset3_1;$/;"	m	class:ns3::HtOperations
m_reservedInformationSubset3_2	ht-operations.h	/^  uint8_t m_reservedInformationSubset3_2;$/;"	m	class:ns3::HtOperations
m_reservedMcsSet1	ht-capabilities.h	/^  uint8_t m_reservedMcsSet1;$/;"	m	class:ns3::HtCapabilities
m_reservedMcsSet1	ht-operations.h	/^  uint8_t m_reservedMcsSet1;$/;"	m	class:ns3::HtOperations
m_reservedMcsSet2	ht-capabilities.h	/^  uint8_t m_reservedMcsSet2;$/;"	m	class:ns3::HtCapabilities
m_reservedMcsSet2	ht-operations.h	/^  uint8_t m_reservedMcsSet2;$/;"	m	class:ns3::HtOperations
m_reservedMcsSet3	ht-capabilities.h	/^  uint32_t m_reservedMcsSet3;$/;"	m	class:ns3::HtCapabilities
m_reservedMcsSet3	ht-operations.h	/^  uint32_t m_reservedMcsSet3;$/;"	m	class:ns3::HtOperations
m_reservedTxBf	ht-capabilities.h	/^  uint8_t m_reservedTxBf;$/;"	m	class:ns3::HtCapabilities
m_retries	wifi-tx-vector.h	/^  uint8_t  m_retries;            \/**< The DATA_RETRIES\/RTS_RETRIES parameter$/;"	m	class:ns3::WifiTxVector
m_retry	aarf-wifi-manager.cc	/^  uint32_t m_retry;$/;"	m	struct:ns3::AarfWifiRemoteStation	file:
m_retry	aarfcd-wifi-manager.cc	/^  uint32_t m_retry;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_retry	amrr-wifi-manager.cc	/^  uint32_t m_retry;$/;"	m	struct:ns3::AmrrWifiRemoteStation	file:
m_retry	arf-wifi-manager.cc	/^  uint32_t m_retry;$/;"	m	struct:ns3::ArfWifiRemoteStation	file:
m_retry	minstrel-wifi-manager.h	/^  uint32_t m_retry;              \/\/\/< total retries short + long$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_retryPackets	block-ack-manager.h	/^  std::list<PacketQueueI> m_retryPackets;$/;"	m	class:ns3::BlockAckManager
m_reverzeDirectionResponder	ht-capabilities.h	/^  uint8_t m_reverzeDirectionResponder;$/;"	m	class:ns3::HtCapabilities
m_rifs	mac-low.h	/^  Time m_rifs;                              \/\/!< Reduced Interframe Space (RIFS) duration$/;"	m	class:ns3::MacLow
m_rifsMode	ht-operations.h	/^  uint8_t m_rifsMode;$/;"	m	class:ns3::HtOperations
m_rng	dca-txop.h	/^  RandomStream *m_rng;$/;"	m	class:ns3::DcaTxop
m_rng	edca-txop-n.h	/^  RandomStream *m_rng;$/;"	m	class:ns3::EdcaTxopN
m_rtsCounter	aarfcd-wifi-manager.cc	/^  uint32_t m_rtsCounter;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_rtsCounter	rraa-wifi-manager.cc	/^  uint32_t m_rtsCounter;$/;"	m	struct:ns3::RraaWifiRemoteStation	file:
m_rtsCtsThreshold	wifi-remote-station-manager.h	/^  uint32_t m_rtsCtsThreshold;  \/\/!< Threshold for RTS\/CTS$/;"	m	class:ns3::WifiRemoteStationManager
m_rtsOn	aarfcd-wifi-manager.cc	/^  bool m_rtsOn;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_rtsOn	rraa-wifi-manager.cc	/^  bool m_rtsOn;$/;"	m	struct:ns3::RraaWifiRemoteStation	file:
m_rtsTxVector	wifi-remote-station-manager.cc	/^  WifiTxVector m_rtsTxVector;$/;"	m	class:ns3::HighLatencyRtsTxVectorTag	file:
m_rtsWnd	aarfcd-wifi-manager.cc	/^  uint32_t m_rtsWnd;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_rtsWnd	rraa-wifi-manager.cc	/^  uint32_t m_rtsWnd;$/;"	m	struct:ns3::RraaWifiRemoteStation	file:
m_rx	wifi-remote-station-manager.h	/^  uint8_t m_rx;               \/\/!< Number of supported RX streams by the remote station$/;"	m	struct:ns3::WifiRemoteStationState
m_rxASelCapable	ht-capabilities.h	/^  uint8_t m_rxASelCapable;$/;"	m	class:ns3::HtCapabilities
m_rxAntennaPatternConsistency	vht-capabilities.h	/^  uint8_t m_rxAntennaPatternConsistency;$/;"	m	class:ns3::VhtCapabilities
m_rxCallback	mac-low.h	/^  MacLowRxCallback m_rxCallback; \/\/!< Callback to pass packet up$/;"	m	class:ns3::MacLow
m_rxCurrentA	wifi-radio-energy-model.h	/^  double m_rxCurrentA;$/;"	m	class:ns3::WifiRadioEnergyModel
m_rxErrorCallback	wifi-phy-state-helper.h	/^  WifiPhy::RxErrorCallback m_rxErrorCallback;$/;"	m	class:ns3::WifiPhyStateHelper
m_rxErrorTrace	wifi-phy-state-helper.h	/^  TracedCallback<Ptr<const Packet>, double> m_rxErrorTrace;$/;"	m	class:ns3::WifiPhyStateHelper
m_rxGainDb	yans-wifi-phy.h	/^  double   m_rxGainDb;            \/\/!< Reception gain (dB)$/;"	m	class:ns3::YansWifiPhy
m_rxHighestSupportedDataRate	ht-capabilities.h	/^  uint16_t m_rxHighestSupportedDataRate;$/;"	m	class:ns3::HtCapabilities
m_rxHighestSupportedDataRate	ht-operations.h	/^  uint16_t m_rxHighestSupportedDataRate;$/;"	m	class:ns3::HtOperations
m_rxHighestSupportedLongGuardIntervalDataRate	vht-capabilities.h	/^  uint16_t m_rxHighestSupportedLongGuardIntervalDataRate;$/;"	m	class:ns3::VhtCapabilities
m_rxLdpc	vht-capabilities.h	/^  uint8_t m_rxLdpc;$/;"	m	class:ns3::VhtCapabilities
m_rxLogger	wifi-net-device.h	/^  TracedCallback<Ptr<const Packet>, Mac48Address> m_rxLogger;$/;"	m	class:ns3::WifiNetDevice
m_rxMcsBitmask	ht-capabilities.h	/^  uint8_t m_rxMcsBitmask[MAX_SUPPORTED_MCS];$/;"	m	class:ns3::HtCapabilities
m_rxMcsBitmask	ht-operations.h	/^  uint8_t m_rxMcsBitmask[MAX_SUPPORTED_MCS];$/;"	m	class:ns3::HtOperations
m_rxMcsMap	vht-capabilities.h	/^  std::vector<uint8_t> m_rxMcsMap;$/;"	m	class:ns3::VhtCapabilities
m_rxMiddle	regular-wifi-mac.h	/^  MacRxMiddle *m_rxMiddle;  \/\/!< RX middle (de-fragmentation etc.)$/;"	m	class:ns3::RegularWifiMac
m_rxMpduReferenceNumber	yans-wifi-phy.h	/^  uint32_t m_rxMpduReferenceNumber;     \/\/!< A-MPDU reference number to identify all received subframes belonging to the same received A-MPDU$/;"	m	class:ns3::YansWifiPhy
m_rxNdpCapable	ht-capabilities.h	/^  uint8_t m_rxNdpCapable;$/;"	m	class:ns3::HtCapabilities
m_rxOkCallback	wifi-phy-state-helper.h	/^  WifiPhy::RxOkCallback m_rxOkCallback;$/;"	m	class:ns3::WifiPhyStateHelper
m_rxOkTrace	wifi-phy-state-helper.h	/^  TracedCallback<Ptr<const Packet>, double, WifiMode, enum WifiPreamble> m_rxOkTrace;$/;"	m	class:ns3::WifiPhyStateHelper
m_rxPowerW	interference-helper.h	/^    double m_rxPowerW;$/;"	m	class:ns3::InterferenceHelper::Event
m_rxStaggeredSoundingCapable	ht-capabilities.h	/^  uint8_t m_rxStaggeredSoundingCapable;$/;"	m	class:ns3::HtCapabilities
m_rxStbc	ht-capabilities.h	/^  uint8_t m_rxStbc;$/;"	m	class:ns3::HtCapabilities
m_rxStbc	vht-capabilities.h	/^  uint8_t m_rxStbc;$/;"	m	class:ns3::VhtCapabilities
m_rxing	dcf-manager.h	/^  bool m_rxing;$/;"	m	class:ns3::DcfManager
m_rxing	interference-helper.h	/^  bool m_rxing;$/;"	m	class:ns3::InterferenceHelper
m_rxing	wifi-phy-state-helper.h	/^  bool m_rxing;$/;"	m	class:ns3::WifiPhyStateHelper
m_sa	amsdu-subframe-header.h	/^  Mac48Address m_sa;$/;"	m	class:ns3::AmsduSubframeHeader
m_sampleCol	minstrel-wifi-manager.h	/^  uint32_t m_sampleCol;     \/\/\/< number of sample columns$/;"	m	class:ns3::MinstrelWifiManager
m_sampleCount	minstrel-ht-wifi-manager.cc	/^  uint32_t m_sampleCount;     \/\/!< Max number of samples per update interval.$/;"	m	struct:ns3::MinstrelHtWifiRemoteStation	file:
m_sampleDeferred	minstrel-wifi-manager.h	/^  bool  m_sampleDeferred;        \/\/\/< a flag to indicate sample rate is on the second stage$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_sampleGroup	minstrel-ht-wifi-manager.cc	/^  uint32_t m_sampleGroup;     \/\/!< The group that the sample rate belongs to.$/;"	m	struct:ns3::MinstrelHtWifiRemoteStation	file:
m_samplePacketsCount	minstrel-wifi-manager.h	/^  int m_samplePacketsCount;             \/\/\/< how many packets we have sample so far$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_sampleRate	minstrel-wifi-manager.h	/^  uint32_t m_sampleRate;         \/\/\/< current sample rate$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_sampleTable	minstrel-wifi-manager.h	/^  SampleRate m_sampleTable;      \/\/\/< sample table$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_sampleTries	minstrel-ht-wifi-manager.cc	/^  uint32_t m_sampleTries;     \/\/!< Number of sample tries after waiting sampleWait.$/;"	m	struct:ns3::MinstrelHtWifiRemoteStation	file:
m_sampleWait	minstrel-ht-wifi-manager.cc	/^  uint32_t m_sampleWait;      \/\/!< How many transmission attempts to wait until a new sample.$/;"	m	struct:ns3::MinstrelHtWifiRemoteStation	file:
m_secondaryChannelOffset	ht-operations.h	/^  uint8_t m_secondaryChannelOffset;$/;"	m	class:ns3::HtOperations
m_self	mac-low.h	/^  Mac48Address m_self;                      \/\/!< Address of this MacLow (Mac48Address)$/;"	m	class:ns3::MacLow
m_sendAckEvent	mac-low.h	/^  EventId m_sendAckEvent;               \/\/!< Event to send ACK$/;"	m	class:ns3::MacLow
m_sendCtsEvent	mac-low.h	/^  EventId m_sendCtsEvent;               \/\/!< Event to send CTS$/;"	m	class:ns3::MacLow
m_sendDataEvent	mac-low.h	/^  EventId m_sendDataEvent;              \/\/!< Event to send DATA$/;"	m	class:ns3::MacLow
m_sendRts	mac-low.h	/^  bool m_sendRts;$/;"	m	class:ns3::MacLowTransmissionParameters
m_sentMpdus	mac-low.h	/^  uint8_t m_sentMpdus;                \/\/!< Number of transmitted MPDUs in an A-MPDU that have not been acknowledged yet$/;"	m	class:ns3::MacLow
m_sentMpdus	originator-block-ack-agreement.h	/^  uint16_t m_sentMpdus;$/;"	m	class:ns3::OriginatorBlockAckAgreement
m_seqFrag	wifi-mac-header.h	/^  uint8_t m_seqFrag;$/;"	m	class:ns3::WifiMacHeader
m_seqSeq	wifi-mac-header.h	/^  uint16_t m_seqSeq;$/;"	m	class:ns3::WifiMacHeader
m_sequence	mac-tx-middle.h	/^  uint16_t m_sequence;$/;"	m	class:ns3::MacTxMiddle
m_shortGuardInterval	wifi-remote-station-manager.h	/^  bool m_shortGuardInterval;  \/\/!< Flag if short guard interval is supported by the remote station$/;"	m	struct:ns3::WifiRemoteStationState
m_shortGuardInterval	wifi-tx-vector.h	/^  bool     m_shortGuardInterval; \/**< true if short GI is going to be used *\/$/;"	m	class:ns3::WifiTxVector
m_shortGuardInterval20	ht-capabilities.h	/^  uint8_t m_shortGuardInterval20;$/;"	m	class:ns3::HtCapabilities
m_shortGuardInterval40	ht-capabilities.h	/^  uint8_t m_shortGuardInterval40;$/;"	m	class:ns3::HtCapabilities
m_shortGuardIntervalFor160Mhz	vht-capabilities.h	/^  uint8_t m_shortGuardIntervalFor160Mhz;$/;"	m	class:ns3::VhtCapabilities
m_shortGuardIntervalFor80Mhz	vht-capabilities.h	/^  uint8_t m_shortGuardIntervalFor80Mhz;$/;"	m	class:ns3::VhtCapabilities
m_shortPreamble	wifi-remote-station-manager.h	/^  bool m_shortPreamble;       \/\/!< Flag if short PLCP preamble is supported by the remote station$/;"	m	struct:ns3::WifiRemoteStationState
m_shortPreamble	yans-wifi-phy.h	/^  bool     m_shortPreamble;         \/\/!< Flag if short PLCP preamble is supported$/;"	m	class:ns3::YansWifiPhy
m_shortPreambleEnabled	wifi-remote-station-manager.h	/^  bool m_shortPreambleEnabled; \/\/!< flag if short PLCP preamble is enabled$/;"	m	class:ns3::WifiRemoteStationManager
m_shortRetry	minstrel-wifi-manager.h	/^  uint32_t m_shortRetry;         \/\/\/< short retries such as control packts$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_shortRetry	onoe-wifi-manager.cc	/^  uint32_t m_shortRetry;$/;"	m	struct:ns3::OnoeWifiRemoteStation	file:
m_shortSlotTime	wifi-remote-station-manager.h	/^  bool m_shortSlotTime;       \/\/!< Flag if short ERP slot time is supported by the remote station$/;"	m	struct:ns3::WifiRemoteStationState
m_shortSlotTimeEnabled	wifi-remote-station-manager.h	/^  bool m_shortSlotTimeEnabled; \/\/!< flag if short slot time is enabled$/;"	m	class:ns3::WifiRemoteStationManager
m_shortSlotTimeSupported	regular-wifi-mac.h	/^  bool m_shortSlotTimeSupported;$/;"	m	class:ns3::RegularWifiMac
m_sifs	dcf-manager.h	/^  Time m_sifs;$/;"	m	class:ns3::DcfManager
m_sifs	mac-low.h	/^  Time m_sifs;                              \/\/!< Short Interframe Space (SIFS) duration$/;"	m	class:ns3::MacLow
m_sig	ampdu-subframe-header.h	/^  uint8_t m_sig;     \/\/!< SIG field$/;"	m	class:ns3::AmpduSubframeHeader
m_size	interference-helper.h	/^    uint32_t m_size;$/;"	m	class:ns3::InterferenceHelper::Event
m_size	wifi-mac-queue.h	/^  uint32_t m_size;     \/\/!< Current queue size$/;"	m	class:ns3::WifiMacQueue
m_sleepCurrentA	wifi-radio-energy-model.h	/^  double m_sleepCurrentA;$/;"	m	class:ns3::WifiRadioEnergyModel
m_sleeping	dcf-manager.h	/^  bool m_sleeping;$/;"	m	class:ns3::DcfManager
m_sleeping	wifi-phy-state-helper.h	/^  bool m_sleeping;$/;"	m	class:ns3::WifiPhyStateHelper
m_slotTime	mac-low.h	/^  Time m_slotTime;                          \/\/!< Slot duration$/;"	m	class:ns3::MacLow
m_slotTimeUs	dcf-manager.h	/^  uint32_t m_slotTimeUs;$/;"	m	class:ns3::DcfManager
m_slrc	wifi-remote-station-manager.h	/^  uint32_t m_slrc;                  \/\/!< STA long retry count$/;"	m	struct:ns3::WifiRemoteStation
m_smPowerSave	ht-capabilities.h	/^  uint8_t m_smPowerSave;$/;"	m	class:ns3::HtCapabilities
m_snr	snr-tag.h	/^  double m_snr;  \/\/!< SNR value$/;"	m	class:ns3::SnrTag
m_source	wifi-radio-energy-model.h	/^  Ptr<EnergySource> m_source;$/;"	m	class:ns3::WifiRadioEnergyModel
m_ssid	mgt-headers.h	/^  Ssid m_ssid;                        \/\/!< Service Set ID (SSID)$/;"	m	class:ns3::MgtAssocRequestHeader
m_ssid	mgt-headers.h	/^  Ssid m_ssid;                        \/\/!< Service set ID (SSID)$/;"	m	class:ns3::MgtProbeResponseHeader
m_ssid	mgt-headers.h	/^  Ssid m_ssid;                     \/\/!< Service Set ID (SSID)$/;"	m	class:ns3::MgtProbeRequestHeader
m_ssid	regular-wifi-mac.h	/^  Ssid m_ssid; \/\/!< Service Set ID (SSID)$/;"	m	class:ns3::RegularWifiMac
m_ssid	ssid.h	/^  uint8_t m_ssid[33]; \/\/!< Raw SSID value$/;"	m	class:ns3::Ssid
m_ssrc	wifi-remote-station-manager.h	/^  uint32_t m_ssrc;                  \/\/!< STA short retry count$/;"	m	struct:ns3::WifiRemoteStation
m_staChannelWidth	ht-operations.h	/^  uint8_t m_staChannelWidth;$/;"	m	class:ns3::HtOperations
m_staList	ap-wifi-mac.h	/^  std::list<Mac48Address> m_staList;         \/\/!< List of all stations currently associated to the AP$/;"	m	class:ns3::ApWifiMac
m_startCcaBusy	wifi-phy-state-helper.h	/^  Time m_startCcaBusy;$/;"	m	class:ns3::WifiPhyStateHelper
m_startRx	wifi-phy-state-helper.h	/^  Time m_startRx;$/;"	m	class:ns3::WifiPhyStateHelper
m_startSleep	wifi-phy-state-helper.h	/^  Time m_startSleep;$/;"	m	class:ns3::WifiPhyStateHelper
m_startSwitching	wifi-phy-state-helper.h	/^  Time m_startSwitching;$/;"	m	class:ns3::WifiPhyStateHelper
m_startTime	interference-helper.h	/^    Time m_startTime;$/;"	m	class:ns3::InterferenceHelper::Event
m_startTx	wifi-phy-state-helper.h	/^  Time m_startTx;$/;"	m	class:ns3::WifiPhyStateHelper
m_startingSeq	block-ack-agreement.h	/^  uint16_t m_startingSeq;    \/\/!< Starting squence control$/;"	m	class:ns3::BlockAckAgreement
m_startingSeq	ctrl-headers.h	/^  uint16_t m_startingSeq;$/;"	m	class:ns3::CtrlBAckRequestHeader
m_startingSeq	ctrl-headers.h	/^  uint16_t m_startingSeq;$/;"	m	class:ns3::CtrlBAckResponseHeader
m_startingSeq	mgt-headers.h	/^  uint16_t m_startingSeq;  \/\/!< Starting sequence number$/;"	m	class:ns3::MgtAddBaRequestHeader
m_state	originator-block-ack-agreement.h	/^  enum State m_state;$/;"	m	class:ns3::OriginatorBlockAckAgreement	typeref:enum:ns3::OriginatorBlockAckAgreement::State
m_state	sta-wifi-mac.h	/^  enum MacState m_state;$/;"	m	class:ns3::StaWifiMac	typeref:enum:ns3::StaWifiMac::MacState
m_state	wifi-remote-station-manager.h	/^  WifiRemoteStationState *m_state;  \/\/!< Remote station state$/;"	m	struct:ns3::WifiRemoteStation
m_state	wifi-remote-station-manager.h	/^  } m_state;$/;"	m	struct:ns3::WifiRemoteStationState	typeref:enum:ns3::WifiRemoteStationState::__anon9
m_state	yans-wifi-phy.h	/^  Ptr<WifiPhyStateHelper> m_state;      \/\/!< Pointer to WifiPhyStateHelper$/;"	m	class:ns3::YansWifiPhy
m_stateLogger	wifi-phy-state-helper.h	/^  TracedCallback<Time, Time, enum WifiPhy::State> m_stateLogger;$/;"	m	class:ns3::WifiPhyStateHelper
m_states	dcf-manager.h	/^  States m_states;$/;"	m	class:ns3::DcfManager
m_states	wifi-remote-station-manager.h	/^  StationStates m_states;  \/\/!< States of known stations$/;"	m	class:ns3::WifiRemoteStationManager
m_stationManager	block-ack-manager.h	/^  Ptr<WifiRemoteStationManager> m_stationManager;$/;"	m	class:ns3::BlockAckManager
m_stationManager	dca-txop.h	/^  Ptr<WifiRemoteStationManager> m_stationManager;$/;"	m	class:ns3::DcaTxop
m_stationManager	edca-txop-n.h	/^  Ptr<WifiRemoteStationManager> m_stationManager;$/;"	m	class:ns3::EdcaTxopN
m_stationManager	mac-low.h	/^  Ptr<WifiRemoteStationManager> m_stationManager; \/\/!< Pointer to WifiRemoteStationManager (rate control)$/;"	m	class:ns3::MacLow
m_stationManager	regular-wifi-mac.h	/^  Ptr<WifiRemoteStationManager> m_stationManager; \/\/!< Remote station manager (rate control, RTS\/CTS\/fragmentation thresholds etc.)$/;"	m	class:ns3::RegularWifiMac
m_stationManager	wifi-net-device.h	/^  Ptr<WifiRemoteStationManager> m_stationManager;$/;"	m	class:ns3::WifiNetDevice
m_stations	wifi-remote-station-manager.h	/^  Stations m_stations;     \/\/!< Information for each known stations$/;"	m	class:ns3::WifiRemoteStationManager
m_statsFile	minstrel-ht-wifi-manager.cc	/^  std::ofstream m_statsFile;   \/\/!< File where statistics table is written.$/;"	m	struct:ns3::MinstrelHtWifiRemoteStation	file:
m_statsFile	minstrel-wifi-manager.h	/^  std::ofstream m_statsFile;$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_stbc	wifi-remote-station-manager.h	/^  bool m_stbc;                \/\/!< Flag if STBC is supported by the remote station$/;"	m	struct:ns3::WifiRemoteStationState
m_stbc	wifi-tx-vector.h	/^  bool     m_stbc;               \/**< STBC used or not *\/$/;"	m	class:ns3::WifiTxVector
m_stbc	yans-wifi-phy.h	/^  bool     m_stbc;                  \/\/!< Flag if STBC is used$/;"	m	class:ns3::YansWifiPhy
m_stbcBeacon	ht-operations.h	/^  uint8_t m_stbcBeacon;$/;"	m	class:ns3::HtOperations
m_stream	random-stream.h	/^  Ptr<UniformRandomVariable> m_stream;$/;"	m	class:ns3::RealRandomStream
m_suBeamformeeCapable	vht-capabilities.h	/^  uint8_t m_suBeamformeeCapable;$/;"	m	class:ns3::VhtCapabilities
m_suBeamformerCapable	vht-capabilities.h	/^  uint8_t m_suBeamformerCapable;$/;"	m	class:ns3::VhtCapabilities
m_succesMax1	aparf-wifi-manager.h	/^  uint32_t m_succesMax1; \/\/!< The minimum number of successful transmissions in \\"High\\" state to try a new power or rate.$/;"	m	class:ns3::AparfWifiManager
m_succesMax2	aparf-wifi-manager.h	/^  uint32_t m_succesMax2; \/\/!< The minimum number of successful transmissions in \\"Low\\" state to try a new power or rate.$/;"	m	class:ns3::AparfWifiManager
m_success	aarf-wifi-manager.cc	/^  uint32_t m_success;$/;"	m	struct:ns3::AarfWifiRemoteStation	file:
m_success	aarfcd-wifi-manager.cc	/^  uint32_t m_success;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_success	amrr-wifi-manager.cc	/^  uint32_t m_success;$/;"	m	struct:ns3::AmrrWifiRemoteStation	file:
m_success	arf-wifi-manager.cc	/^  uint32_t m_success;$/;"	m	struct:ns3::ArfWifiRemoteStation	file:
m_success	cara-wifi-manager.cc	/^  uint32_t m_success;$/;"	m	struct:ns3::CaraWifiRemoteStation	file:
m_successK	aarf-wifi-manager.h	/^  double m_successK;$/;"	m	class:ns3::AarfWifiManager
m_successK	aarfcd-wifi-manager.h	/^  double m_successK;$/;"	m	class:ns3::AarfcdWifiManager
m_successRatio	amrr-wifi-manager.h	/^  double m_successRatio;$/;"	m	class:ns3::AmrrWifiManager
m_successThreshold	aarf-wifi-manager.cc	/^  uint32_t m_successThreshold;$/;"	m	struct:ns3::AarfWifiRemoteStation	file:
m_successThreshold	aarfcd-wifi-manager.cc	/^  uint32_t m_successThreshold;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_successThreshold	amrr-wifi-manager.cc	/^  uint32_t m_successThreshold;$/;"	m	struct:ns3::AmrrWifiRemoteStation	file:
m_successThreshold	aparf-wifi-manager.cc	/^  uint32_t m_successThreshold;          \/\/!< The minimum number of successful transmissions to try a new power or rate.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_successThreshold	arf-wifi-manager.cc	/^  uint32_t m_successThreshold;$/;"	m	struct:ns3::ArfWifiRemoteStation	file:
m_successThreshold	arf-wifi-manager.h	/^  uint32_t m_successThreshold;$/;"	m	class:ns3::ArfWifiManager
m_successThreshold	cara-wifi-manager.h	/^  uint32_t m_successThreshold;$/;"	m	class:ns3::CaraWifiManager
m_successThreshold	parf-wifi-manager.h	/^  uint32_t m_successThreshold; \/\/!< The minimum number of successful transmissions to try a new power or rate.$/;"	m	class:ns3::ParfWifiManager
m_superFastAckTimeoutEvent	mac-low.h	/^  EventId m_superFastAckTimeoutEvent;   \/\/!< Super fast ACK timeout event$/;"	m	class:ns3::MacLow
m_supported	minstrel-ht-wifi-manager.h	/^  bool m_supported;               \/\/!< If the rates of this group are supported by the station.$/;"	m	struct:ns3::GroupInfo
m_supportedChannelWidth	ht-capabilities.h	/^  uint8_t m_supportedChannelWidth;$/;"	m	class:ns3::HtCapabilities
m_supportedChannelWidthSet	vht-capabilities.h	/^  uint16_t m_supportedChannelWidthSet;$/;"	m	class:ns3::VhtCapabilities
m_supportedChannelWidthSet	yans-wifi-phy.h	/^  std::vector<uint32_t> m_supportedChannelWidthSet; \/\/!< Supported channel width$/;"	m	class:ns3::YansWifiPhy
m_supportedRates	supported-rates.h	/^  SupportedRates *m_supportedRates;$/;"	m	class:ns3::ExtendedSupportedRatesIE
m_switchToIdleEvent	wifi-radio-energy-model.h	/^  EventId m_switchToIdleEvent;$/;"	m	class:ns3::WifiRadioEnergyModelPhyListener
m_switchingCurrentA	wifi-radio-energy-model.h	/^  double m_switchingCurrentA;$/;"	m	class:ns3::WifiRadioEnergyModel
m_thresholds	ideal-wifi-manager.h	/^  Thresholds m_thresholds;  \/\/!< List of WifiTxVector and the minimum SNR pair$/;"	m	class:ns3::IdealWifiManager
m_tid	block-ack-agreement.h	/^  uint8_t m_tid;             \/\/!< Traffic ID$/;"	m	class:ns3::BlockAckAgreement
m_tid	mgt-headers.h	/^  uint16_t m_tid; \/\/!< Traffic ID$/;"	m	class:ns3::MgtDelBaHeader
m_tid	mgt-headers.h	/^  uint8_t m_tid;           \/\/!< Traffic ID$/;"	m	class:ns3::MgtAddBaRequestHeader
m_tid	mgt-headers.h	/^  uint8_t m_tid;           \/\/!< Traffic ID$/;"	m	class:ns3::MgtAddBaResponseHeader
m_tid	qos-tag.h	/^  uint8_t m_tid;  \/\/!< Traffic ID$/;"	m	class:ns3::QosTag
m_tid	wifi-remote-station-manager.h	/^  uint8_t m_tid;                    \/\/!< traffic ID$/;"	m	struct:ns3::WifiRemoteStation
m_tidInfo	ctrl-headers.h	/^  uint16_t m_tidInfo;$/;"	m	class:ns3::CtrlBAckRequestHeader
m_tidInfo	ctrl-headers.h	/^  uint16_t m_tidInfo;$/;"	m	class:ns3::CtrlBAckResponseHeader
m_time	interference-helper.h	/^    Time m_time;$/;"	m	class:ns3::InterferenceHelper::NiChange
m_timeout	block-ack-agreement.h	/^  uint16_t m_timeout;        \/\/!< Timeout$/;"	m	class:ns3::BlockAckAgreement
m_timeout	rraa-wifi-manager.h	/^  Time m_timeout;$/;"	m	class:ns3::RraaWifiManager
m_timeoutValue	mgt-headers.h	/^  uint16_t m_timeoutValue; \/\/!< Timeout$/;"	m	class:ns3::MgtAddBaRequestHeader
m_timeoutValue	mgt-headers.h	/^  uint16_t m_timeoutValue; \/\/!< Timeout$/;"	m	class:ns3::MgtAddBaResponseHeader
m_timer	aarf-wifi-manager.cc	/^  uint32_t m_timer;$/;"	m	struct:ns3::AarfWifiRemoteStation	file:
m_timer	aarfcd-wifi-manager.cc	/^  uint32_t m_timer;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_timer	arf-wifi-manager.cc	/^  uint32_t m_timer;$/;"	m	struct:ns3::ArfWifiRemoteStation	file:
m_timer	cara-wifi-manager.cc	/^  uint32_t m_timer;$/;"	m	struct:ns3::CaraWifiRemoteStation	file:
m_timerK	aarf-wifi-manager.h	/^  double m_timerK;$/;"	m	class:ns3::AarfWifiManager
m_timerK	aarfcd-wifi-manager.h	/^  double m_timerK;$/;"	m	class:ns3::AarfcdWifiManager
m_timerThreshold	arf-wifi-manager.h	/^  uint32_t m_timerThreshold;$/;"	m	class:ns3::ArfWifiManager
m_timerTimeout	aarf-wifi-manager.cc	/^  uint32_t m_timerTimeout;$/;"	m	struct:ns3::AarfWifiRemoteStation	file:
m_timerTimeout	aarfcd-wifi-manager.cc	/^  uint32_t m_timerTimeout;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_timerTimeout	arf-wifi-manager.cc	/^  uint32_t m_timerTimeout;$/;"	m	struct:ns3::ArfWifiRemoteStation	file:
m_timerTimeout	cara-wifi-manager.h	/^  uint32_t m_timerTimeout;$/;"	m	class:ns3::CaraWifiManager
m_timestamp	mgt-headers.h	/^  uint64_t m_timestamp;               \/\/!< Timestamp$/;"	m	class:ns3::MgtProbeResponseHeader
m_totalAmpduNumSymbols	wifi-phy.h	/^  double m_totalAmpduNumSymbols;   \/\/!< Number of symbols previously transmitted for the MPDUs in an A-MPDU, used for the computation of the number of symbols needed for the last MPDU in the A-MPDU$/;"	m	class:ns3::WifiPhy
m_totalAmpduSize	wifi-phy.h	/^  uint32_t m_totalAmpduSize;       \/\/!< Total size of the previously transmitted MPDUs in an A-MPDU, used for the computation of the number of symbols needed for the last MPDU in the A-MPDU$/;"	m	class:ns3::WifiPhy
m_totalEnergyConsumption	wifi-radio-energy-model.h	/^  TracedValue<double> m_totalEnergyConsumption;$/;"	m	class:ns3::WifiRadioEnergyModel
m_totalPacketsCount	minstrel-wifi-manager.h	/^  int m_totalPacketsCount;             \/\/\/< total number of packets as of now$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_transmissionListener	dca-txop.h	/^  TransmissionListener *m_transmissionListener;$/;"	m	class:ns3::DcaTxop
m_transmissionListener	edca-txop-n.h	/^  TransmissionListener *m_transmissionListener;$/;"	m	class:ns3::EdcaTxopN
m_turnOffRtsAfterRateDecrease	aarfcd-wifi-manager.h	/^  bool m_turnOffRtsAfterRateDecrease;$/;"	m	class:ns3::AarfcdWifiManager
m_turnOnRtsAfterRateIncrease	aarfcd-wifi-manager.h	/^  bool m_turnOnRtsAfterRateIncrease;$/;"	m	class:ns3::AarfcdWifiManager
m_txAntennaPatternConsistency	vht-capabilities.h	/^  uint8_t m_txAntennaPatternConsistency;$/;"	m	class:ns3::VhtCapabilities
m_txCurrentA	wifi-radio-energy-model.h	/^  double m_txCurrentA;$/;"	m	class:ns3::WifiRadioEnergyModel
m_txCurrentModel	wifi-radio-energy-model.h	/^  Ptr<WifiTxCurrentModel> m_txCurrentModel;$/;"	m	class:ns3::WifiRadioEnergyModel
m_txErrCallback	regular-wifi-mac.h	/^  TracedCallback<const WifiMacHeader &> m_txErrCallback;$/;"	m	class:ns3::RegularWifiMac
m_txFailedCallback	block-ack-manager.h	/^  TxFailed m_txFailedCallback;$/;"	m	class:ns3::BlockAckManager
m_txFailedCallback	dca-txop.h	/^  TxFailed m_txFailedCallback;$/;"	m	class:ns3::DcaTxop
m_txFailedCallback	edca-txop-n.h	/^  TxFailed m_txFailedCallback;$/;"	m	class:ns3::EdcaTxopN
m_txGainDb	yans-wifi-phy.h	/^  double   m_txGainDb;            \/\/!< Transmission gain (dB)$/;"	m	class:ns3::YansWifiPhy
m_txHighestSupportedLongGuardIntervalDataRate	vht-capabilities.h	/^  uint16_t m_txHighestSupportedLongGuardIntervalDataRate;$/;"	m	class:ns3::VhtCapabilities
m_txLogger	wifi-net-device.h	/^  TracedCallback<Ptr<const Packet>, Mac48Address> m_txLogger;$/;"	m	class:ns3::WifiNetDevice
m_txMaxNSpatialStreams	ht-capabilities.h	/^  uint8_t m_txMaxNSpatialStreams;$/;"	m	class:ns3::HtCapabilities
m_txMaxNSpatialStreams	ht-operations.h	/^  uint8_t m_txMaxNSpatialStreams;$/;"	m	class:ns3::HtOperations
m_txMcsMap	vht-capabilities.h	/^  std::vector<uint8_t> m_txMcsMap;$/;"	m	class:ns3::VhtCapabilities
m_txMcsSetDefined	ht-capabilities.h	/^  uint8_t m_txMcsSetDefined;$/;"	m	class:ns3::HtCapabilities
m_txMcsSetDefined	ht-operations.h	/^  uint8_t m_txMcsSetDefined;$/;"	m	class:ns3::HtOperations
m_txMiddle	block-ack-manager.h	/^  MacTxMiddle* m_txMiddle;$/;"	m	class:ns3::BlockAckManager
m_txMiddle	dca-txop.h	/^  MacTxMiddle *m_txMiddle;$/;"	m	class:ns3::DcaTxop
m_txMiddle	edca-txop-n.h	/^  MacTxMiddle *m_txMiddle;$/;"	m	class:ns3::EdcaTxopN
m_txMiddle	regular-wifi-mac.h	/^  MacTxMiddle *m_txMiddle;  \/\/!< TX middle (aggregation etc.)$/;"	m	class:ns3::RegularWifiMac
m_txMpduReferenceNumber	yans-wifi-phy.h	/^  uint32_t m_txMpduReferenceNumber;     \/\/!< A-MPDU reference number to identify all transmitted subframes belonging to the same received A-MPDU$/;"	m	class:ns3::YansWifiPhy
m_txNdpCapable	ht-capabilities.h	/^  uint8_t m_txNdpCapable;$/;"	m	class:ns3::HtCapabilities
m_txOkCallback	block-ack-manager.h	/^  TxOk m_txOkCallback;$/;"	m	class:ns3::BlockAckManager
m_txOkCallback	dca-txop.h	/^  TxOk m_txOkCallback;$/;"	m	class:ns3::DcaTxop
m_txOkCallback	edca-txop-n.h	/^  TxOk m_txOkCallback;$/;"	m	class:ns3::EdcaTxopN
m_txOkCallback	regular-wifi-mac.h	/^  TracedCallback<const WifiMacHeader &> m_txOkCallback;$/;"	m	class:ns3::RegularWifiMac
m_txPackets	mac-low.h	/^  std::vector<Item> m_txPackets;      \/\/!< Contain temporary items to be sent with the next A-MPDU transmission, once RTS\/CTS exchange has succeeded. It is not used in other cases.$/;"	m	class:ns3::MacLow
m_txParams	mac-low.h	/^  MacLowTransmissionParameters m_txParams;  \/\/!< Transmission parameters of the current packet$/;"	m	class:ns3::MacLow
m_txPowerBaseDbm	yans-wifi-phy.h	/^  double   m_txPowerBaseDbm;      \/\/!< Minimum transmission power (dBm)$/;"	m	class:ns3::YansWifiPhy
m_txPowerEndDbm	yans-wifi-phy.h	/^  double   m_txPowerEndDbm;       \/\/!< Maximum transmission power (dBm)$/;"	m	class:ns3::YansWifiPhy
m_txPowerLevel	wifi-tx-vector.h	/^  uint8_t  m_txPowerLevel;       \/**< The TXPWR_LEVEL parameter in Table 15-4.$/;"	m	class:ns3::WifiTxVector
m_txPowerLevelInitialized	wifi-tx-vector.h	/^  bool     m_txPowerLevelInitialized; \/\/*< Internal initialization flag *\/$/;"	m	class:ns3::WifiTxVector
m_txRxMcsSetUnequal	ht-capabilities.h	/^  uint8_t m_txRxMcsSetUnequal;$/;"	m	class:ns3::HtCapabilities
m_txRxMcsSetUnequal	ht-operations.h	/^  uint8_t m_txRxMcsSetUnequal;$/;"	m	class:ns3::HtOperations
m_txSoundingPpdusCapable	ht-capabilities.h	/^  uint8_t m_txSoundingPpdusCapable;$/;"	m	class:ns3::HtCapabilities
m_txStaggeredSoundingCapable	ht-capabilities.h	/^  uint8_t m_txStaggeredSoundingCapable;$/;"	m	class:ns3::HtCapabilities
m_txStbc	ht-capabilities.h	/^  uint8_t m_txStbc;$/;"	m	class:ns3::HtCapabilities
m_txStbc	vht-capabilities.h	/^  uint8_t m_txStbc;$/;"	m	class:ns3::VhtCapabilities
m_txTrace	wifi-phy-state-helper.h	/^  TracedCallback<Ptr<const Packet>,WifiMode,WifiPreamble,uint8_t> m_txTrace;$/;"	m	class:ns3::WifiPhyStateHelper
m_txUnequalModulation	ht-capabilities.h	/^  uint8_t m_txUnequalModulation;$/;"	m	class:ns3::HtCapabilities
m_txUnequalModulation	ht-operations.h	/^  uint8_t m_txUnequalModulation;$/;"	m	class:ns3::HtOperations
m_txVector	interference-helper.h	/^    WifiTxVector m_txVector;$/;"	m	class:ns3::InterferenceHelper::Event
m_tx_err	amrr-wifi-manager.cc	/^  uint32_t m_tx_err;$/;"	m	struct:ns3::AmrrWifiRemoteStation	file:
m_tx_err	onoe-wifi-manager.cc	/^  uint32_t m_tx_err;$/;"	m	struct:ns3::OnoeWifiRemoteStation	file:
m_tx_ok	amrr-wifi-manager.cc	/^  uint32_t m_tx_ok;$/;"	m	struct:ns3::AmrrWifiRemoteStation	file:
m_tx_ok	onoe-wifi-manager.cc	/^  uint32_t m_tx_ok;$/;"	m	struct:ns3::OnoeWifiRemoteStation	file:
m_tx_retr	amrr-wifi-manager.cc	/^  uint32_t m_tx_retr;$/;"	m	struct:ns3::AmrrWifiRemoteStation	file:
m_tx_retr	onoe-wifi-manager.cc	/^  uint32_t m_tx_retr;$/;"	m	struct:ns3::OnoeWifiRemoteStation	file:
m_tx_upper	onoe-wifi-manager.cc	/^  uint32_t m_tx_upper;$/;"	m	struct:ns3::OnoeWifiRemoteStation	file:
m_txop	dca-txop.cc	/^  DcaTxop *m_txop;$/;"	m	class:ns3::DcaTxop::Dcf	file:
m_txop	dca-txop.cc	/^  DcaTxop *m_txop;$/;"	m	class:ns3::DcaTxop::TransmissionListener	file:
m_txop	edca-txop-n.cc	/^  EdcaTxopN *m_txop;$/;"	m	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener	file:
m_txop	edca-txop-n.cc	/^  EdcaTxopN *m_txop;$/;"	m	class:ns3::EdcaTxopN::Dcf	file:
m_txop	edca-txop-n.cc	/^  EdcaTxopN *m_txop;$/;"	m	class:ns3::EdcaTxopN::TransmissionListener	file:
m_txrate	amrr-wifi-manager.cc	/^  uint32_t m_txrate;$/;"	m	struct:ns3::AmrrWifiRemoteStation	file:
m_txrate	minstrel-wifi-manager.h	/^  uint32_t m_txrate;             \/\/\/< current transmit rate$/;"	m	struct:ns3::MinstrelWifiRemoteStation
m_txrate	onoe-wifi-manager.cc	/^  uint32_t m_txrate;$/;"	m	struct:ns3::OnoeWifiRemoteStation	file:
m_typeOfStation	edca-txop-n.h	/^  TypeOfStation m_typeOfStation;$/;"	m	class:ns3::EdcaTxopN
m_uid	wifi-mode.h	/^  uint32_t m_uid;$/;"	m	class:ns3::WifiMode
m_unblockPackets	block-ack-manager.h	/^  Callback<void, Mac48Address, uint8_t> m_unblockPackets;$/;"	m	class:ns3::BlockAckManager
m_uniformRandomVariable	minstrel-ht-wifi-manager.h	/^  Ptr<UniformRandomVariable> m_uniformRandomVariable; \/\/!< Provides uniform random variables.$/;"	m	class:ns3::MinstrelHtWifiManager
m_uniformRandomVariable	minstrel-wifi-manager.h	/^  Ptr<UniformRandomVariable> m_uniformRandomVariable;$/;"	m	class:ns3::MinstrelWifiManager
m_updatePeriod	amrr-wifi-manager.h	/^  Time m_updatePeriod;$/;"	m	class:ns3::AmrrWifiManager
m_updatePeriod	onoe-wifi-manager.h	/^  Time m_updatePeriod;$/;"	m	class:ns3::OnoeWifiManager
m_updateStats	minstrel-ht-wifi-manager.h	/^  Time m_updateStats;         \/\/!< How frequent do we calculate the stats (1\/10 seconds).$/;"	m	class:ns3::MinstrelHtWifiManager
m_updateStats	minstrel-wifi-manager.h	/^  Time m_updateStats;       \/\/\/< how frequent do we calculate the stats (1\/10 seconds)$/;"	m	class:ns3::MinstrelWifiManager
m_updateTxCurrentCallback	wifi-radio-energy-model.h	/^  UpdateTxCurrentCallback m_updateTxCurrentCallback;$/;"	m	class:ns3::WifiRadioEnergyModelPhyListener
m_useNonErpProtection	wifi-remote-station-manager.h	/^  bool m_useNonErpProtection; \/\/!< flag if protection for non-ERP stations against ERP transmissions is enabled$/;"	m	class:ns3::WifiRemoteStationManager
m_useVhtOnly	minstrel-ht-wifi-manager.h	/^  bool m_useVhtOnly;           \/\/!< If only VHT MCS should be used, instead of HT and VHT.$/;"	m	class:ns3::MinstrelHtWifiManager
m_usingRecoveryPower	parf-wifi-manager.cc	/^  bool m_usingRecoveryPower; \/\/!< If using recovery power.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_usingRecoveryRate	parf-wifi-manager.cc	/^  bool m_usingRecoveryRate;  \/\/!< If using recovery rate.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_vhtCapability	mgt-headers.h	/^  VhtCapabilities m_vhtCapability;    \/\/!< VHT capabilities$/;"	m	class:ns3::MgtAssocRequestHeader
m_vhtCapability	mgt-headers.h	/^  VhtCapabilities m_vhtCapability;    \/\/!< VHT capabilities$/;"	m	class:ns3::MgtProbeResponseHeader
m_vhtCapability	mgt-headers.h	/^  VhtCapabilities m_vhtCapability; \/\/!< VHT capabilities$/;"	m	class:ns3::MgtAssocResponseHeader
m_vhtCapability	mgt-headers.h	/^  VhtCapabilities m_vhtCapability; \/\/!< VHT capabilities$/;"	m	class:ns3::MgtProbeRequestHeader
m_vhtLinkAdaptationCapable	vht-capabilities.h	/^  uint8_t m_vhtLinkAdaptationCapable;$/;"	m	class:ns3::VhtCapabilities
m_vhtSupported	regular-wifi-mac.h	/^  bool m_vhtSupported;$/;"	m	class:ns3::RegularWifiMac
m_vhtSupported	vht-capabilities.h	/^  uint8_t m_vhtSupported;$/;"	m	class:ns3::VhtCapabilities
m_vhtSupported	wifi-remote-station-manager.h	/^  bool m_vhtSupported;        \/\/!< Flag if VHT is supported by the station$/;"	m	struct:ns3::WifiRemoteStationState
m_vhtSupported	wifi-remote-station-manager.h	/^  bool m_vhtSupported; \/\/!< Flag if VHT capability is supported$/;"	m	class:ns3::WifiRemoteStationManager
m_vhtTxopPs	vht-capabilities.h	/^  uint8_t m_vhtTxopPs;$/;"	m	class:ns3::VhtCapabilities
m_viMaxAmpduSize	regular-wifi-mac.h	/^  uint32_t m_viMaxAmpduSize;$/;"	m	class:ns3::RegularWifiMac
m_viMaxAmsduSize	regular-wifi-mac.h	/^  uint32_t m_viMaxAmsduSize;$/;"	m	class:ns3::RegularWifiMac
m_voMaxAmpduSize	regular-wifi-mac.h	/^  uint32_t m_voMaxAmpduSize;$/;"	m	class:ns3::RegularWifiMac
m_voMaxAmsduSize	regular-wifi-mac.h	/^  uint32_t m_voMaxAmsduSize;$/;"	m	class:ns3::RegularWifiMac
m_voltage	wifi-tx-current-model.h	/^  double m_voltage;$/;"	m	class:ns3::LinearWifiTxCurrentModel
m_waitAck	mac-low.h	/^  } m_waitAck;$/;"	m	class:ns3::MacLowTransmissionParameters	typeref:enum:ns3::MacLowTransmissionParameters::__anon2
m_waitRifsEvent	mac-low.h	/^  EventId m_waitRifsEvent;              \/\/!< Wait for RIFS event$/;"	m	class:ns3::MacLow
m_waitSifsEvent	mac-low.h	/^  EventId m_waitSifsEvent;              \/\/!< Wait for SIFS event$/;"	m	class:ns3::MacLow
m_wifiMac	wifi-remote-station-manager.h	/^  Ptr<WifiMac> m_wifiMac;$/;"	m	class:ns3::WifiRemoteStationManager
m_wifiPhy	wifi-remote-station-manager.h	/^  Ptr<WifiPhy> m_wifiPhy;$/;"	m	class:ns3::WifiRemoteStationManager
m_winEnd	block-ack-agreement.h	/^  uint16_t m_winEnd;         \/\/!< Ending sequence number$/;"	m	class:ns3::BlockAckAgreement
m_winEnd	block-ack-cache.h	/^  uint16_t m_winEnd;$/;"	m	class:ns3::BlockAckCache
m_winSize	block-ack-cache.h	/^  uint8_t m_winSize;$/;"	m	class:ns3::BlockAckCache
m_winStart	block-ack-cache.h	/^  uint16_t m_winStart;$/;"	m	class:ns3::BlockAckCache
mcsIndex	minstrel-ht-wifi-manager.h	/^  uint32_t mcsIndex;            \/\/!< The index in the operationalMcsSet of the WifiRemoteStationManager.$/;"	m	struct:ns3::HtRateInfo
mcsValue	wifi-mode.h	/^    uint8_t mcsValue;$/;"	m	struct:ns3::WifiModeFactory::WifiModeItem
meshAction	mgt-headers.h	/^    enum MeshActionValue meshAction;$/;"	m	union:ns3::WifiActionHeader::__anon4	typeref:enum:ns3::WifiActionHeader::__anon4::MeshActionValue
modClass	wifi-mode.h	/^    enum WifiModulationClass modClass;$/;"	m	struct:ns3::WifiModeFactory::WifiModeItem	typeref:enum:ns3::WifiModeFactory::WifiModeItem::WifiModulationClass
mpduInfo	wifi-phy.h	/^struct mpduInfo$/;"	s	namespace:ns3
mpduRefNumber	wifi-phy.h	/^  uint32_t mpduRefNumber;$/;"	m	struct:ns3::mpduInfo
mpduType	wifi-phy.h	/^enum mpduType$/;"	g	namespace:ns3
multihopAction	mgt-headers.h	/^    enum MultihopActionValue multihopAction;$/;"	m	union:ns3::WifiActionHeader::__anon4	typeref:enum:ns3::WifiActionHeader::__anon4::MultihopActionValue
n	dsss-error-rate-model.h	/^  double n;$/;"	m	struct:ns3::FunctionParameterType
noise	wifi-phy.h	/^  double noise; \/\/in dBm$/;"	m	struct:ns3::signalNoiseDbm
ns3	aarf-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
ns3	aarf-wifi-manager.h	/^namespace ns3 {$/;"	n
ns3	aarfcd-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
ns3	aarfcd-wifi-manager.h	/^namespace ns3 {$/;"	n
ns3	adhoc-wifi-mac.cc	/^namespace ns3 {$/;"	n	file:
ns3	adhoc-wifi-mac.h	/^namespace ns3 {$/;"	n
ns3	ampdu-subframe-header.cc	/^namespace ns3 {$/;"	n	file:
ns3	ampdu-subframe-header.h	/^namespace ns3 {$/;"	n
ns3	ampdu-tag.cc	/^namespace ns3 {$/;"	n	file:
ns3	ampdu-tag.h	/^namespace ns3 {$/;"	n
ns3	amrr-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
ns3	amrr-wifi-manager.h	/^namespace ns3 {$/;"	n
ns3	amsdu-subframe-header.cc	/^namespace ns3 {$/;"	n	file:
ns3	amsdu-subframe-header.h	/^namespace ns3 {$/;"	n
ns3	ap-wifi-mac.cc	/^namespace ns3 {$/;"	n	file:
ns3	ap-wifi-mac.h	/^namespace ns3 {$/;"	n
ns3	aparf-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
ns3	aparf-wifi-manager.h	/^namespace ns3 {$/;"	n
ns3	arf-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
ns3	arf-wifi-manager.h	/^namespace ns3 {$/;"	n
ns3	block-ack-agreement.cc	/^namespace ns3 {$/;"	n	file:
ns3	block-ack-agreement.h	/^namespace ns3 {$/;"	n
ns3	block-ack-cache.cc	/^namespace ns3 {$/;"	n	file:
ns3	block-ack-cache.h	/^namespace ns3 {$/;"	n
ns3	block-ack-manager.cc	/^namespace ns3 {$/;"	n	file:
ns3	block-ack-manager.h	/^namespace ns3 {$/;"	n
ns3	capability-information.cc	/^namespace ns3 {$/;"	n	file:
ns3	capability-information.h	/^namespace ns3 {$/;"	n
ns3	cara-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
ns3	cara-wifi-manager.h	/^namespace ns3 {$/;"	n
ns3	constant-rate-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
ns3	constant-rate-wifi-manager.h	/^namespace ns3 {$/;"	n
ns3	ctrl-headers.cc	/^namespace ns3 {$/;"	n	file:
ns3	ctrl-headers.h	/^namespace ns3 {$/;"	n
ns3	dca-txop.cc	/^namespace ns3 {$/;"	n	file:
ns3	dca-txop.h	/^namespace ns3 {$/;"	n
ns3	dcf-manager.cc	/^namespace ns3 {$/;"	n	file:
ns3	dcf-manager.h	/^namespace ns3 {$/;"	n
ns3	dcf.cc	/^namespace ns3 {$/;"	n	file:
ns3	dcf.h	/^namespace ns3 {$/;"	n
ns3	dsss-error-rate-model.cc	/^namespace ns3 {$/;"	n	file:
ns3	dsss-error-rate-model.h	/^namespace ns3 {$/;"	n
ns3	edca-txop-n.cc	/^namespace ns3 {$/;"	n	file:
ns3	edca-txop-n.h	/^namespace ns3 {$/;"	n
ns3	erp-information.cc	/^namespace ns3 {$/;"	n	file:
ns3	erp-information.h	/^namespace ns3 {$/;"	n
ns3	error-rate-model.cc	/^namespace ns3 {$/;"	n	file:
ns3	error-rate-model.h	/^namespace ns3 {$/;"	n
ns3	ht-capabilities.cc	/^namespace ns3 {$/;"	n	file:
ns3	ht-capabilities.h	/^namespace ns3 {$/;"	n
ns3	ht-operations.cc	/^namespace ns3 {$/;"	n	file:
ns3	ht-operations.h	/^namespace ns3 {$/;"	n
ns3	ideal-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
ns3	ideal-wifi-manager.h	/^namespace ns3 {$/;"	n
ns3	interference-helper.cc	/^namespace ns3 {$/;"	n	file:
ns3	interference-helper.h	/^namespace ns3 {$/;"	n
ns3	mac-low.cc	/^namespace ns3 {$/;"	n	file:
ns3	mac-low.h	/^namespace ns3 {$/;"	n
ns3	mac-rx-middle.cc	/^namespace ns3 {$/;"	n	file:
ns3	mac-rx-middle.h	/^namespace ns3 {$/;"	n
ns3	mac-tx-middle.cc	/^namespace ns3 {$/;"	n	file:
ns3	mac-tx-middle.h	/^namespace ns3 {$/;"	n
ns3	mgt-headers.cc	/^namespace ns3 {$/;"	n	file:
ns3	mgt-headers.h	/^namespace ns3 {$/;"	n
ns3	minstrel-ht-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
ns3	minstrel-ht-wifi-manager.h	/^namespace ns3 {$/;"	n
ns3	minstrel-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
ns3	minstrel-wifi-manager.h	/^namespace ns3 {$/;"	n
ns3	mpdu-aggregator.cc	/^namespace ns3 {$/;"	n	file:
ns3	mpdu-aggregator.h	/^namespace ns3 {$/;"	n
ns3	mpdu-standard-aggregator.cc	/^namespace ns3 {$/;"	n	file:
ns3	mpdu-standard-aggregator.h	/^namespace ns3 {$/;"	n
ns3	msdu-aggregator.cc	/^namespace ns3 {$/;"	n	file:
ns3	msdu-aggregator.h	/^namespace ns3 {$/;"	n
ns3	msdu-standard-aggregator.cc	/^namespace ns3 {$/;"	n	file:
ns3	msdu-standard-aggregator.h	/^namespace ns3 {$/;"	n
ns3	nist-error-rate-model.cc	/^namespace ns3 {$/;"	n	file:
ns3	nist-error-rate-model.h	/^namespace ns3 {$/;"	n
ns3	onoe-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
ns3	onoe-wifi-manager.h	/^namespace ns3 {$/;"	n
ns3	originator-block-ack-agreement.cc	/^namespace ns3 {$/;"	n	file:
ns3	originator-block-ack-agreement.h	/^namespace ns3 {$/;"	n
ns3	parf-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
ns3	parf-wifi-manager.h	/^namespace ns3 {$/;"	n
ns3	qos-blocked-destinations.cc	/^namespace ns3 {$/;"	n	file:
ns3	qos-blocked-destinations.h	/^namespace ns3 {$/;"	n
ns3	qos-tag.cc	/^namespace ns3 {$/;"	n	file:
ns3	qos-tag.h	/^namespace ns3 {$/;"	n
ns3	qos-utils.cc	/^namespace ns3 {$/;"	n	file:
ns3	qos-utils.h	/^namespace ns3 {$/;"	n
ns3	random-stream.cc	/^namespace ns3 {$/;"	n	file:
ns3	random-stream.h	/^namespace ns3 {$/;"	n
ns3	regular-wifi-mac.cc	/^namespace ns3 {$/;"	n	file:
ns3	regular-wifi-mac.h	/^namespace ns3 {$/;"	n
ns3	rraa-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
ns3	rraa-wifi-manager.h	/^namespace ns3 {$/;"	n
ns3	snr-tag.cc	/^namespace ns3 {$/;"	n	file:
ns3	snr-tag.h	/^namespace ns3 {$/;"	n
ns3	ssid.cc	/^namespace ns3 {$/;"	n	file:
ns3	ssid.h	/^namespace ns3 {$/;"	n
ns3	sta-wifi-mac.cc	/^namespace ns3 {$/;"	n	file:
ns3	sta-wifi-mac.h	/^namespace ns3  {$/;"	n
ns3	status-code.cc	/^namespace ns3 {$/;"	n	file:
ns3	status-code.h	/^namespace ns3 {$/;"	n
ns3	supported-rates.cc	/^namespace ns3 {$/;"	n	file:
ns3	supported-rates.h	/^namespace ns3 {$/;"	n
ns3	vht-capabilities.cc	/^namespace ns3 {$/;"	n	file:
ns3	vht-capabilities.h	/^namespace ns3 {$/;"	n
ns3	wifi-channel.cc	/^namespace ns3 {$/;"	n	file:
ns3	wifi-channel.h	/^namespace ns3 {$/;"	n
ns3	wifi-information-element-vector.cc	/^namespace ns3 {$/;"	n	file:
ns3	wifi-information-element-vector.h	/^namespace ns3 {$/;"	n
ns3	wifi-information-element.cc	/^namespace ns3 {$/;"	n	file:
ns3	wifi-information-element.h	/^namespace ns3 {$/;"	n
ns3	wifi-mac-header.cc	/^namespace ns3 {$/;"	n	file:
ns3	wifi-mac-header.h	/^namespace ns3 {$/;"	n
ns3	wifi-mac-queue.cc	/^namespace ns3 {$/;"	n	file:
ns3	wifi-mac-queue.h	/^namespace ns3 {$/;"	n
ns3	wifi-mac-trailer.cc	/^namespace ns3 {$/;"	n	file:
ns3	wifi-mac-trailer.h	/^namespace ns3 {$/;"	n
ns3	wifi-mac.cc	/^namespace ns3 {$/;"	n	file:
ns3	wifi-mac.h	/^namespace ns3 {$/;"	n
ns3	wifi-mode.cc	/^namespace ns3 {$/;"	n	file:
ns3	wifi-mode.h	/^namespace ns3 {$/;"	n
ns3	wifi-net-device.cc	/^namespace ns3 {$/;"	n	file:
ns3	wifi-net-device.h	/^namespace ns3 {$/;"	n
ns3	wifi-phy-standard.h	/^namespace ns3 {$/;"	n
ns3	wifi-phy-state-helper.cc	/^namespace ns3 {$/;"	n	file:
ns3	wifi-phy-state-helper.h	/^namespace ns3 {$/;"	n
ns3	wifi-phy.cc	/^namespace ns3 {$/;"	n	file:
ns3	wifi-phy.h	/^namespace ns3 {$/;"	n
ns3	wifi-preamble.h	/^namespace ns3 {$/;"	n
ns3	wifi-radio-energy-model.cc	/^namespace ns3 {$/;"	n	file:
ns3	wifi-radio-energy-model.h	/^namespace ns3 {$/;"	n
ns3	wifi-remote-station-manager.cc	/^namespace ns3 {$/;"	n	file:
ns3	wifi-remote-station-manager.h	/^namespace ns3 {$/;"	n
ns3	wifi-tx-current-model.cc	/^namespace ns3 {$/;"	n	file:
ns3	wifi-tx-current-model.h	/^namespace ns3 {$/;"	n
ns3	wifi-tx-vector.cc	/^namespace ns3 {$/;"	n	file:
ns3	wifi-tx-vector.h	/^namespace ns3 {$/;"	n
ns3	yans-error-rate-model.cc	/^namespace ns3 {$/;"	n	file:
ns3	yans-error-rate-model.h	/^namespace ns3 {$/;"	n
ns3	yans-wifi-channel.cc	/^namespace ns3 {$/;"	n	file:
ns3	yans-wifi-channel.h	/^namespace ns3 {$/;"	n
ns3	yans-wifi-phy.cc	/^namespace ns3 {$/;"	n	file:
ns3	yans-wifi-phy.h	/^namespace ns3 {$/;"	n
numRateAttempt	minstrel-ht-wifi-manager.h	/^  uint32_t numRateAttempt;      \/\/!< Number of transmission attempts so far.$/;"	m	struct:ns3::HtRateInfo
numRateAttempt	minstrel-wifi-manager.h	/^  uint32_t numRateAttempt;      \/\/\/< how many number of attempts so far$/;"	m	struct:ns3::RateInfo
numRateSuccess	minstrel-ht-wifi-manager.h	/^  uint32_t numRateSuccess;      \/\/!< Number of successful frames transmitted so far.$/;"	m	struct:ns3::HtRateInfo
numRateSuccess	minstrel-wifi-manager.h	/^  uint32_t numRateSuccess;      \/\/\/< number of successful pkts$/;"	m	struct:ns3::RateInfo
numSamplesSkipped	minstrel-ht-wifi-manager.h	/^  uint32_t numSamplesSkipped;   \/\/!< Number of times this rate statistics were not updated because no attempts have been made.$/;"	m	struct:ns3::HtRateInfo
numSamplesSkipped	minstrel-wifi-manager.h	/^  uint8_t numSamplesSkipped;$/;"	m	struct:ns3::RateInfo
operator ()	wifi-information-element-vector.cc	/^  operator () (Ptr<WifiInformationElement> a, Ptr<WifiInformationElement> b) const$/;"	f	struct:ns3::__anon5::PIEComparator
operator <	interference-helper.cc	/^InterferenceHelper::NiChange::operator < (const InterferenceHelper::NiChange& o) const$/;"	f	class:ns3::InterferenceHelper::NiChange
operator <	wifi-information-element.cc	/^WifiInformationElement::operator< (WifiInformationElement const & a) const$/;"	f	class:ns3::WifiInformationElement
operator <<	erp-information.cc	/^operator << (std::ostream &os, const ErpInformation &erpinformation)$/;"	f	namespace:ns3
operator <<	ht-capabilities.cc	/^operator << (std::ostream &os, const HtCapabilities &htcapabilities)$/;"	f	namespace:ns3
operator <<	ht-operations.cc	/^operator << (std::ostream &os, const HtOperations &htoperations)$/;"	f	namespace:ns3
operator <<	mac-low.cc	/^std::ostream &operator << (std::ostream &os, const MacLowTransmissionParameters &params)$/;"	f	namespace:ns3
operator <<	ssid.cc	/^operator << (std::ostream &os, const Ssid &ssid)$/;"	f	namespace:ns3
operator <<	status-code.cc	/^operator << (std::ostream &os, const StatusCode &code)$/;"	f	namespace:ns3
operator <<	supported-rates.cc	/^std::ostream &operator << (std::ostream &os, const SupportedRates &rates)$/;"	f	namespace:ns3
operator <<	vht-capabilities.cc	/^operator << (std::ostream &os, const VhtCapabilities &VhtCapabilities)$/;"	f	namespace:ns3
operator <<	wifi-mode.cc	/^std::ostream & operator << (std::ostream & os, const WifiMode &mode)$/;"	f	namespace:ns3
operator <<	wifi-phy.cc	/^std::ostream& operator<< (std::ostream& os, enum WifiPhy::State state)$/;"	f	namespace:ns3
operator <<	wifi-tx-vector.cc	/^std::ostream & operator << ( std::ostream &os, const WifiTxVector &v)$/;"	f	namespace:ns3
operator =	supported-rates.cc	/^SupportedRates::operator= (const SupportedRates& rates)$/;"	f	class:ns3::SupportedRates
operator ==	wifi-information-element-vector.cc	/^WifiInformationElementVector::operator== (const WifiInformationElementVector & a) const$/;"	f	class:ns3::WifiInformationElementVector
operator ==	wifi-information-element.cc	/^WifiInformationElement::operator== (WifiInformationElement const & a) const$/;"	f	class:ns3::WifiInformationElement
operator ==	wifi-mode.cc	/^bool operator == (const WifiMode &a, const WifiMode &b)$/;"	f	namespace:ns3
operator >>	erp-information.cc	/^std::istream &operator >> (std::istream &is, ErpInformation &erpinformation)$/;"	f	namespace:ns3
operator >>	ht-capabilities.cc	/^std::istream &operator >> (std::istream &is, HtCapabilities &htcapabilities)$/;"	f	namespace:ns3
operator >>	ht-operations.cc	/^std::istream &operator >> (std::istream &is, HtOperations &htoperations)$/;"	f	namespace:ns3
operator >>	ssid.cc	/^std::istream &operator >> (std::istream &is, Ssid &ssid)$/;"	f	namespace:ns3
operator >>	vht-capabilities.cc	/^std::istream &operator >> (std::istream &is,VhtCapabilities &VhtCapabilities)$/;"	f	namespace:ns3
operator >>	wifi-mode.cc	/^std::istream & operator >> (std::istream &is, WifiMode &mode)$/;"	f	namespace:ns3
packet	block-ack-manager.h	/^    Ptr<const Packet> packet;$/;"	m	struct:ns3::BlockAckManager::Item
packet	mac-low.h	/^    Ptr<const Packet> packet;$/;"	m	struct:ns3::MacLow::__anon3
packet	wifi-mac-queue.h	/^    Ptr<const Packet> packet; \/\/!< Actual packet$/;"	m	struct:ns3::WifiMacQueue::Item
per	interference-helper.h	/^    double per;$/;"	m	struct:ns3::InterferenceHelper::SnrPer
perfectTxTime	minstrel-ht-wifi-manager.h	/^  Time perfectTxTime;$/;"	m	struct:ns3::HtRateInfo
perfectTxTime	minstrel-wifi-manager.h	/^  Time perfectTxTime;$/;"	m	struct:ns3::RateInfo
pmtl	rraa-wifi-manager.h	/^    double pmtl;$/;"	m	struct:ns3::RraaWifiManager::ThresholdsItem
pori	rraa-wifi-manager.h	/^    double pori;$/;"	m	struct:ns3::RraaWifiManager::ThresholdsItem
preamble	yans-wifi-channel.h	/^  WifiPreamble preamble;$/;"	m	struct:ns3::Parameters
prevNumRateAttempt	minstrel-ht-wifi-manager.h	/^  uint32_t prevNumRateAttempt;  \/\/!< Number of transmission attempts with previous rate.$/;"	m	struct:ns3::HtRateInfo
prevNumRateAttempt	minstrel-wifi-manager.h	/^  uint32_t prevNumRateAttempt;  \/\/!< Number of transmission attempts with previous rate.$/;"	m	struct:ns3::RateInfo
prevNumRateSuccess	minstrel-ht-wifi-manager.h	/^  uint32_t prevNumRateSuccess;  \/\/!< Number of successful frames transmitted with previous rate.$/;"	m	struct:ns3::HtRateInfo
prevNumRateSuccess	minstrel-wifi-manager.h	/^  uint32_t prevNumRateSuccess;  \/\/!< Number of successful frames transmitted with previous rate.$/;"	m	struct:ns3::RateInfo
prob	minstrel-ht-wifi-manager.h	/^  double prob;                  \/\/!< Current probability within last time interval. (# frame success )\/(# total frames)$/;"	m	struct:ns3::HtRateInfo
prob	minstrel-wifi-manager.h	/^  uint32_t prob;                \/\/\/< (# pkts success )\/(# total pkts)$/;"	m	struct:ns3::RateInfo
ratesFirstMpduTxTimeTable	minstrel-ht-wifi-manager.h	/^  TxTime ratesFirstMpduTxTimeTable;$/;"	m	struct:ns3::McsGroup
ratesTxTimeTable	minstrel-ht-wifi-manager.h	/^  TxTime ratesTxTimeTable;$/;"	m	struct:ns3::McsGroup
recipient	block-ack-manager.h	/^  Mac48Address recipient;$/;"	m	struct:ns3::Bar
retryCount	minstrel-ht-wifi-manager.h	/^  uint32_t retryCount;          \/\/!< Retry limit.$/;"	m	struct:ns3::HtRateInfo
retryCount	minstrel-wifi-manager.h	/^  uint32_t retryCount;          \/\/\/< retry limit$/;"	m	struct:ns3::RateInfo
retryUpdated	minstrel-ht-wifi-manager.h	/^  bool retryUpdated;            \/\/!< If number of retries was updated already.$/;"	m	struct:ns3::HtRateInfo
rxPowerDbm	yans-wifi-channel.h	/^  double rxPowerDbm;$/;"	m	struct:ns3::Parameters
sampleLimit	minstrel-wifi-manager.h	/^  int sampleLimit;$/;"	m	struct:ns3::RateInfo
selfProtectedAction	mgt-headers.h	/^    enum SelfProtectedActionValue selfProtectedAction;$/;"	m	union:ns3::WifiActionHeader::__anon4	typeref:enum:ns3::WifiActionHeader::__anon4::SelfProtectedActionValue
sgi	minstrel-ht-wifi-manager.h	/^  uint8_t sgi;$/;"	m	struct:ns3::McsGroup
signal	wifi-phy.h	/^  double signal; \/\/in dBm$/;"	m	struct:ns3::signalNoiseDbm
signalNoiseDbm	wifi-phy.h	/^struct signalNoiseDbm$/;"	s	namespace:ns3
snr	interference-helper.h	/^    double snr;$/;"	m	struct:ns3::InterferenceHelper::SnrPer
streams	minstrel-ht-wifi-manager.h	/^  uint8_t streams;$/;"	m	struct:ns3::McsGroup
successHist	minstrel-ht-wifi-manager.h	/^  uint64_t successHist;         \/\/!< Aggregate of all transmission successes.$/;"	m	struct:ns3::HtRateInfo
successHist	minstrel-wifi-manager.h	/^  uint64_t successHist;         \/\/!< Aggregate of all transmission successes.$/;"	m	struct:ns3::RateInfo
supported	minstrel-ht-wifi-manager.h	/^  bool supported;               \/\/!< If the rate is supported.$/;"	m	struct:ns3::HtRateInfo
throughput	minstrel-ht-wifi-manager.h	/^  double throughput;            \/\/!< Throughput of this rate (in pkts per second).$/;"	m	struct:ns3::HtRateInfo
throughput	minstrel-wifi-manager.h	/^  uint32_t throughput;  \/\/\/< throughput of a rate$/;"	m	struct:ns3::RateInfo
tid	block-ack-manager.h	/^  uint8_t tid;$/;"	m	struct:ns3::Bar
timestamp	block-ack-manager.h	/^    Time timestamp;$/;"	m	struct:ns3::BlockAckManager::Item
timestamp	mac-low.h	/^    Time timestamp;$/;"	m	struct:ns3::MacLow::__anon3
tstamp	wifi-mac-queue.h	/^    Time tstamp;              \/\/!< timestamp when the packet arrived at the queue$/;"	m	struct:ns3::WifiMacQueue::Item
txVector	yans-wifi-channel.h	/^  WifiTxVector txVector;$/;"	m	struct:ns3::Parameters
type	wifi-phy.h	/^  enum mpduType type;$/;"	m	struct:ns3::mpduInfo	typeref:enum:ns3::mpduInfo::mpduType
type	yans-wifi-channel.h	/^  enum mpduType type;$/;"	m	struct:ns3::Parameters	typeref:enum:ns3::Parameters::mpduType
uniqueUid	wifi-mode.h	/^    std::string uniqueUid;$/;"	m	struct:ns3::WifiModeFactory::WifiModeItem
~AarfWifiManager	aarf-wifi-manager.cc	/^AarfWifiManager::~AarfWifiManager ()$/;"	f	class:ns3::AarfWifiManager
~AarfcdWifiManager	aarfcd-wifi-manager.cc	/^AarfcdWifiManager::~AarfcdWifiManager ()$/;"	f	class:ns3::AarfcdWifiManager
~AdhocWifiMac	adhoc-wifi-mac.cc	/^AdhocWifiMac::~AdhocWifiMac ()$/;"	f	class:ns3::AdhocWifiMac
~AggregationCapableTransmissionListener	edca-txop-n.cc	/^  virtual ~AggregationCapableTransmissionListener ()$/;"	f	class:ns3::EdcaTxopN::AggregationCapableTransmissionListener
~AmpduSubframeHeader	ampdu-subframe-header.cc	/^AmpduSubframeHeader::~AmpduSubframeHeader ()$/;"	f	class:ns3::AmpduSubframeHeader
~AmsduSubframeHeader	amsdu-subframe-header.cc	/^AmsduSubframeHeader::~AmsduSubframeHeader ()$/;"	f	class:ns3::AmsduSubframeHeader
~ApWifiMac	ap-wifi-mac.cc	/^ApWifiMac::~ApWifiMac ()$/;"	f	class:ns3::ApWifiMac
~AparfWifiManager	aparf-wifi-manager.cc	/^AparfWifiManager::~AparfWifiManager ()$/;"	f	class:ns3::AparfWifiManager
~ArfWifiManager	arf-wifi-manager.cc	/^ArfWifiManager::~ArfWifiManager ()$/;"	f	class:ns3::ArfWifiManager
~BlockAckAgreement	block-ack-agreement.cc	/^BlockAckAgreement::~BlockAckAgreement ()$/;"	f	class:ns3::BlockAckAgreement
~BlockAckManager	block-ack-manager.cc	/^BlockAckManager::~BlockAckManager ()$/;"	f	class:ns3::BlockAckManager
~CaraWifiManager	cara-wifi-manager.cc	/^CaraWifiManager::~CaraWifiManager ()$/;"	f	class:ns3::CaraWifiManager
~ConstantRateWifiManager	constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::~ConstantRateWifiManager ()$/;"	f	class:ns3::ConstantRateWifiManager
~CtrlBAckRequestHeader	ctrl-headers.cc	/^CtrlBAckRequestHeader::~CtrlBAckRequestHeader ()$/;"	f	class:ns3::CtrlBAckRequestHeader
~CtrlBAckResponseHeader	ctrl-headers.cc	/^CtrlBAckResponseHeader::~CtrlBAckResponseHeader ()$/;"	f	class:ns3::CtrlBAckResponseHeader
~DcaTxop	dca-txop.cc	/^DcaTxop::~DcaTxop ()$/;"	f	class:ns3::DcaTxop
~DcfManager	dcf-manager.cc	/^DcfManager::~DcfManager ()$/;"	f	class:ns3::DcfManager
~DcfState	dcf-manager.cc	/^DcfState::~DcfState ()$/;"	f	class:ns3::DcfState
~EdcaTxopN	edca-txop-n.cc	/^EdcaTxopN::~EdcaTxopN ()$/;"	f	class:ns3::EdcaTxopN
~Event	interference-helper.cc	/^InterferenceHelper::Event::~Event ()$/;"	f	class:ns3::InterferenceHelper::Event
~IdealWifiManager	ideal-wifi-manager.cc	/^IdealWifiManager::~IdealWifiManager ()$/;"	f	class:ns3::IdealWifiManager
~InterferenceHelper	interference-helper.cc	/^InterferenceHelper::~InterferenceHelper ()$/;"	f	class:ns3::InterferenceHelper
~LinearWifiTxCurrentModel	wifi-tx-current-model.cc	/^LinearWifiTxCurrentModel::~LinearWifiTxCurrentModel()$/;"	f	class:ns3::LinearWifiTxCurrentModel
~LowDcfListener	dcf-manager.cc	/^  virtual ~LowDcfListener ()$/;"	f	class:ns3::LowDcfListener
~MacLow	mac-low.cc	/^MacLow::~MacLow ()$/;"	f	class:ns3::MacLow
~MacLowAggregationCapableTransmissionListener	mac-low.cc	/^MacLowAggregationCapableTransmissionListener::~MacLowAggregationCapableTransmissionListener ()$/;"	f	class:ns3::MacLowAggregationCapableTransmissionListener
~MacLowDcfListener	mac-low.cc	/^MacLowDcfListener::~MacLowDcfListener ()$/;"	f	class:ns3::MacLowDcfListener
~MacLowTransmissionListener	mac-low.cc	/^MacLowTransmissionListener::~MacLowTransmissionListener ()$/;"	f	class:ns3::MacLowTransmissionListener
~MacRxMiddle	mac-rx-middle.cc	/^MacRxMiddle::~MacRxMiddle ()$/;"	f	class:ns3::MacRxMiddle
~MacTxMiddle	mac-tx-middle.cc	/^MacTxMiddle::~MacTxMiddle ()$/;"	f	class:ns3::MacTxMiddle
~MgtAssocRequestHeader	mgt-headers.cc	/^MgtAssocRequestHeader::~MgtAssocRequestHeader ()$/;"	f	class:ns3::MgtAssocRequestHeader
~MgtAssocResponseHeader	mgt-headers.cc	/^MgtAssocResponseHeader::~MgtAssocResponseHeader ()$/;"	f	class:ns3::MgtAssocResponseHeader
~MgtProbeRequestHeader	mgt-headers.cc	/^MgtProbeRequestHeader::~MgtProbeRequestHeader ()$/;"	f	class:ns3::MgtProbeRequestHeader
~MgtProbeResponseHeader	mgt-headers.cc	/^MgtProbeResponseHeader::~MgtProbeResponseHeader ()$/;"	f	class:ns3::MgtProbeResponseHeader
~MinstrelHtWifiManager	minstrel-ht-wifi-manager.cc	/^MinstrelHtWifiManager::~MinstrelHtWifiManager ()$/;"	f	class:ns3::MinstrelHtWifiManager
~MinstrelWifiManager	minstrel-wifi-manager.cc	/^MinstrelWifiManager::~MinstrelWifiManager ()$/;"	f	class:ns3::MinstrelWifiManager
~MpduStandardAggregator	mpdu-standard-aggregator.cc	/^MpduStandardAggregator::~MpduStandardAggregator ()$/;"	f	class:ns3::MpduStandardAggregator
~MsduStandardAggregator	msdu-standard-aggregator.cc	/^MsduStandardAggregator::~MsduStandardAggregator ()$/;"	f	class:ns3::MsduStandardAggregator
~OriginatorBlockAckAgreement	originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::~OriginatorBlockAckAgreement ()$/;"	f	class:ns3::OriginatorBlockAckAgreement
~OriginatorRxStatus	mac-rx-middle.cc	/^  ~OriginatorRxStatus ()$/;"	f	class:ns3::OriginatorRxStatus
~ParfWifiManager	parf-wifi-manager.cc	/^ParfWifiManager::~ParfWifiManager ()$/;"	f	class:ns3::ParfWifiManager
~PhyListener	dcf-manager.cc	/^  virtual ~PhyListener ()$/;"	f	class:ns3::PhyListener
~PhyMacLowListener	mac-low.cc	/^  virtual ~PhyMacLowListener ()$/;"	f	class:ns3::PhyMacLowListener
~QosBlockedDestinations	qos-blocked-destinations.cc	/^QosBlockedDestinations::~QosBlockedDestinations ()$/;"	f	class:ns3::QosBlockedDestinations
~RandomStream	random-stream.cc	/^RandomStream::~RandomStream ()$/;"	f	class:ns3::RandomStream
~RegularWifiMac	regular-wifi-mac.cc	/^RegularWifiMac::~RegularWifiMac ()$/;"	f	class:ns3::RegularWifiMac
~RraaWifiManager	rraa-wifi-manager.cc	/^RraaWifiManager::~RraaWifiManager ()$/;"	f	class:ns3::RraaWifiManager
~StaWifiMac	sta-wifi-mac.cc	/^StaWifiMac::~StaWifiMac ()$/;"	f	class:ns3::StaWifiMac
~TransmissionListener	dca-txop.cc	/^  virtual ~TransmissionListener ()$/;"	f	class:ns3::DcaTxop::TransmissionListener
~TransmissionListener	edca-txop-n.cc	/^  virtual ~TransmissionListener ()$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
~WifiActionHeader	mgt-headers.cc	/^WifiActionHeader::~WifiActionHeader ()$/;"	f	class:ns3::WifiActionHeader
~WifiInformationElement	wifi-information-element.cc	/^WifiInformationElement::~WifiInformationElement ()$/;"	f	class:ns3::WifiInformationElement
~WifiInformationElementVector	wifi-information-element-vector.cc	/^WifiInformationElementVector::~WifiInformationElementVector ()$/;"	f	class:ns3::WifiInformationElementVector
~WifiMacHeader	wifi-mac-header.cc	/^WifiMacHeader::~WifiMacHeader ()$/;"	f	class:ns3::WifiMacHeader
~WifiMacQueue	wifi-mac-queue.cc	/^WifiMacQueue::~WifiMacQueue ()$/;"	f	class:ns3::WifiMacQueue
~WifiMacTrailer	wifi-mac-trailer.cc	/^WifiMacTrailer::~WifiMacTrailer ()$/;"	f	class:ns3::WifiMacTrailer
~WifiNetDevice	wifi-net-device.cc	/^WifiNetDevice::~WifiNetDevice ()$/;"	f	class:ns3::WifiNetDevice
~WifiPhy	wifi-phy.cc	/^WifiPhy::~WifiPhy ()$/;"	f	class:ns3::WifiPhy
~WifiPhyListener	wifi-phy.cc	/^WifiPhyListener::~WifiPhyListener ()$/;"	f	class:ns3::WifiPhyListener
~WifiRadioEnergyModel	wifi-radio-energy-model.cc	/^WifiRadioEnergyModel::~WifiRadioEnergyModel ()$/;"	f	class:ns3::WifiRadioEnergyModel
~WifiRadioEnergyModelPhyListener	wifi-radio-energy-model.cc	/^WifiRadioEnergyModelPhyListener::~WifiRadioEnergyModelPhyListener ()$/;"	f	class:ns3::WifiRadioEnergyModelPhyListener
~WifiRemoteStation	wifi-remote-station-manager.cc	/^WifiRemoteStation::~WifiRemoteStation ()$/;"	f	class:ns3::WifiRemoteStation
~WifiRemoteStationManager	wifi-remote-station-manager.cc	/^WifiRemoteStationManager::~WifiRemoteStationManager ()$/;"	f	class:ns3::WifiRemoteStationManager
~WifiTxCurrentModel	wifi-tx-current-model.cc	/^WifiTxCurrentModel::~WifiTxCurrentModel()$/;"	f	class:ns3::WifiTxCurrentModel
~YansWifiChannel	yans-wifi-channel.cc	/^YansWifiChannel::~YansWifiChannel ()$/;"	f	class:ns3::YansWifiChannel
~YansWifiPhy	yans-wifi-phy.cc	/^YansWifiPhy::~YansWifiPhy ()$/;"	f	class:ns3::YansWifiPhy
